[{"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\index.js":"1","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\App.js":"2","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\serviceWorker.js":"3","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\Theme.js":"4","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\Route.js":"5","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\util\\ApiManager.js":"6","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\index.js":"7","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\Constant.js":"8","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\Dashboard.js":"9","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\auth\\Register.js":"10","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\auth\\Login.js":"11","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\Developer.js":"12","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\auth\\ForgetPassword.js":"13","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\me\\Profile.js":"14","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\me\\ChangePassword.js":"15","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\auth\\ResetPassword.js":"16","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\User.js":"17","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\Role.js":"18","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\UserDetail.js":"19","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\RoleDetail.js":"20","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\file\\File.js":"21","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\MenuDetail.js":"22","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\Menu.js":"23","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\ApiPermission.js":"24","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\SideMenu.js":"25","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\DrawerHeader.js":"26","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\Reducer.js":"27","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\NotificationMenu.js":"28","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\UserMenu.js":"29","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ScrollBar.js":"30","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\FileApi.js":"31","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\MenuApi.js":"32","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\MasterForm.js":"33","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\PaginationBar.js":"34","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\RoleApi.js":"35","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\TreeMenu.js":"36","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\SwaggerApi.js":"37","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\file\\ImagePreview.js":"38","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\file\\FileGrid.js":"39","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\file\\MultiUpload.js":"40","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\ImportMenu.js":"41","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\RouteApi.js":"42","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\index.js":"43","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\SearchInput.js":"44","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\util\\FormatManager.js":"45","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\index.js":"46","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\TextInput.js":"47","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\ImportDialog.js":"48","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\UserApi.js":"49","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\util\\LangManager.js":"50","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\FormDialog.js":"51","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\MasterTable.js":"52","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\AuthApi.js":"53","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\DraftEditorInput.js":"54","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\LoadingDialog.js":"55","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\QuestionDialog.js":"56","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\AlertDialog.js":"57","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\Notification.js":"58","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\Translate.js":"59","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\DataAction.js":"60","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\index.js":"61","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\HeaderCell.js":"62","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\Cell.js":"63","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\ActionMenu.js":"64","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\InfoCard.js":"65","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\TabControl.js":"66","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\GridControl.js":"67","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ColorInput.js":"68","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ChipInput.js":"69","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ListInput.js":"70","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\IconInput.js":"71","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ObjectInput.js":"72","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\NumberInput.js":"73","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\CheckboxInput.js":"74","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\PasswordInput.js":"75","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\EmailInput.js":"76","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\Copyright.js":"77","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\ProfileApi.js":"78","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\MultiImageInput.js":"79","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ImageInput.js":"80","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ColorPicker.js":"81","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\TablePicker.js":"82","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\IconPicker.js":"83","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\FilePicker.js":"84","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ListPicker.js":"85","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\MaterialIcon.js":"86"},{"size":597,"mtime":1592471916646,"results":"87","hashOfConfig":"88"},{"size":1026,"mtime":1588825833871,"results":"89","hashOfConfig":"88"},{"size":5868,"mtime":1606814767287,"results":"90","hashOfConfig":"88"},{"size":5089,"mtime":1606569519451,"results":"91","hashOfConfig":"88"},{"size":1758,"mtime":1588652360712,"results":"92","hashOfConfig":"88"},{"size":5129,"mtime":1605109187778,"results":"93","hashOfConfig":"88"},{"size":9728,"mtime":1605598715725,"results":"94","hashOfConfig":"88"},{"size":3456,"mtime":1624869765400,"results":"95","hashOfConfig":"88"},{"size":338,"mtime":1606814767273,"results":"96","hashOfConfig":"88"},{"size":4858,"mtime":1606814767282,"results":"97","hashOfConfig":"88"},{"size":6181,"mtime":1624952472512,"results":"98","hashOfConfig":"88"},{"size":5150,"mtime":1606814767273,"results":"99","hashOfConfig":"88"},{"size":4175,"mtime":1606814767280,"results":"100","hashOfConfig":"88"},{"size":7696,"mtime":1606814767286,"results":"101","hashOfConfig":"88"},{"size":4018,"mtime":1606814767285,"results":"102","hashOfConfig":"88"},{"size":4905,"mtime":1606814767283,"results":"103","hashOfConfig":"88"},{"size":6900,"mtime":1606814767279,"results":"104","hashOfConfig":"88"},{"size":2986,"mtime":1606814767277,"results":"105","hashOfConfig":"88"},{"size":7919,"mtime":1606814767280,"results":"106","hashOfConfig":"88"},{"size":4693,"mtime":1606814767278,"results":"107","hashOfConfig":"88"},{"size":7141,"mtime":1606814767284,"results":"108","hashOfConfig":"88"},{"size":353,"mtime":1588652361112,"results":"109","hashOfConfig":"88"},{"size":11485,"mtime":1606814767276,"results":"110","hashOfConfig":"88"},{"size":12385,"mtime":1606814767274,"results":"111","hashOfConfig":"88"},{"size":8052,"mtime":1600054017461,"results":"112","hashOfConfig":"88"},{"size":2192,"mtime":1594115600064,"results":"113","hashOfConfig":"88"},{"size":966,"mtime":1589958966944,"results":"114","hashOfConfig":"88"},{"size":6864,"mtime":1599207761730,"results":"115","hashOfConfig":"88"},{"size":4508,"mtime":1598609572514,"results":"116","hashOfConfig":"88"},{"size":410,"mtime":1599113508232,"results":"117","hashOfConfig":"88"},{"size":1438,"mtime":1591876390869,"results":"118","hashOfConfig":"88"},{"size":475,"mtime":1588652360474,"results":"119","hashOfConfig":"88"},{"size":6194,"mtime":1606583995792,"results":"120","hashOfConfig":"88"},{"size":3988,"mtime":1594182420810,"results":"121","hashOfConfig":"88"},{"size":179,"mtime":1588652360486,"results":"122","hashOfConfig":"88"},{"size":5316,"mtime":1594186228607,"results":"123","hashOfConfig":"88"},{"size":2176,"mtime":1606814767211,"results":"124","hashOfConfig":"88"},{"size":3808,"mtime":1591858189578,"results":"125","hashOfConfig":"88"},{"size":3742,"mtime":1592294317409,"results":"126","hashOfConfig":"88"},{"size":5648,"mtime":1589958966910,"results":"127","hashOfConfig":"88"},{"size":1502,"mtime":1600081526614,"results":"128","hashOfConfig":"88"},{"size":516,"mtime":1588652360492,"results":"129","hashOfConfig":"88"},{"size":1084,"mtime":1605683393222,"results":"130","hashOfConfig":"88"},{"size":3101,"mtime":1594185160525,"results":"131","hashOfConfig":"88"},{"size":5383,"mtime":1604390230729,"results":"132","hashOfConfig":"88"},{"size":304,"mtime":1589958966948,"results":"133","hashOfConfig":"88"},{"size":3903,"mtime":1604918779551,"results":"134","hashOfConfig":"88"},{"size":7012,"mtime":1600081521896,"results":"135","hashOfConfig":"88"},{"size":548,"mtime":1588652360505,"results":"136","hashOfConfig":"88"},{"size":1112,"mtime":1588652361262,"results":"137","hashOfConfig":"88"},{"size":1936,"mtime":1592294317419,"results":"138","hashOfConfig":"88"},{"size":14847,"mtime":1606471426514,"results":"139","hashOfConfig":"88"},{"size":1777,"mtime":1589958333762,"results":"140","hashOfConfig":"88"},{"size":3679,"mtime":1606815729867,"results":"141","hashOfConfig":"88"},{"size":1197,"mtime":1589958966947,"results":"142","hashOfConfig":"88"},{"size":1568,"mtime":1604916866686,"results":"143","hashOfConfig":"88"},{"size":1200,"mtime":1592294317418,"results":"144","hashOfConfig":"88"},{"size":1554,"mtime":1592472161614,"results":"145","hashOfConfig":"88"},{"size":11459,"mtime":1588652360726,"results":"146","hashOfConfig":"88"},{"size":3186,"mtime":1604911763773,"results":"147","hashOfConfig":"88"},{"size":13973,"mtime":1606368901126,"results":"148","hashOfConfig":"88"},{"size":2026,"mtime":1604990726020,"results":"149","hashOfConfig":"88"},{"size":2661,"mtime":1604918212195,"results":"150","hashOfConfig":"88"},{"size":2205,"mtime":1592294317422,"results":"151","hashOfConfig":"88"},{"size":1892,"mtime":1594961606999,"results":"152","hashOfConfig":"88"},{"size":4459,"mtime":1604994568770,"results":"153","hashOfConfig":"88"},{"size":1745,"mtime":1595477089701,"results":"154","hashOfConfig":"88"},{"size":6902,"mtime":1594710502292,"results":"155","hashOfConfig":"88"},{"size":7937,"mtime":1606581643436,"results":"156","hashOfConfig":"88"},{"size":4700,"mtime":1605672756458,"results":"157","hashOfConfig":"88"},{"size":8388,"mtime":1594186542526,"results":"158","hashOfConfig":"88"},{"size":9744,"mtime":1605672499703,"results":"159","hashOfConfig":"88"},{"size":1003,"mtime":1606572842996,"results":"160","hashOfConfig":"88"},{"size":1291,"mtime":1600064934951,"results":"161","hashOfConfig":"88"},{"size":2265,"mtime":1593588511019,"results":"162","hashOfConfig":"88"},{"size":921,"mtime":1593588321437,"results":"163","hashOfConfig":"88"},{"size":507,"mtime":1594179775757,"results":"164","hashOfConfig":"88"},{"size":753,"mtime":1588652360480,"results":"165","hashOfConfig":"88"},{"size":2925,"mtime":1606453737975,"results":"166","hashOfConfig":"88"},{"size":6608,"mtime":1606569849611,"results":"167","hashOfConfig":"88"},{"size":5100,"mtime":1598612226911,"results":"168","hashOfConfig":"88"},{"size":6967,"mtime":1605675201788,"results":"169","hashOfConfig":"88"},{"size":8725,"mtime":1594186187567,"results":"170","hashOfConfig":"88"},{"size":6489,"mtime":1605675704628,"results":"171","hashOfConfig":"88"},{"size":4434,"mtime":1605675767921,"results":"172","hashOfConfig":"88"},{"size":281151,"mtime":1588652360519,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"18qxwnl",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"189","usedDeprecatedRules":"176"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"176"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"176"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"176"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"176"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"176"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"176"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"176"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"176"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"176"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"176"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"176"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"176"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"176"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"176"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":11,"source":"240","usedDeprecatedRules":"176"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"243","usedDeprecatedRules":"176"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"246","usedDeprecatedRules":"176"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":5,"source":"249","usedDeprecatedRules":"176"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"252","usedDeprecatedRules":"176"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"255","usedDeprecatedRules":"176"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"262","usedDeprecatedRules":"176"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"265","usedDeprecatedRules":"176"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":7,"source":"270","usedDeprecatedRules":"176"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"275","usedDeprecatedRules":"176"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":6,"source":"278","usedDeprecatedRules":"176"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":8,"source":"281","usedDeprecatedRules":"176"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"284","usedDeprecatedRules":"176"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"291","usedDeprecatedRules":"176"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":28,"source":"294","usedDeprecatedRules":"176"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"299","usedDeprecatedRules":"176"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"302","usedDeprecatedRules":"176"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"307","usedDeprecatedRules":"176"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"310","usedDeprecatedRules":"176"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":18,"source":"313","usedDeprecatedRules":"176"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"176"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"319","usedDeprecatedRules":"176"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"322","usedDeprecatedRules":"176"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"325","usedDeprecatedRules":"176"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"334","usedDeprecatedRules":"176"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":17,"source":"337","usedDeprecatedRules":"176"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"340","usedDeprecatedRules":"176"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"176"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"346","usedDeprecatedRules":"176"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"349","usedDeprecatedRules":"176"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"352","usedDeprecatedRules":"176"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"355","usedDeprecatedRules":"176"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"358","usedDeprecatedRules":"176"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"361","usedDeprecatedRules":"176"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"364","usedDeprecatedRules":"176"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":7,"source":"367","usedDeprecatedRules":"176"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":9,"source":"370","usedDeprecatedRules":"176"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"373","usedDeprecatedRules":"176"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"376","usedDeprecatedRules":"176"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"379","usedDeprecatedRules":"176"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"382","usedDeprecatedRules":"176"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":3,"source":"389","usedDeprecatedRules":"176"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":6,"source":"392","usedDeprecatedRules":"176"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"395","usedDeprecatedRules":"176"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":"398","usedDeprecatedRules":"176"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":10,"source":"401","usedDeprecatedRules":"176"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":9,"source":"404","usedDeprecatedRules":"176"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":9,"source":"407","usedDeprecatedRules":"176"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\index.js",[],[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\App.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\serviceWorker.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\Theme.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\Route.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\util\\ApiManager.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\index.js",["410","411","412","413","414","415"],"import React, { useReducer, useEffect, useRef } from 'react';\r\nimport { Route, useHistory, Redirect } from 'react-router-dom';\r\nimport IdleTimer from 'react-idle-timer';\r\nimport { IconButton, Icon, Tooltip, makeStyles, AppBar, Toolbar, Typography, Box, CssBaseline, Drawer, Divider, useTheme } from '@material-ui/core';\r\nimport { PrivateRoute } from '../../config/Route';\r\nimport clsx from 'clsx';\r\nimport Scrollbar from '../control/ScrollBar';\r\nimport { SESSION_TIMEOUT, STORAGE_KEYS, APP_NAME, APP_VERSION, DEFAULT_SIDE_MENU, USER_PROFILE_MENU } from '../../config/Constant';\r\nimport { Copyright } from '../control';\r\nimport SideMenu from './SideMenu';\r\nimport NotificationMenu from './NotificationMenu';\r\nimport DrawerHeader from './DrawerHeader';\r\nimport Reducer, { ACTIONS } from './Reducer';\r\nimport FileApi from '../../api/FileApi';\r\nimport UserMenu from './UserMenu';\r\nimport MenuApi from '../../api/MenuApi';\r\n\r\nconst DRAWER_FULL_SIZE: number = window.innerWidth > 1400 ? 300 : 260;\r\nconst DRAWER_SMALL_SIZE: number = 64;\r\n\r\nconst MIN_WIDTH_TO_HIDE = 1060;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    logo: {\r\n        borderRadius: 3,\r\n        // border: '1px solid ' + theme.palette.common.gray,\r\n        marginRight: theme.spacing(2),\r\n        backgroundColor: theme.palette.primary.contrastText,\r\n        padding: 2,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawer: {\r\n        width: DRAWER_FULL_SIZE,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: DRAWER_FULL_SIZE,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: DRAWER_SMALL_SIZE,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: DRAWER_SMALL_SIZE,\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    copyRight: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport type LayoutProps = {\r\n    onToggleMode: () => void,\r\n    mode: 'LIGHT' | 'DARK',\r\n};\r\n\r\nconst Layout = (props: LayoutProps) => {\r\n    const { onToggleMode, mode } = props;\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const currentUser = sessionStorage.getItem(STORAGE_KEYS.CURRENT_USER) || '';\r\n    const user = currentUser.length ? JSON.parse(currentUser) : {};\r\n    const userProfileImage = FileApi.downloadLink(user.profileImage, 'small') || './images/logo.png';\r\n    const idleTimer = useRef(null);\r\n\r\n    const handleLogout = () => {\r\n        sessionStorage.clear();\r\n        history.push('/login');\r\n    };\r\n\r\n    const logoutMenu = {\r\n        id: 'sys-logout',\r\n        label: 'Logout',\r\n        icon: 'lock',\r\n        divider: true,\r\n        onClick: handleLogout,\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(Reducer, {\r\n        menus: [...DEFAULT_SIDE_MENU, logoutMenu],\r\n        openIds: [],\r\n        hideMenu: window.innerWidth < MIN_WIDTH_TO_HIDE,\r\n    });\r\n\r\n    const loadMenu = async () => {\r\n        if (currentUser.length <= 0) return;\r\n\r\n        const menus = await MenuApi.getCurrentUserMenu();\r\n        if (menus && menus.data.length > 0) {\r\n            const uniqueMenus = menus.data.reduce((unique, o) => {\r\n                if (!unique.some(obj => obj.id === o.id)) {\r\n                    unique.push(o);\r\n                }\r\n                return unique;\r\n            }, []);\r\n\r\n            let mainMenu = uniqueMenus.filter(m => !m.parentId);\r\n\r\n            //Recurrsively sort menus\r\n            const sortMenu = items =>\r\n                items.sort((a, b) => {\r\n                    if (a.items && a.items.length > 0) {\r\n                        sortMenu(a.items);\r\n                    }\r\n                    return a.priority - b.priority;\r\n                });\r\n\r\n            sortMenu(mainMenu);\r\n\r\n            dispatch({\r\n                type: ACTIONS.LOAD,\r\n                payload: {\r\n                    ...state,\r\n                    menus: [...mainMenu, USER_PROFILE_MENU, logoutMenu],\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadMenu();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IdleTimer ref={idleTimer} element={document} onIdle={handleLogout} debounce={1000} timeout={SESSION_TIMEOUT} />\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <img src={`/${'images/logo.png'}`} height={theme.spacing(5)} alt=\"SUNDEW MYANMAR\" className={classes.logo} />\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        {APP_NAME} ({APP_VERSION})\r\n                    </Typography>\r\n                    <div />\r\n                    <div>\r\n                        <NotificationMenu name=\"Notifications\" />\r\n                        {/* <NotificationMenu name=\"New Orders\" icon=\"shopping_cart\" /> */}\r\n                        <Tooltip title={mode === 'DARK' ? 'Toggle Light Mode' : 'Toggle Dark Mode'}>\r\n                            <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={() => {\r\n                                    if (onToggleMode) {\r\n                                        onToggleMode(mode === 'DARK' ? 'LIGHT' : 'DARK');\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <Icon>{mode === 'DARK' ? 'brightness_7' : 'brightness_4'}</Icon>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <UserMenu\r\n                            image={user.profileImage}\r\n                            name={user.displayName || user.email}\r\n                            role={\r\n                                user.roles &&\r\n                                user.roles\r\n                                    .map(function(elem) {\r\n                                        return elem.name;\r\n                                    })\r\n                                    .join(', ')\r\n                            }\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: !state.hideMenu,\r\n                    [classes.drawerClose]: state.hideMenu,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: !state.hideMenu,\r\n                        [classes.drawerClose]: state.hideMenu,\r\n                    }),\r\n                }}\r\n                style={state.hideMenu ? { width: DRAWER_SMALL_SIZE } : { width: DRAWER_FULL_SIZE }}\r\n            >\r\n                <div className={classes.appBarSpacer} />\r\n                <DrawerHeader\r\n                    hideMenu={state.hideMenu}\r\n                    image={userProfileImage}\r\n                    name={user.displayName}\r\n                    onMenuClick={() => dispatch({ type: ACTIONS.SIZE_CHNGE })}\r\n                />\r\n                <Divider className={classes.divider} />\r\n                <SideMenu state={state} dispatch={dispatch} />\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Scrollbar>\r\n                    <div className={classes.appBarSpacer} />\r\n                    <div className={classes.container}>\r\n                        {PrivateRoute.map((route, index) => {\r\n                            return (\r\n                                <Route\r\n                                    exact\r\n                                    key={index}\r\n                                    path={route.path}\r\n                                    render={props => (currentUser.length > 0 ? <route.page {...props} /> : <Redirect to=\"/login\" />)}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <Box pt={4} className={classes.copyRight}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Scrollbar>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\Constant.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\Dashboard.js",["416"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Dashboard = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h1\">Welcome</Typography>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default withRouter(Dashboard);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\auth\\Register.js",["417"],"import React, { useState } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { Typography, Container, CssBaseline, Avatar, Icon, Grid, Button, Link, Box, Paper, makeStyles } from '@material-ui/core';\r\n\r\nimport { Copyright } from '../../fragment/control';\r\nimport { LoadingDialog, AlertDialog } from '../../fragment/message';\r\nimport AuthApi from '../../api/AuthApi';\r\nimport MasterForm from '../../fragment/MasterForm';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.text.active,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loginWith: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    logoImage: {\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Register = (props) => {\r\n    const classes = styles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = (event, form) => {\r\n        if (!window.navigator.onLine) {\r\n            setError('Please check your internet connection and try again.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        const userData = {\r\n            displayName: form.displayName,\r\n            email: form.email,\r\n            phoneNumber: form.phoneNumber,\r\n            password: form.password,\r\n        };\r\n\r\n        AuthApi.register(userData)\r\n            .then(() => {\r\n                setLoading(false);\r\n                sessionStorage.setItem(STORAGE_KEYS.FLASH_MESSAGE, 'Register success! Please log in to continue.');\r\n                history.push('/login');\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n            });\r\n    };\r\n\r\n    const registerFields = [\r\n        {\r\n            id: 'displayName',\r\n            label: 'Full Name',\r\n            icon: 'face',\r\n            required: true,\r\n            type: 'text',\r\n        },\r\n        {\r\n            id: 'phoneNumber',\r\n            label: 'Phone number',\r\n            icon: 'phone',\r\n            required: true,\r\n            type: 'text',\r\n        },\r\n        {\r\n            id: 'email',\r\n            label: 'E-mail',\r\n            required: true,\r\n            type: 'email',\r\n        },\r\n        {\r\n            id: 'password',\r\n            label: 'Password',\r\n            required: true,\r\n            type: 'password',\r\n        },\r\n        {\r\n            id: 'confirmPassword',\r\n            label: 'Confirm Password',\r\n            required: true,\r\n            type: 'password',\r\n            onValidate: (event, form) => (form.password !== event.target.value ? \"Password and Confirm Password doesn't match.\" : ''),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n                <CssBaseline />\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>description</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Registration Form\r\n                    </Typography>\r\n                    <MasterForm fields={registerFields} onSubmit={handleSubmit}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            Register Now\r\n                        </Button>\r\n                    </MasterForm>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/#/login\" color=\"textSecondary\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                <Box>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Register);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\auth\\Login.js",["418"],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\Developer.js",["419"],"import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Typography, Container, Paper, Avatar, Icon, makeStyles, Grid, Button, Divider } from '@material-ui/core';\r\nimport { AlertDialog, LoadingDialog } from '../fragment/message';\r\nimport { TextInput, ListInput } from '../fragment/control';\r\nimport ApiManager from '../util/ApiManager';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    submit: {\r\n        height: 55,\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    codePreview: {\r\n        height: 320,\r\n        width: '100%',\r\n        overflow: 'auto',\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.primary.main,\r\n        border: '1px solid ' + theme.palette.divider,\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst apiManager = new ApiManager('/');\r\n\r\nconst Developer = (props) => {\r\n    const classes = styles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState('');\r\n    const [form, setForm] = React.useState({});\r\n    const [output, setOutput] = React.useState({});\r\n\r\n    const handleError = (error) => {\r\n        setLoading(false);\r\n        setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n    };\r\n\r\n    const handleResult = (result) => {\r\n        setLoading(false);\r\n        setOutput(result);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        form[event.target.name] = event.target.value;\r\n        setForm(form);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setLoading(true);\r\n        switch (form.type) {\r\n            case 'GET':\r\n                apiManager.get(form.url, apiManager.getHeaders(true)).then(handleResult).catch(handleError);\r\n                break;\r\n            case 'POST':\r\n                apiManager.post(form.url, JSON.parse(form.body), apiManager.getHeaders(true)).then(handleResult).catch(handleError);\r\n                break;\r\n            case 'PUT':\r\n                apiManager.put(form.url, JSON.parse(form.body), apiManager.getHeaders(true)).then(handleResult).catch(handleError);\r\n                break;\r\n            case 'DELETE':\r\n                apiManager.delete(form.url, JSON.parse(form.body), apiManager.getHeaders(true)).then(handleResult).catch(handleError);\r\n                break;\r\n            default:\r\n                setLoading(false);\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"lg\">\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>code</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Api Request Tool\r\n                    </Typography>\r\n                    <Grid alignItems=\"center\" alignContent=\"space-between\" spacing={2} container direction=\"row\">\r\n                        <Grid item lg={2} md={3} sm={4} xs={12}>\r\n                            <ListInput\r\n                                id=\"type\"\r\n                                label=\"Type\"\r\n                                required={true}\r\n                                data={['GET', 'POST', 'PUT', 'DELETE']}\r\n                                value=\"GET\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={8} md={7} sm={8} xs={12}>\r\n                            <TextInput id=\"url\" label=\"URL\" type=\"url\" required={true} onChange={handleChange} />\r\n                        </Grid>\r\n                        <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                            <Button type=\"button\" className={classes.submit} fullWidth variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n                                <Icon>send</Icon> Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid container>\r\n                        <TextInput id=\"body\" label=\"Body JSON\" multiline={true} rows=\"8\" onChange={handleChange} />\r\n                    </Grid>\r\n                    <Grid container>\r\n                        <div className={classes.codePreview}>\r\n                            <code>{JSON.stringify(output, null, '\\n\\t')}</code>\r\n                        </div>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Developer);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\auth\\ForgetPassword.js",["420"],"import React, { useState } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { Typography, Paper, Container, CssBaseline, Avatar, Icon, Grid, Button, Link, Box, makeStyles } from '@material-ui/core';\r\n\r\nimport Copyright from '../../fragment/control/Copyright';\r\nimport MasterForm from '../../fragment/MasterForm';\r\nimport AuthApi from '../../api/AuthApi';\r\nimport { AlertDialog, LoadingDialog } from '../../fragment/message';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.text.active,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loginWith: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    logoImage: {\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst ForgetPassword = (props) => {\r\n    const classes = styles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = (event, form) => {\r\n        if (!window.navigator.onLine) {\r\n            setError('Please check your internet connection and try again.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const callbackUrl = window.location.origin + '/auth/resetPassword';\r\n\r\n        AuthApi.forgetPassword({ ...form, callback: callbackUrl })\r\n            .then((data) => {\r\n                setLoading(false);\r\n                sessionStorage.setItem(STORAGE_KEYS.FLASH_MESSAGE, data.message);\r\n                history.push('/login');\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n            });\r\n    };\r\n\r\n    const forgetPasswordFields = [\r\n        {\r\n            id: 'phoneNumber',\r\n            label: 'Phone number',\r\n            icon: 'phone',\r\n            required: true,\r\n            type: 'text',\r\n        },\r\n        {\r\n            id: 'email',\r\n            label: 'E-mail',\r\n            required: true,\r\n            type: 'email',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>dialpad</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Forget Password\r\n                    </Typography>\r\n                    <MasterForm fields={forgetPasswordFields} onSubmit={handleSubmit}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            Request OTP\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"/#/login\" color=\"textSecondary\" variant=\"body2\">\r\n                                    Remember your password? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </MasterForm>\r\n                </Paper>\r\n                <Box>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ForgetPassword);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\me\\Profile.js",["421"],"import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Typography, Container, makeStyles, Paper, Avatar, Icon, Button } from '@material-ui/core';\r\nimport { AlertDialog, LoadingDialog, Notification } from '../../fragment/message';\r\nimport MasterForm from '../../fragment/MasterForm';\r\nimport FileApi from '../../api/FileApi';\r\nimport ProfileApi from '../../api/ProfileApi';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\nimport { primary, secondary } from '../../config/Theme';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.text.active,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loginWith: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    logoImage: {\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n    const classes = styles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleError = (error) => {\r\n        setLoading(false);\r\n        setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n    };\r\n\r\n    const [user, setUser] = useState(() => {\r\n        ProfileApi.getProfile()\r\n            .then((data) => {\r\n                if (!data.currentToken) {\r\n                    data.currentToken = user.currentToken;\r\n                }\r\n                if (data.extras && data.extras.theme) {\r\n                    let theme = JSON.parse(data.extras.theme);\r\n                    console.log('theme', theme);\r\n                    data.primary = theme.primary.main || primary.main;\r\n                    data.secondary = theme.secondary.main || secondary.main;\r\n                    data.darkMode = theme.darkMode || false;\r\n                } else {\r\n                    data.primary = primary.main;\r\n                    data.secondary = secondary.main;\r\n                    data.darkMode = false;\r\n                }\r\n                console.log('theme2', data);\r\n                setUser(data);\r\n            })\r\n            .catch(handleError);\r\n        return JSON.parse(sessionStorage.getItem(STORAGE_KEYS.CURRENT_USER) || { displayName: '', email: '', phoneNumber: '', roles: [] });\r\n    });\r\n    const [noti, setNoti] = useState('');\r\n\r\n    const handleSubmit = async (form) => {\r\n        setLoading(true);\r\n        try {\r\n            let profile = {\r\n                id: user.id,\r\n                displayName: form.displayName || user.displayName,\r\n                email: user.email,\r\n                roles: user.roles,\r\n                status: user.status,\r\n                phoneNumber: user.phoneNumber,\r\n                extras: user.extras || {},\r\n            };\r\n\r\n            let theme = {\r\n                primary: form.primary ? FormatManager.generateThemeColors(form.primary) : primary,\r\n                secondary: form.secondary ? FormatManager.generateThemeColors(form.secondary) : secondary,\r\n                darkMode: form.darkMode ? true : false,\r\n            };\r\n\r\n            profile.extras.theme = JSON.stringify(theme);\r\n            console.log('profile', profile);\r\n            if (form.image && form.image.id) {\r\n                profile.profileImage = form.image;\r\n            } else if (form.image && !form.image.id) {\r\n                const fileResponse = await FileApi.upload(form.image, false);\r\n                if (fileResponse) {\r\n                    profile.profileImage = fileResponse;\r\n                }\r\n            } else {\r\n                profile.profileImage = null;\r\n            }\r\n\r\n            const response = await ProfileApi.updateProfile(profile);\r\n\r\n            if (response) {\r\n                if (!response.currentToken) {\r\n                    delete response.currentToken;\r\n                }\r\n                console.log('Current User => ', user);\r\n                const updatedData = { ...user, ...response };\r\n                console.log('Modified user => ', updatedData);\r\n                sessionStorage.setItem(STORAGE_KEYS.CURRENT_USER, JSON.stringify(updatedData));\r\n                setUser(updatedData);\r\n                setLoading(false);\r\n                setNoti('Successfully update your new profile.');\r\n            }\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    };\r\n\r\n    const profileFields = [\r\n        {\r\n            id: 'image',\r\n            type: 'image',\r\n            enableFilePicker: true,\r\n            value: user ? user.profileImage : null,\r\n            size: { width: 256, height: 256 },\r\n        },\r\n        {\r\n            id: 'displayName',\r\n            label: 'Full Name',\r\n            icon: 'face',\r\n            required: true,\r\n            type: 'text',\r\n            value: user ? user.displayName : '',\r\n        },\r\n        {\r\n            id: 'phoneNumber',\r\n            label: 'Phone number',\r\n            icon: 'phone',\r\n            required: true,\r\n            type: 'text',\r\n            value: user ? user.phoneNumber : '',\r\n            disabled: true,\r\n        },\r\n        {\r\n            id: 'email',\r\n            label: 'E-mail',\r\n            required: true,\r\n            type: 'email',\r\n            value: user ? user.email : '',\r\n            disabled: true,\r\n        },\r\n        {\r\n            id: 'primary',\r\n            label: 'Primary Color',\r\n            required: false,\r\n            type: 'color',\r\n            value: user ? user.primary : '',\r\n        },\r\n        {\r\n            id: 'secondary',\r\n            label: 'Secondary Color',\r\n            required: false,\r\n            type: 'color',\r\n            value: user ? user.secondary : '',\r\n        },\r\n        {\r\n            id: 'darkMode',\r\n            label: 'Dark Mode',\r\n            required: false,\r\n            type: 'checkbox',\r\n            value: user ? user.darkMode : false,\r\n            checked: user ? (user.darkMode ? true : false) : false,\r\n        },\r\n    ];\r\n\r\n    const userName = user.displayName || 'Unknown';\r\n\r\n    return (\r\n        <>\r\n            <Notification show={noti.length > 0} onClose={() => setNoti(false)} type=\"success\" message={noti} />\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container maxWidth=\"md\">\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>account_circle</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        {userName + \"'s Profile\"}\r\n                    </Typography>\r\n                    <MasterForm fields={profileFields} onSubmit={(event, form) => handleSubmit(form)}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            <Icon fontSize=\"small\">save</Icon> Save\r\n                        </Button>\r\n                    </MasterForm>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Profile);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\me\\ChangePassword.js",["422","423"],"import React, { useState } from 'react';\r\nimport { withRouter, useHistory } from 'react-router';\r\nimport { Typography, Container, CssBaseline, Paper, Avatar, Icon, Button, makeStyles } from '@material-ui/core';\r\nimport { AlertDialog, LoadingDialog } from '../../fragment/message';\r\nimport MasterForm from '../../fragment/MasterForm';\r\nimport ProfileApi from '../../api/ProfileApi';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loginWith: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    logoImage: {\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst changePasswordFields = [\r\n    {\r\n        id: 'oldPassword',\r\n        label: 'Old Password',\r\n        required: true,\r\n        type: 'password',\r\n    },\r\n    {\r\n        id: 'newPassword',\r\n        label: 'New Password',\r\n        required: true,\r\n        type: 'password',\r\n    },\r\n    {\r\n        id: 'confirmPassword',\r\n        label: 'Confirm Password',\r\n        required: true,\r\n        type: 'password',\r\n        onValidate: (event, form) => (form.newPassword !== event.target.value ? \"Password and Confirm Password doesn't match.\" : ''),\r\n    },\r\n];\r\n\r\nconst ChangePassword = (props) => {\r\n    const classes = styles();\r\n    const history = useHistory();\r\n    const user = JSON.parse(sessionStorage.getItem(STORAGE_KEYS.CURRENT_USER));\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = (event, form) => {\r\n        if (!window.navigator.onLine) {\r\n            setError('Please check your internet connection and try again.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        const data = {\r\n            newPassword: form.newPassword,\r\n            oldPassword: form.oldPassword,\r\n            user: user.email || user.phoneNumber,\r\n        };\r\n\r\n        ProfileApi.changePassword(data)\r\n            .then((response) => {\r\n                sessionStorage.clear();\r\n                sessionStorage.setItem(STORAGE_KEYS.FLASH_MESSAGE, 'Password has changed! Please log in with new password.');\r\n                history.push('/login');\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n                <CssBaseline />\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>vpn_key</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Change Password\r\n                    </Typography>\r\n                    <MasterForm fields={changePasswordFields} onSubmit={handleSubmit}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            Change & Logout Now\r\n                        </Button>\r\n                    </MasterForm>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ChangePassword);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\auth\\ResetPassword.js",["424"],"import React, { useState } from 'react';\r\nimport { withRouter, useHistory, useLocation } from 'react-router-dom';\r\nimport { Typography, Container, CssBaseline, Avatar, Icon, Button, Box, makeStyles } from '@material-ui/core';\r\n\r\nimport { Copyright } from '../../fragment/control';\r\nimport MasterForm from '../../fragment/MasterForm';\r\nimport { AlertDialog, LoadingDialog } from '../../fragment/message';\r\nimport AuthApi from '../../api/AuthApi';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n        paddingBottom: theme.spacing(0.5),\r\n        marginBottom: theme.spacing(4),\r\n        borderRadius: 4,\r\n        boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\r\n    },\r\n    paper: {\r\n        paddingTop: theme.spacing(2),\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.text.active,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loginWith: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    logoImage: {\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst ResetPassword = (props) => {\r\n    const classes = styles();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const query = new URLSearchParams(location.search);\r\n    const token = query.get('token') || 'Invalid Token';\r\n    const user = query.get('user') || 'Unknown';\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = (event, form) => {\r\n        if (!window.navigator.onLine) {\r\n            setError('Please check your internet connection and try again.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const requestData = {\r\n            user: user,\r\n            oldPassword: token,\r\n            newPassword: form.password,\r\n        };\r\n\r\n        AuthApi.resetPassword(requestData)\r\n            .then((data) => {\r\n                setLoading(false);\r\n                sessionStorage.setItem(STORAGE_KEYS.FLASH_MESSAGE, `Welcome ${data.displayName}.`);\r\n                history.push('/login');\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n            });\r\n    };\r\n\r\n    const resetPasswordFields = [\r\n        {\r\n            id: 'user',\r\n            label: 'User Info',\r\n            icon: 'account_circle',\r\n            disabled: true,\r\n            type: 'text',\r\n            value: user,\r\n        },\r\n        {\r\n            id: 'password',\r\n            label: 'Password',\r\n            required: true,\r\n            type: 'password',\r\n        },\r\n        {\r\n            id: 'confirmPassword',\r\n            label: 'Confirm Password',\r\n            required: true,\r\n            type: 'password',\r\n            onValidate: (event, form) => (form.password !== event.target.value ? \"Password and Confirm Password doesn't match.\" : ''),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <Box className={classes.container} boxShadow={2}>\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <Icon>vpn_key</Icon>\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Reset Password\r\n                        </Typography>\r\n                        <MasterForm fields={resetPasswordFields} onSubmit={handleSubmit}>\r\n                            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                                Reset Now\r\n                            </Button>\r\n                        </MasterForm>\r\n                    </div>\r\n                </Box>\r\n                <Box>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ResetPassword);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\User.js",["425"],"import React, { useState } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport MasterTable from '../../fragment/MasterTable';\r\nimport UserApi from '../../api/UserApi';\r\nimport { AlertDialog, Notification } from '../../fragment/message';\r\nimport FormDialog from '../../fragment/message/FormDialog';\r\nimport LangManager from '../../util/LangManager';\r\nimport { useTheme } from '@material-ui/core';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\n\r\nexport const USER_TABLE_FIELDS = [\r\n    {\r\n        name: 'id',\r\n        align: 'center',\r\n        label: 'ID',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'profileImage',\r\n        align: 'center',\r\n        label: 'Image',\r\n        type: 'image',\r\n    },\r\n    {\r\n        name: 'roles',\r\n        align: 'left',\r\n        label: 'Roles',\r\n        onLoad: (item) => {\r\n            if (item.roles && item.roles.length > 0) {\r\n                return item.roles.map((role) => LangManager.translateToUni(role.name)).join(', ');\r\n            }\r\n            return 'No Role';\r\n        },\r\n    },\r\n    {\r\n        name: 'displayName',\r\n        align: 'left',\r\n        label: 'Name',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'phoneNumber',\r\n        align: 'left',\r\n        label: 'Phone',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'email',\r\n        align: 'left',\r\n        label: 'Email',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'facebookId',\r\n        align: 'center',\r\n        label: 'FB_User',\r\n        type: 'bool',\r\n        sortable: true,\r\n        width: 50,\r\n        onLoad: (item) => item.facebookId,\r\n    },\r\n    {\r\n        name: 'status',\r\n        align: 'center',\r\n        label: 'Status',\r\n        type: 'bool',\r\n        sortable: 'true',\r\n        width: 50,\r\n        onLoad: (item) => item.status.toLowerCase() === 'active',\r\n    },\r\n];\r\nconst User = (props) => {\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n\r\n    const [alert, setAlert] = useState('');\r\n    const [noti, setNoti] = useState(() => {\r\n        const flashMessage = sessionStorage.getItem(STORAGE_KEYS.FLASH_MESSAGE);\r\n        return flashMessage || '';\r\n    });\r\n    const [resetForm, setResetForm] = useState(null);\r\n\r\n    const handleError = (error) => {\r\n        setAlert(error.message || error.title || 'Please check your internet connection and try again.');\r\n    };\r\n\r\n    const handleImport = async (result) => {\r\n        return UserApi.importData(result);\r\n    };\r\n\r\n    const handleLoadData = async (currentPage, pageSize, sort, search) => {\r\n        try {\r\n            const result = await UserApi.getPaging(currentPage, pageSize, sort, search);\r\n            return result;\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    };\r\n\r\n    const handleRemoveData = async (removeData) => {\r\n        if (typeof removeData === 'object') {\r\n            return await UserApi.removeById(removeData.id);\r\n        } else if (Array.isArray(removeData) && removeData.length > 0) {\r\n            const removeIds = removeData.map((item) => item.id);\r\n            return await UserApi.removeAll(removeIds);\r\n        }\r\n    };\r\n\r\n    const handleDetail = (item) => {\r\n        let url = '/user/detail/';\r\n        url += item ? item.id : 0;\r\n        history.push(url);\r\n    };\r\n\r\n    const handleItemAction = (item, data) => {\r\n        switch (item.id) {\r\n            case 'resetPasword':\r\n                setResetForm(data);\r\n                break;\r\n            case 'cleanToken':\r\n                UserApi.cleanToken(data.id)\r\n                    .then((response) => {\r\n                        setNoti(response.message);\r\n                    })\r\n                    .catch(handleError);\r\n                break;\r\n            default:\r\n                setAlert('Invalid Action!');\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleResetForm = (event, form) => {\r\n        const data = {\r\n            newPassword: form.newPassword,\r\n            oldPassword: form.adminPassword,\r\n            user: resetForm.email || resetForm.phoneNumber,\r\n        };\r\n\r\n        UserApi.resetPassword(resetForm.id, data)\r\n            .then((response) => {\r\n                setNoti('Succesfully changed password for ' + response.displayName);\r\n                setResetForm(null);\r\n            })\r\n            .catch(handleError);\r\n    };\r\n\r\n    const resetPasswordFields = [\r\n        {\r\n            id: 'adminPassword',\r\n            label: 'Admin Password',\r\n            required: true,\r\n            type: 'password',\r\n            autoFocus: true,\r\n        },\r\n        {\r\n            id: 'newPassword',\r\n            label: 'New Password',\r\n            required: true,\r\n            type: 'password',\r\n        },\r\n        {\r\n            id: 'confirmPassword',\r\n            label: 'Confirm Password',\r\n            required: true,\r\n            type: 'password',\r\n            onValidate: (event, form) => (form.newPassword !== event.target.value ? \"Password and Confirm Password doesn't match.\" : ''),\r\n        },\r\n    ];\r\n\r\n    const resetPasswordTitle = resetForm ? 'Reset password for ' + resetForm.displayName : 'Reset password for Htoonlin';\r\n\r\n    const gridFields = USER_TABLE_FIELDS.map((f) => f.name);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Notification show={noti.length > 0} onClose={() => setNoti(false)} type=\"success\" message={noti} />\r\n            <AlertDialog onClose={() => setAlert('')} show={alert.length > 0} title=\"Message\" message={alert} />\r\n            <FormDialog\r\n                title={resetPasswordTitle}\r\n                show={resetForm !== null && resetForm.id > 0}\r\n                onClose={() => setResetForm(false)}\r\n                fields={resetPasswordFields}\r\n                onSubmit={handleResetForm}\r\n            />\r\n            <MasterTable\r\n                title=\"Users\"\r\n                fields={USER_TABLE_FIELDS}\r\n                importFields={[...gridFields, 'extras', 'password']}\r\n                onLoad={handleLoadData}\r\n                onEdit={handleDetail}\r\n                onAddNew={() => handleDetail(null)}\r\n                onRemove={handleRemoveData}\r\n                onError={handleError}\r\n                onImport={handleImport}\r\n                onItemAction={handleItemAction}\r\n                moreActions={[\r\n                    {\r\n                        id: 'resetPasword',\r\n                        label: 'Reset Password',\r\n                        icon: 'vpn_key',\r\n                        color: theme.palette.warning.main,\r\n                    },\r\n                    {\r\n                        id: 'cleanToken',\r\n                        label: 'Clean Auth Tokens',\r\n                        icon: 'devices',\r\n                        color: theme.palette.info.main,\r\n                    },\r\n                ]}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default withRouter(User);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\Role.js",["426"],"import React from 'react';\r\nimport { withRouter, useHistory } from 'react-router';\r\nimport MasterTable from '../../fragment/MasterTable';\r\nimport { AlertDialog, Notification } from '../../fragment/message';\r\nimport RoleApi from '../../api/RoleApi';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\n\r\nexport const ROLE_TABLE_FIELDS = [\r\n    {\r\n        name: 'id',\r\n        align: 'center',\r\n        label: 'Id',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'name',\r\n        align: 'left',\r\n        label: 'Name',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'description',\r\n        align: 'left',\r\n        label: 'Description',\r\n        sortable: true,\r\n    },\r\n];\r\n\r\nconst Role = (props) => {\r\n    const history = useHistory();\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [noti, setNoti] = React.useState(() => {\r\n        const flashMessage = sessionStorage.getItem(STORAGE_KEYS.FLASH_MESSAGE);\r\n        return flashMessage || '';\r\n    });\r\n\r\n    const handleError = (error) => {\r\n        setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n    };\r\n\r\n    const handleLoadData = async (currentPage, pageSize, sort, search) => {\r\n        try {\r\n            const result = await RoleApi.getPaging(currentPage, pageSize, sort, search);\r\n            return result;\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n        return {};\r\n    };\r\n\r\n    const handleRemoveData = async (removeData) => {\r\n        console.log('Remove IDs => ', typeof removeData === 'object');\r\n        if (removeData && removeData.id) {\r\n            return RoleApi.removeById(removeData.id);\r\n        } else if (Array.isArray(removeData) && removeData.length > 0) {\r\n            console.log('Remove IDs => ', Array.isArray(removeData) && removeData.length > 0);\r\n            const removeIds = removeData.map((item) => item.id);\r\n            return RoleApi.removeAll(removeIds);\r\n        }\r\n    };\r\n\r\n    const handleDetail = (item) => {\r\n        let url = '/role/detail/';\r\n        url += item ? item.id : 0;\r\n        history.push(url);\r\n    };\r\n\r\n    const handleImport = async (result) => {\r\n        return RoleApi.importData(result);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Notification show={noti.length > 0} onClose={() => setNoti(false)} type=\"success\" message={noti} />\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <MasterTable\r\n                title=\"Roles\"\r\n                fields={ROLE_TABLE_FIELDS}\r\n                importFields={['id', 'name', 'description']}\r\n                onLoad={handleLoadData}\r\n                onEdit={handleDetail}\r\n                onAddNew={() => handleDetail(null)}\r\n                onRemove={handleRemoveData}\r\n                onImport={handleImport}\r\n                onError={handleError}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Role);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\UserDetail.js",["427"],"import React, { useState } from 'react';\r\nimport { withRouter, useHistory, useParams } from 'react-router-dom';\r\nimport { Typography, Container, Avatar, Icon, Grid, Button, Paper, makeStyles } from '@material-ui/core';\r\n\r\nimport { LoadingDialog, AlertDialog } from '../../fragment/message';\r\nimport RoleApi from '../../api/RoleApi';\r\nimport MasterForm from '../../fragment/MasterForm';\r\nimport UserApi from '../../api/UserApi';\r\nimport { ROLE_TABLE_FIELDS } from './Role';\r\nimport FileApi from '../../api/FileApi';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    submit: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst UserDetail = (props) => {\r\n    const classes = styles();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [isUpdate, setUpdate] = useState(id > 0);\r\n\r\n    const handleRoleData = async (currentPage, pageSize, sort, search) => {\r\n        return await RoleApi.getPaging(currentPage, pageSize, sort, search);\r\n    };\r\n\r\n    const handleError = (error) => {\r\n        setLoading(false);\r\n        setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n    };\r\n\r\n    const [detail, setDetail] = useState(() => {\r\n        setLoading(true);\r\n        UserApi.getById(id)\r\n            .then((data) => {\r\n                setDetail(data);\r\n                setUpdate(true);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code !== 'HTTP_406') {\r\n                    handleError(error);\r\n                } else {\r\n                    setUpdate(false);\r\n                }\r\n            })\r\n            .finally(() => setLoading(false));\r\n        return {};\r\n    });\r\n\r\n    const handleSubmit = async (form) => {\r\n        if (!window.navigator.onLine) {\r\n            setError('Please check your internet connection and try again.');\r\n            return;\r\n        }\r\n\r\n        let user = {\r\n            displayName: form.displayName,\r\n            phoneNumber: form.phoneNumber,\r\n            email: form.email,\r\n            roles: form.roles,\r\n            password: form.password,\r\n            status: form.status ? 'ACTIVE' : 'CANCEL',\r\n            extras: {\r\n                address: form.address || '',\r\n                gender: form.gender && typeof form.gender === 'string' ? form.gender : '',\r\n            },\r\n        };\r\n\r\n        if (form.image && form.image.id) {\r\n            user.profileImage = form.image;\r\n        } else if (form.image && !form.image.id) {\r\n            const fileResponse = await FileApi.upload(form.image, false);\r\n            if (fileResponse) {\r\n                user.profileImage = fileResponse;\r\n            }\r\n        } else {\r\n            user.profileImage = null;\r\n        }\r\n\r\n        if (isUpdate) {\r\n            user.id = detail.id;\r\n            user.password = 'default_password';\r\n            user.version = detail.version;\r\n            UserApi.modifyById(id, user)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    sessionStorage.setItem(STORAGE_KEYS.FLASH_MESSAGE, 'Modified user : ' + response.id + ' .');\r\n                    history.push('/user');\r\n                })\r\n                .catch(handleError);\r\n        } else {\r\n            UserApi.addNew(user)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    sessionStorage.setItem(STORAGE_KEYS.FLASH_MESSAGE, 'Created new user : ' + response.id + ' .');\r\n                    history.push('/user');\r\n                })\r\n                .catch(handleError);\r\n        }\r\n\r\n        setLoading(true);\r\n    };\r\n\r\n    const newUserFields = [\r\n        {\r\n            id: 'password',\r\n            label: 'Password',\r\n            required: true,\r\n            type: 'password',\r\n        },\r\n        {\r\n            id: 'confirmPassword',\r\n            label: 'Confirm Password',\r\n            required: true,\r\n            type: 'password',\r\n            onValidate: (event, form) => (form.password !== event.target.value ? \"Password and Confirm Password doesn't match.\" : ''),\r\n        },\r\n    ];\r\n\r\n    const fields = [\r\n        {\r\n            id: 'image',\r\n            type: 'image',\r\n            enableFilePicker: true,\r\n            required: true,\r\n            value: detail.profileImage || null,\r\n        },\r\n        {\r\n            id: 'displayName',\r\n            label: 'Full Name',\r\n            icon: 'face',\r\n            required: true,\r\n            type: 'text',\r\n            value: detail.displayName,\r\n        },\r\n        {\r\n            id: 'email',\r\n            label: 'E-mail',\r\n            required: true,\r\n            type: 'email',\r\n            value: detail.email,\r\n        },\r\n        {\r\n            id: 'phoneNumber',\r\n            label: 'Phone number',\r\n            icon: 'phone',\r\n            required: true,\r\n            type: 'text',\r\n            value: detail.phoneNumber,\r\n        },\r\n        {\r\n            id: 'roles',\r\n            label: 'Roles',\r\n            icon: 'people',\r\n            type: 'table',\r\n            multi: true,\r\n            required: true,\r\n            fields: ROLE_TABLE_FIELDS,\r\n            onLoadData: handleRoleData,\r\n            onLoadItem: (item) => item.name,\r\n            values: detail.roles,\r\n        },\r\n        {\r\n            id: 'gender',\r\n            label: 'Gender',\r\n            icon: 'person',\r\n            type: 'list',\r\n            data: ['Male', 'Female', 'Other'],\r\n            value: detail.extras ? detail.extras.gender : null,\r\n        },\r\n        {\r\n            id: 'address',\r\n            label: 'Address',\r\n            type: 'text',\r\n            multiline: true,\r\n            rows: '4',\r\n            value: detail.extras ? detail.extras.address : null,\r\n        },\r\n        {\r\n            id: 'status',\r\n            label: 'Active User?',\r\n            type: 'checkbox',\r\n            value: detail.status,\r\n            checked: detail.status ? detail.status.toLowerCase() === 'active' : false,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>account_box</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        User Setup\r\n                    </Typography>\r\n                    <MasterForm fields={isUpdate ? fields : [...fields, ...newUserFields]} onSubmit={(event, form) => handleSubmit(form)}>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Button type=\"button\" variant=\"contained\" color=\"default\" onClick={() => history.goBack()}>\r\n                                <Icon>arrow_back</Icon> Back to List\r\n                            </Button>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                                <Icon>save</Icon> Save\r\n                            </Button>\r\n                        </Grid>\r\n                    </MasterForm>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(UserDetail);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\RoleDetail.js",["428"],"import React, { useState } from 'react';\r\nimport { withRouter, useHistory, useParams } from 'react-router-dom';\r\nimport { Typography, Container, Avatar, Icon, Grid, Button, Paper, makeStyles } from '@material-ui/core';\r\n\r\nimport { LoadingDialog, AlertDialog } from '../../fragment/message';\r\nimport RoleApi from '../../api/RoleApi';\r\nimport MasterForm from '../../fragment/MasterForm';\r\nimport { STORAGE_KEYS } from '../../config/Constant';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    submit: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst RoleDetail = (props) => {\r\n    const classes = styles();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [isUpdate, setUpdate] = useState(id > 0);\r\n\r\n    const handleError = (error) => {\r\n        setLoading(false);\r\n        setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n    };\r\n\r\n    const [detail, setDetail] = useState(() => {\r\n        setLoading(true);\r\n        RoleApi.getById(id)\r\n            .then((data) => {\r\n                setDetail(data);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code !== 'HTTP_406') {\r\n                    handleError(error);\r\n                } else {\r\n                    setUpdate(false);\r\n                }\r\n            })\r\n            .finally(() => setLoading(false));\r\n        return {};\r\n    });\r\n\r\n    const handleSubmit = (event, form) => {\r\n        if (!window.navigator.onLine) {\r\n            setError('Please check your internet connection and try again.');\r\n            return;\r\n        }\r\n\r\n        if (isUpdate) {\r\n            form.id = id;\r\n            form.version = detail.version;\r\n            RoleApi.modifyById(id, form)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    sessionStorage.setItem(STORAGE_KEYS.FLASH_MESSAGE, `Modified role : ${response.id} .`);\r\n                    history.push('/role');\r\n                })\r\n                .catch(handleError);\r\n        } else {\r\n            RoleApi.addNew(form)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    sessionStorage.setItem(STORAGE_KEYS.FLASH_MESSAGE, `Created new role : ${response.id} .`);\r\n                    history.push('/role');\r\n                })\r\n                .catch(handleError);\r\n        }\r\n\r\n        setLoading(true);\r\n    };\r\n\r\n    const fields = [\r\n        {\r\n            id: 'name',\r\n            label: 'Name',\r\n            required: true,\r\n            type: 'text',\r\n            value: detail.name || '',\r\n            autoFocus: true,\r\n        },\r\n        {\r\n            id: 'description',\r\n            label: 'Description',\r\n            type: 'text',\r\n            multiline: true,\r\n            rows: '4',\r\n            value: detail.description || '',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>people</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Role Setup\r\n                    </Typography>\r\n                    <MasterForm fields={fields} onSubmit={handleSubmit}>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Button type=\"button\" variant=\"contained\" color=\"default\" onClick={() => history.goBack()}>\r\n                                <Icon>arrow_back</Icon> Back to List\r\n                            </Button>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                                <Icon>save</Icon> Save\r\n                            </Button>\r\n                        </Grid>\r\n                    </MasterForm>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(RoleDetail);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\file\\File.js",["429","430","431"],"import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Typography, makeStyles, Paper, Icon, Grid, Button, Table, TableFooter, TableRow, TableContainer } from '@material-ui/core';\r\nimport { Notification, AlertDialog, QuestionDialog, LoadingDialog } from '../../fragment/message';\r\nimport { SearchInput } from '../../fragment/control';\r\nimport PaginationBar from '../../fragment/PaginationBar';\r\nimport FileApi from '../../api/FileApi';\r\nimport ImagePreview from '../../fragment/file/ImagePreview';\r\nimport FileGrid from '../../fragment/file/FileGrid';\r\nimport { MultiUpload } from '../../fragment/file/MultiUpload';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    header: {\r\n        flex: 1,\r\n        borderBottom: '1px solid ' + theme.palette.divider,\r\n        padding: theme.spacing(1),\r\n    },\r\n    container: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1.5, 1),\r\n    },\r\n    footer: {\r\n        backgroundColor: 'transparent',\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(0.5),\r\n    },\r\n    newButton: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    deleteButton: {\r\n        color: theme.palette.error.main,\r\n        '&:hover': {\r\n            color: theme.palette.error.dark,\r\n        },\r\n    },\r\n    editButton: {\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            color: theme.palette.secondary.dark,\r\n        },\r\n    },\r\n}));\r\n\r\nconst File = (props) => {\r\n    const classes = styles();\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [question, setQuestion] = React.useState('');\r\n    const [error, setError] = React.useState('');\r\n    const [noti, setNoti] = React.useState('');\r\n    const [search, setSearch] = React.useState('');\r\n    const [data, setData] = React.useState([]);\r\n    const [removeData, setRemoveData] = React.useState(null);\r\n    const [preview, setPreview] = React.useState(null);\r\n    const [showUploadDialog, setShowUploadDialog] = React.useState(false);\r\n\r\n    const handleError = (error) => {\r\n        setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n        setLoading(false);\r\n    };\r\n\r\n    const loadData = async (currentPage, pageSize, sort) => {\r\n        setLoading(true);\r\n        try {\r\n            const result = await FileApi.getPaging(currentPage, pageSize, sort, search);\r\n            const { data, ...paging } = result;\r\n            setData(data);\r\n            setPaging(paging);\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const [paging, setPaging] = React.useState(() => {\r\n        return {\r\n            currentPage: 0,\r\n            pageSize: 24,\r\n            total: 0,\r\n            sort: 'createdAt:DESC',\r\n        };\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        loadData(0, paging.pageSize, paging.sort);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [search]);\r\n\r\n    const handleRemove = (file) => {\r\n        setRemoveData(file);\r\n        setQuestion('Are you sure to remove file : ' + file.name + '.' + file.extension + ' ?');\r\n    };\r\n\r\n    const handleItemClick = (file) => {\r\n        setPreview(file);\r\n    };\r\n\r\n    const handleClosePreview = () => {\r\n        setPreview(null);\r\n    };\r\n\r\n    //Remove Data if confirmation is Yes\r\n    const handleQuestionDialog = (status) => {\r\n        if (status && removeData) {\r\n            setLoading(true);\r\n            FileApi.removeById(removeData.id)\r\n                .then((response) => {\r\n                    loadData(0, paging.pageSize, paging.sort);\r\n                })\r\n                .catch(handleError);\r\n        }\r\n        setQuestion('');\r\n        setRemoveData(null);\r\n    };\r\n\r\n    const handleUpload = (result) => {\r\n        if (result && result.length > 0) {\r\n            setLoading(true);\r\n            FileApi.upload(result, false)\r\n                .then((response) => {\r\n                    loadData(0, paging.pageSize, paging.sort);\r\n                })\r\n                .catch(handleError);\r\n        }\r\n        setShowUploadDialog(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Notification show={noti.length > 0} onClose={() => setNoti(false)} type=\"success\" message={noti} />\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <QuestionDialog show={question.length > 0} title=\"Confirm?\" message={question} onClose={handleQuestionDialog} />\r\n            <LoadingDialog show={loading} />\r\n            <MultiUpload show={showUploadDialog} onClose={handleUpload} />\r\n            {preview ? <ImagePreview show={preview != null} data={preview} onRemove={handleRemove} onClose={handleClosePreview} /> : null}\r\n            <Paper className={classes.root} elevation={6}>\r\n                <Grid container className={classes.header}>\r\n                    <Grid container item lg={4} md={4} sm={6} xs={12} justify=\"flex-start\" alignContent=\"center\">\r\n                        <Typography color=\"primary\" variant=\"h6\" component=\"h1\" noWrap>\r\n                            File Manager\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item lg={4} md={4} sm={6} xs={12} alignItems=\"center\" justify=\"center\">\r\n                        <SearchInput onSearch={(value) => setSearch(value)} placeholder=\"Search Files\" />\r\n                    </Grid>\r\n                    <Grid container item lg={4} md={4} sm={12} xs={12} alignContent=\"center\" justify=\"flex-end\">\r\n                        <Button\r\n                            onClick={() => setShowUploadDialog(true)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            aria-label=\"Add New\"\r\n                            className={classes.newButton}\r\n                        >\r\n                            <Icon className={classes.icon}>cloud_upload</Icon> File Upload\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <TableContainer>\r\n                    <FileGrid className={classes.container} data={data} onClickItem={handleItemClick} />\r\n                    <Table className={classes.footer}>\r\n                        <TableFooter>\r\n                            <TableRow>\r\n                                <PaginationBar\r\n                                    rowsPerPage={[12, 24, 36, 72]}\r\n                                    total={paging.total}\r\n                                    pageSize={paging.pageSize}\r\n                                    currentPage={paging.currentPage}\r\n                                    onPageChange={(newPage) => loadData(newPage, paging.pageSize)}\r\n                                    onPageSizeChange={(size) => loadData(0, size)}\r\n                                />\r\n                            </TableRow>\r\n                        </TableFooter>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(File);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\MenuDetail.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\Menu.js",["432"],"import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { AlertDialog, Notification, LoadingDialog, QuestionDialog } from '../../fragment/message';\r\nimport MenuApi from '../../api/MenuApi';\r\nimport TreeMenu from '../../fragment/layout/TreeMenu';\r\nimport { Grid, Paper, Container, Avatar, Icon, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport MasterForm from '../../fragment/MasterForm';\r\nimport { ROLE_TABLE_FIELDS } from './Role';\r\nimport RoleApi from '../../api/RoleApi';\r\nimport ImportMenu from '../../fragment/table/ImportMenu';\r\n\r\nexport const MENU_TABLE_FIELDS = [\r\n    {\r\n        name: 'id',\r\n        align: 'center',\r\n        label: 'Id',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'icon',\r\n        align: 'center',\r\n        label: 'Icon',\r\n        type: 'icon',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'label',\r\n        align: 'left',\r\n        label: 'Name',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'description',\r\n        align: 'left',\r\n        label: 'Description',\r\n        sortable: true,\r\n    },\r\n];\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    treeBox: {\r\n        overflow: 'auto',\r\n        minHeight: 480,\r\n        background: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n        border: '1px solid ' + theme.palette.divider,\r\n        margin: theme.spacing(2, 0, 1),\r\n        flex: 1,\r\n    },\r\n    innerBox: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    inputBox: {\r\n        paddingLeft: theme.spacing(5),\r\n    },\r\n    submit: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    remove: {\r\n        background: theme.palette.error.main,\r\n        marginLeft: theme.spacing(1),\r\n        color: theme.palette.error.contrastText,\r\n        '&:hover': {\r\n            background: theme.palette.error.dark,\r\n        },\r\n    },\r\n}));\r\n\r\nconst INIT_MENU = {\r\n    label: '',\r\n    icon: '',\r\n    divider: false,\r\n    type: 'LINK',\r\n    path: '',\r\n    roles: [],\r\n    description: '',\r\n    parent: null,\r\n    parentId: null,\r\n};\r\n\r\nconst Menu = (props) => {\r\n    const classes = styles();\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [noti, setNoti] = React.useState('');\r\n    const [question, setQuestion] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selectedMenu, setSelectedMenu] = React.useState(INIT_MENU);\r\n    //const AVAILABLE_PATHS = PrivateRoute.map(r => r.path);\r\n\r\n    const handleError = (error) => {\r\n        setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleParentMenuData = async (currentPage, pageSize, sort, search) => {\r\n        return await MenuApi.getPaging(currentPage, pageSize, sort, search);\r\n    };\r\n\r\n    const handleRoleData = async (currentPage, pageSize, sort, search) => {\r\n        return await RoleApi.getPaging(currentPage, pageSize, sort, search);\r\n    };\r\n\r\n    const handleImport = async (result) => {\r\n        return MenuApi.importData(result);\r\n    };\r\n\r\n    const loadData = async () => {\r\n        const result = await MenuApi.getTree('');\r\n        if (result && result.data) {\r\n            setData(result.data);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const [data, setData] = React.useState(() => {\r\n        loadData('');\r\n        return [];\r\n    });\r\n\r\n    const handleSubmit = async (form) => {\r\n        if (!window.navigator.onLine) {\r\n            setError('Please check your internet connection and try again.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        let menu = { ...form };\r\n        delete menu.parent;\r\n        if (form.parent && form.parent.id) {\r\n            menu.parentId = form.parent.id;\r\n        }\r\n\r\n        if (selectedMenu && selectedMenu.id) {\r\n            menu.id = selectedMenu.id;\r\n            menu.version = selectedMenu.version;\r\n            MenuApi.modifyById(selectedMenu.id, menu)\r\n                .then((response) => {\r\n                    loadData();\r\n                    setSelectedMenu(INIT_MENU);\r\n                    setNoti('Modified menu : ' + response.id + '.');\r\n                })\r\n                .catch(handleError);\r\n        } else {\r\n            MenuApi.addNew(menu)\r\n                .then((response) => {\r\n                    loadData();\r\n                    setSelectedMenu(INIT_MENU);\r\n                    setNoti('Created new menu : ' + response.id + '.');\r\n                })\r\n                .catch(handleError);\r\n        }\r\n    };\r\n\r\n    const handleClickMenu = (menu) => {\r\n        if (menu.parentId && menu.parentId > 0) {\r\n            //Find Parent Menu\r\n            const findParent = (childMenu, menuList) => {\r\n                let parentMenu = menuList.find((m) => m.id === menu.parentId);\r\n                if (parentMenu) {\r\n                    setSelectedMenu({ ...childMenu, parent: parentMenu });\r\n                } else {\r\n                    menuList.forEach((m) => {\r\n                        if (m.items) {\r\n                            findParent(childMenu, m.items);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            findParent(menu, data);\r\n        } else {\r\n            setSelectedMenu(menu);\r\n        }\r\n    };\r\n    const handleAdd = () => {\r\n        let newMenu = INIT_MENU;\r\n        if (selectedMenu && selectedMenu.id) {\r\n            newMenu.parentId = selectedMenu.id;\r\n            newMenu.parent = selectedMenu;\r\n        }\r\n        setSelectedMenu(newMenu);\r\n    };\r\n    const handleQuestionDialog = (result) => {\r\n        if (result && selectedMenu && selectedMenu.id) {\r\n            setLoading(true);\r\n            MenuApi.removeById(selectedMenu.id)\r\n                .then(() => {\r\n                    setSelectedMenu(INIT_MENU);\r\n                    loadData();\r\n                    setNoti('Remove menu : ' + selectedMenu.id + '.');\r\n                })\r\n                .catch(handleError);\r\n        }\r\n\r\n        setQuestion('');\r\n    };\r\n    const handleRemove = () => {\r\n        if (selectedMenu && selectedMenu.id) {\r\n            setQuestion('Are you sure to remove ' + selectedMenu.label + '?');\r\n        }\r\n    };\r\n\r\n    const fields = [\r\n        {\r\n            id: 'label',\r\n            label: 'Label',\r\n            icon: 'create',\r\n            required: true,\r\n            type: 'text',\r\n            autoFocus: true,\r\n            value: selectedMenu.label,\r\n        },\r\n        {\r\n            id: 'icon',\r\n            icon: 'eco',\r\n            label: 'Icon',\r\n            required: true,\r\n            type: 'icon',\r\n            value: selectedMenu.icon,\r\n        },\r\n        {\r\n            id: 'divider',\r\n            label: 'Has divider?',\r\n            type: 'checkbox',\r\n            checked: selectedMenu.divider || false,\r\n        },\r\n        {\r\n            id: 'priority',\r\n            label: 'Priority',\r\n            icon: 'sort',\r\n            type: 'number',\r\n            value: selectedMenu.priority ? selectedMenu.priority.toString() : '0', //Don't display zero value\r\n        },\r\n        {\r\n            id: 'path',\r\n            icon: 'link',\r\n            label: 'Path',\r\n            type: 'text',\r\n            //data: AVAILABLE_PATHS,\r\n            value: selectedMenu.path || '',\r\n        },\r\n        {\r\n            id: 'parent',\r\n            icon: 'folder',\r\n            label: 'Parent',\r\n            type: 'table',\r\n            fields: MENU_TABLE_FIELDS,\r\n            onLoadData: handleParentMenuData,\r\n            onLoadItem: (item) => item,\r\n            value: selectedMenu.parent,\r\n        },\r\n        {\r\n            id: 'roles',\r\n            label: 'Roles',\r\n            icon: 'people',\r\n            type: 'table',\r\n            multi: true,\r\n            required: true,\r\n            fields: ROLE_TABLE_FIELDS,\r\n            onLoadData: handleRoleData,\r\n            onLoadItem: (item) => item.name,\r\n            values: selectedMenu.roles,\r\n        },\r\n        {\r\n            id: 'description',\r\n            label: 'Description',\r\n            type: 'text',\r\n            multiline: true,\r\n            rows: '4',\r\n            value: selectedMenu.description || '',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Notification show={noti.length > 0} onClose={() => setNoti(false)} type=\"success\" message={noti} />\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <QuestionDialog show={question.length > 0} title=\"Confirm?\" message={question} onClose={handleQuestionDialog} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>link</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        System Menu\r\n                    </Typography>\r\n                    <Grid className={classes.innerBox} container>\r\n                        <Grid container item md={5} sm={12} xs={12} alignContent=\"flex-start\" alignItems=\"stretch\" direction=\"column\">\r\n                            <Grid container item className={classes.treeBox}>\r\n                                <TreeMenu menus={data} onClickItem={handleClickMenu} />\r\n                            </Grid>\r\n                            <Grid container item>\r\n                                <ImportMenu fields={fields.map((f) => f.id)} onImportItems={handleImport} className={classes.newButton} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.inputBox} container item md={7} sm={12} xs={12} justify=\"flex-end\" alignContent=\"flex-start\">\r\n                            <MasterForm fields={fields} onSubmit={(event, form) => handleSubmit(form)}>\r\n                                <Grid container justify=\"flex-end\">\r\n                                    <Button type=\"button\" variant=\"contained\" color=\"default\" onClick={handleAdd}>\r\n                                        <Icon>add</Icon> Add New\r\n                                    </Button>\r\n                                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                                        <Icon>save</Icon> Save\r\n                                    </Button>\r\n                                    {selectedMenu && selectedMenu.id ? (\r\n                                        <Button type=\"button\" variant=\"contained\" className={classes.remove} onClick={handleRemove}>\r\n                                            <Icon>delete</Icon> Delete\r\n                                        </Button>\r\n                                    ) : null}\r\n                                </Grid>\r\n                            </MasterForm>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Menu);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\page\\admin\\ApiPermission.js",["433"],"import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport {\r\n    Typography,\r\n    Container,\r\n    Paper,\r\n    Avatar,\r\n    Icon,\r\n    makeStyles,\r\n    Grid,\r\n    Button,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    Checkbox,\r\n    Collapse,\r\n    List,\r\n    Divider,\r\n} from '@material-ui/core';\r\nimport { AlertDialog, LoadingDialog } from '../../fragment/message';\r\nimport { ObjectInput } from '../../fragment/control';\r\nimport { ROLE_TABLE_FIELDS } from './Role';\r\nimport RoleApi from '../../api/RoleApi';\r\nimport RouteApi from '../../api/RouteApi';\r\nimport SwaggerApi from '../../api/SwaggerApi';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    submit: {\r\n        height: 55,\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    expansionPanel: {\r\n        width: '100%',\r\n    },\r\n    listItem: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    route: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    method: {\r\n        paddingLeft: theme.spacing(4) * 2,\r\n    },\r\n}));\r\n\r\nconst isPatternMatch = (pattern1, pattern2) => {\r\n    const regexPattern = /\\{[^}/]+}/g;\r\n    return pattern1 === pattern2 || pattern1.replace(regexPattern, '%') === pattern2 || pattern1 === pattern2.replace(regexPattern, '%');\r\n};\r\n\r\nconst ApiPermission = (props) => {\r\n    const classes = styles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState('');\r\n    const [expanded, setExpanded] = React.useState([]);\r\n    const [selectedData, setSelectedData] = React.useState([]);\r\n    const [selectedRole, setSelectedRole] = React.useState(null);\r\n\r\n    const handleError = (error) => {\r\n        setLoading(false);\r\n        setError(error.message || error.title || 'Please check your internet connection and try again.');\r\n    };\r\n\r\n    const [openApi, setOpenApi] = React.useState(() => {\r\n        SwaggerApi.getOpenApiV2()\r\n            .then((data) => {\r\n                setOpenApi(data);\r\n                setLoading(false);\r\n            })\r\n            .catch(handleError);\r\n        return [];\r\n    });\r\n\r\n    const handleRoleData = async (currentPage, pageSize, sort, search) => {\r\n        return await RoleApi.getPaging(currentPage, pageSize, sort, search);\r\n    };\r\n\r\n    const handleRoleChange = (event) => {\r\n        const role = event.target.value;\r\n        if (!role) {\r\n            return;\r\n        }\r\n        setSelectedRole(role);\r\n        RouteApi.getPermissionByRole(role.id)\r\n            .then((allowRoutes) => {\r\n                const markedData = allowRoutes.data.map((route) => {\r\n                    return route;\r\n                });\r\n                setLoading(false);\r\n                setSelectedData(markedData);\r\n            })\r\n            .catch((error) => {\r\n                setSelectedData([]);\r\n                handleError(error);\r\n            });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if (!selectedRole) {\r\n            handleError({ message: 'Please select a role.' });\r\n            return;\r\n        }\r\n\r\n        if (!selectedData || selectedData.length <= 0) {\r\n            handleError({ message: 'Please select a route.' });\r\n            return;\r\n        }\r\n\r\n        console.log('Selected Data => ', selectedData);\r\n        setLoading(true);\r\n\r\n        RouteApi.savePermissionByRole(selectedRole.id, selectedData)\r\n            .then((savedData) => {\r\n                setLoading(false);\r\n                console.log('Response Data => ', savedData.data);\r\n                setSelectedData(savedData.data);\r\n            })\r\n            .catch(handleError);\r\n    };\r\n\r\n    const handleToggleModule = (item) => {\r\n        const existIdx = expanded.findIndex((x) => x === item);\r\n        const updateExpandedModules = existIdx < 0 ? [...expanded, item] : expanded.filter((x) => x !== item);\r\n        setExpanded(updateExpandedModules);\r\n    };\r\n\r\n    const handleModuleCheck = (event, module) => {\r\n        const checked = event.target.checked;\r\n        const savedData = selectedData.filter((r) => r.module !== module.name);\r\n        if (checked) {\r\n            module.routes.forEach((route) => {\r\n                route.supportedMethods.forEach((method) => {\r\n                    savedData.push({\r\n                        module: module.name,\r\n                        pattern: route.path,\r\n                        httpMethod: method.http,\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        setSelectedData(savedData);\r\n    };\r\n\r\n    const handleRouteCheck = (event, module, route) => {\r\n        const checked = event.target.checked;\r\n        const savedData = selectedData.filter((r) => !isPatternMatch(r.pattern, route.path));\r\n        if (checked) {\r\n            route.supportedMethods.forEach((method) => {\r\n                savedData.push({\r\n                    module: module.name,\r\n                    pattern: route.path,\r\n                    httpMethod: method.http,\r\n                });\r\n            });\r\n        }\r\n        setSelectedData(savedData);\r\n    };\r\n\r\n    const handleMethodCheck = (event, module, route, method) => {\r\n        const checked = event.target.checked;\r\n        const savedData = selectedData.filter(\r\n            (r) => !(r.module === module.name && r.httpMethod === method.http && isPatternMatch(r.pattern, route.path)),\r\n        );\r\n        if (checked) {\r\n            savedData.push({\r\n                module: module.name,\r\n                pattern: route.path,\r\n                httpMethod: method.http,\r\n            });\r\n        }\r\n        setSelectedData(savedData);\r\n    };\r\n\r\n    const renderDefaultMethod = (module, route, method) => {\r\n        const isMarked =\r\n            selectedData.findIndex((r) => r.module === module.name && r.httpMethod === method.http && isPatternMatch(r.pattern, route.path)) >= 0;\r\n        return (\r\n            <div key={module.name + route.path + method.http}>\r\n                <ListItem button className={classes.method}>\r\n                    <ListItemIcon>\r\n                        <Icon color=\"primary\">language</Icon>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={'[' + method.http.toUpperCase() + '] ' + method.summary} secondary={method.description} />\r\n                    <ListItemSecondaryAction>\r\n                        <Checkbox\r\n                            checked={isMarked}\r\n                            edge=\"end\"\r\n                            color=\"secondary\"\r\n                            onChange={(event) => handleMethodCheck(event, module, route, method)}\r\n                        />\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderDefaultRoute = (module, route) => {\r\n        const isExpand = expanded.findIndex((x) => x === route.path) >= 0;\r\n        const selectedCount = selectedData.filter((r) => r.module === module.name && isPatternMatch(r.pattern, route.path)).length;\r\n        const isMarked = selectedCount === route.supportedMethods.length;\r\n        const isInterdeminate = selectedCount > 0 && !isMarked;\r\n\r\n        return (\r\n            <div key={module.name + route.path}>\r\n                <ListItem button className={classes.route} onClick={() => handleToggleModule(route.path)}>\r\n                    <ListItemIcon>\r\n                        <Icon color=\"primary\">{isExpand ? 'remove_circle' : 'add_circle'}</Icon>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={route.path} />\r\n                    <ListItemSecondaryAction>\r\n                        <Checkbox\r\n                            edge=\"end\"\r\n                            color=\"secondary\"\r\n                            onChange={(event) => handleRouteCheck(event, module, route)}\r\n                            checked={isMarked}\r\n                            indeterminate={isInterdeminate}\r\n                        />\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Collapse in={isExpand} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {route.supportedMethods.map((method) => renderDefaultMethod(module, route, method))}\r\n                    </List>\r\n                </Collapse>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderDefaultModule = (module, index) => {\r\n        const isExpand = expanded.findIndex((x) => x === module.name) >= 0;\r\n        const selectedCount = selectedData.filter((r) => r.module === module.name).length;\r\n        const isMarked = selectedCount === module.count;\r\n        const isInterdeminate = selectedCount > 0 && !isMarked;\r\n\r\n        return (\r\n            <div key={module.name + '-' + index}>\r\n                <ListItem className={classes.listItem} button onClick={() => handleToggleModule(module.name)}>\r\n                    <ListItemIcon>\r\n                        <Icon color=\"primary\">{isExpand ? 'remove_circle' : 'add_circle'}</Icon>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={module.description} />\r\n                    <ListItemSecondaryAction>\r\n                        <Checkbox\r\n                            edge=\"end\"\r\n                            color=\"secondary\"\r\n                            onChange={(event) => handleModuleCheck(event, module)}\r\n                            checked={isMarked}\r\n                            indeterminate={isInterdeminate}\r\n                        />\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Collapse in={isExpand} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {module.routes.map((route) => renderDefaultRoute(module, route))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <LoadingDialog show={loading} />\r\n            <Container component=\"main\" maxWidth=\"lg\">\r\n                <Paper className={classes.paper} elevation={6}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>code</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Api Permission\r\n                    </Typography>\r\n                    <Grid alignItems=\"center\" alignContent=\"space-between\" spacing={2} container direction=\"row\">\r\n                        <Grid item lg={9} md={9} sm={8} xs={12}>\r\n                            <ObjectInput\r\n                                id=\"role\"\r\n                                label=\"Role\"\r\n                                required={true}\r\n                                fields={ROLE_TABLE_FIELDS}\r\n                                onLoadData={handleRoleData}\r\n                                onLoadItem={(item) => item.name}\r\n                                onChange={handleRoleChange}\r\n                                disableRemove={true}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} sm={4} xs={12}>\r\n                            <Button type=\"button\" className={classes.submit} fullWidth variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n                                <Icon>save</Icon> Save\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid container>\r\n                        <List className={classes.expansionPanel} component=\"nav\" aria-labelledby=\"open-api-list\">\r\n                            {openApi.map(renderDefaultModule)}\r\n                        </List>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ApiPermission);\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\SideMenu.js",["434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457"],"import React, { useState } from 'react';\r\nimport { List, ListItem, ListItemIcon, Icon, ListItemText, Divider, Collapse, makeStyles, Popover, PopoverProps, Tooltip } from '@material-ui/core';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ScrollBar from '../control/ScrollBar';\r\nimport SearchInput from '../control/SearchInput';\r\nimport { ACTIONS } from './Reducer';\r\n\r\nexport type MenuProps = {\r\n    id: string | number,\r\n    label: string,\r\n    icon: string,\r\n    onClick?: () => void,\r\n    path?: string,\r\n    items?: Array<MenuProps>,\r\n    divider?: boolean,\r\n};\r\n\r\ntype SideMenuProps = {\r\n    menus: Array<MenuProps>,\r\n    state?: Object,\r\n    dispatch?: () => void,\r\n};\r\n\r\ntype MenuItemProps = {\r\n    ...SideMenuProps,\r\n    hideMenu: boolean,\r\n    parentCount?: number,\r\n    onMenuItemClick?: (menu: MenuProps) => void,\r\n};\r\n\r\ntype ChildMenuGroupProps = {\r\n    ...MenuItemProps,\r\n    open: boolean,\r\n};\r\n\r\nconst PopupMenu = (props: { ...ChildMenuGroupProps, ...PopoverProps }) => {\r\n    const {\r\n        onMenuItemClick,\r\n        dispatch,\r\n        state,\r\n        parentCount,\r\n        divider,\r\n        parentId,\r\n        createdBy,\r\n        modifiedBy,\r\n        createdAt,\r\n        modifiedAt,\r\n        items,\r\n        ...popover\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n            <Divider />\r\n            <Popover\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n                open={props.open}\r\n                {...popover}\r\n            >\r\n                {items.map((menu, index) => (\r\n                    <DefaultMenuItem\r\n                        onMenuItemClick={() => onMenuItemClick(menu)}\r\n                        key={menu ? menu.id : 'id-' + index}\r\n                        parentCount={parentCount}\r\n                        dispatch={dispatch}\r\n                        state={state}\r\n                        {...menu}\r\n                    />\r\n                ))}\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\nconst FolderMenu = (props: ChildMenuGroupProps) => {\r\n    const parent = props.parentCount || 0;\r\n    return (\r\n        <>\r\n            <Collapse in={props.open} timeout=\"auto\" unmountOnExit>\r\n                {props.items.map((menu, index) => (\r\n                    <DefaultMenuItem\r\n                        parentCount={parent + 1}\r\n                        onMenuItemClick={() => props.onMenuItemClick(menu)}\r\n                        key={(menu ? menu.id : 'id') + '-' + index}\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}\r\n                        {...menu}\r\n                    />\r\n                ))}\r\n            </Collapse>\r\n            <Divider />\r\n        </>\r\n    );\r\n};\r\n\r\nconst ItemStyles = makeStyles(theme => ({\r\n    root: props => ({\r\n        paddingLeft: props.hideMenu ? 15 : theme.spacing(2 * (props.parentCount + 1)),\r\n        borderRight: !props.hideMenu && props.selected ? '4px solid ' + theme.palette.primary.light : null,\r\n    }),\r\n    menuIcon: props => ({\r\n        color: props.selected ? theme.palette.primary.contrastText : theme.palette.text.primary,\r\n        width: 27,\r\n        display: 'inline-flex',\r\n        flexShrink: 0,\r\n        minWidth: theme.spacing(3),\r\n    }),\r\n    menuText: props => ({\r\n        color: props.selected ? theme.palette.primary.contrastText : theme.palette.text.primary,\r\n    }),\r\n}));\r\n\r\nconst DefaultMenuItem = (props: MenuItemProps) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const {\r\n        state,\r\n        dispatch,\r\n        parentCount,\r\n        onMenuItemClick,\r\n        id,\r\n        label,\r\n        icon,\r\n        onClick,\r\n        path,\r\n        items,\r\n        divider,\r\n        parentId,\r\n        createdBy,\r\n        modifiedBy,\r\n        createdAt,\r\n        modifiedAt,\r\n        ...rest\r\n    } = props;\r\n\r\n    const isFolder = items && items.length > 0;\r\n    const open = state.openIds.findIndex(x => x === props.id) >= 0;\r\n    const isSelect = location.pathname === path;\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const classes = ItemStyles({ parentCount: props.parentCount, selected: isSelect, hideMenu: state.hideMenu });\r\n\r\n    const handleClick = event => {\r\n        if (isFolder) {\r\n            dispatch({\r\n                type: ACTIONS.MODIFIED_OPEN_IDS,\r\n                id: id,\r\n            });\r\n            if (state.hideMenu) {\r\n                setAnchorEl(event.currentTarget);\r\n            }\r\n        } else if (path) {\r\n            history.push(path);\r\n        }\r\n\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n    };\r\n\r\n    const renderChildGroup = () => {\r\n        if (!isFolder) {\r\n            return null;\r\n        }\r\n\r\n        if (state.hideMenu) {\r\n            return <PopupMenu {...props} id={'popup-menu-' + id} open={open} anchorEl={anchorEl} onClose={handlePopoverClose} disableRestoreFocus />;\r\n        }\r\n\r\n        return <FolderMenu {...props} open={open} />;\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        dispatch({\r\n            type: ACTIONS.MODIFIED_OPEN_IDS,\r\n            id: id,\r\n        });\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem\r\n                {...rest}\r\n                button\r\n                className={classes.root}\r\n                onClick={handleClick}\r\n                selected={isSelect}\r\n                divider={!isFolder && divider}\r\n                aria-owns={'popup-menu-' + id}\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <Tooltip title={label} aria-label={label}>\r\n                    <ListItemIcon className={classes.menuIcon}>\r\n                        <Icon fontSize={state.hideMenu ? 'large' : 'default'}>{icon}</Icon>\r\n                    </ListItemIcon>\r\n                </Tooltip>\r\n                {state.hideMenu ? null : <ListItemText inset={false} primary={label} className={classes.menuText} />}\r\n                {!state.hideMenu && isFolder ? <Icon fontSize=\"small\">{open ? 'expand_less' : 'chevron_right'}</Icon> : null}\r\n            </ListItem>\r\n            {renderChildGroup()}\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        overflowY: 'auto',\r\n        overflowX: 'auto',\r\n    },\r\n    searchBox: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    listMenu: {\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\nconst SideMenu = (props: SideMenuProps) => {\r\n    const classes = styles();\r\n    const { hideMenu, menus } = props.state;\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleClick = menu => {\r\n        if (props.onItemClick) {\r\n            props.onItemClick(menu);\r\n        }\r\n    };\r\n\r\n    let filterMenus = menus;\r\n\r\n    const searchMenu = list => {\r\n        list.forEach(item => {\r\n            if (item.label.startsWith(search)) {\r\n                filterMenus = [...filterMenus, item];\r\n            } else if (item.items && item.items.length > 0) {\r\n                searchMenu(item.items);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (search.length > 0) {\r\n        filterMenus = [];\r\n        searchMenu(menus);\r\n    }\r\n\r\n    return (\r\n        <ScrollBar className={classes.root}>\r\n            {hideMenu ? null : (\r\n                <>\r\n                    <div className={classes.searchBox}>\r\n                        <SearchInput onSearch={value => setSearch(value)} />\r\n                    </div>\r\n                    <Divider />\r\n                </>\r\n            )}\r\n            <List component=\"nav\" className={classes.listMenu}>\r\n                {filterMenus.map((menu, index) => (\r\n                    <DefaultMenuItem\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}\r\n                        onMenuItemClick={handleClick}\r\n                        key={menu.id + '-' + index}\r\n                        {...menu}\r\n                    />\r\n                ))}\r\n            </List>\r\n        </ScrollBar>\r\n    );\r\n};\r\n\r\nexport default SideMenu;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\DrawerHeader.js",["458"],"import React from 'react';\r\nimport { Grid, Typography, IconButton, Icon, makeStyles, useTheme } from '@material-ui/core';\r\n\r\ntype DrawerHeaderProps = {\r\n    image?: string,\r\n    name: string,\r\n    hideMenu: boolean,\r\n    onMenuClick?: () => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    title: {\r\n        color: theme.palette.secondary.contrastText,\r\n        borderLeft: '5px solid ' + theme.palette.secondary.main,\r\n        paddingLeft: theme.spacing(1),\r\n    },\r\n    glassBackground: {\r\n        background: '#6ca7b4c9',\r\n    },\r\n    menuIcon: {\r\n        color: theme.palette.secondary.contrastText,\r\n    },\r\n}));\r\n\r\nconst DrawerHeader = (props: DrawerHeaderProps) => {\r\n    const classes = styles();\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div className={classes.root} style={props.image ? { backgroundImage: 'url(\"' + props.image + '\")' } : null}>\r\n            <div className={classes.glassBackground} style={props.hideMenu ? { padding: 0 } : { padding: theme.spacing(3) }}>\r\n                <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-around\">\r\n                    {props.hideMenu ? null : (\r\n                        <div>\r\n                            <Typography style={{ color: theme.palette.secondary.contrastText }} variant=\"h6\" gutterBottom>\r\n                                Welcome!\r\n                            </Typography>\r\n                            <Typography className={classes.title} variant=\"subtitle1\">\r\n                                {props.name}\r\n                            </Typography>\r\n                        </div>\r\n                    )}\r\n                    <IconButton onClick={props.onMenuClick}>\r\n                        <Icon className={classes.menuIcon}>{props.hideMenu ? 'menu' : 'chevron_left'}</Icon>\r\n                    </IconButton>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDrawerHeader.defaultProps = {\r\n    image: '/images/logo.png',\r\n};\r\n\r\nexport default DrawerHeader;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\Reducer.js",["459","460","461"],"export const ACTIONS = {\r\n    LOAD: 'LOAD_INIT_MENU',\r\n    MODIFIED_OPEN_IDS: 'OPEN_MENU_FOLDER',\r\n    SIZE_CHNGE: 'CHANGE_DRAWER_SIZE',\r\n};\r\n\r\nconst modifiedOpenIds = (state, id) => {\r\n    const openIds = state.openIds;\r\n    const idx = openIds.findIndex(x => x === id);\r\n    if (idx < 0) {\r\n        return { ...state, openIds: [...openIds, id] };\r\n    }\r\n\r\n    return { ...state, openIds: openIds.filter(x => x !== id) };\r\n};\r\n\r\nconst modifiedHideMenu = state => {\r\n    const newHideMenu = !state.hideMenu;\r\n    return { ...state, openIds: [], hideMenu: newHideMenu };\r\n};\r\n\r\nconst Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.LOAD:\r\n            return action.payload;\r\n        case ACTIONS.MODIFIED_OPEN_IDS:\r\n            return modifiedOpenIds(state, action.id);\r\n        case ACTIONS.SIZE_CHNGE:\r\n            return modifiedHideMenu(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Reducer;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\NotificationMenu.js",["462","463","464","465","466","467","468"],"import React, { useState } from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {\r\n    Typography,\r\n    makeStyles,\r\n    withStyles,\r\n    IconButton,\r\n    Badge,\r\n    Avatar,\r\n    Menu,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    Icon,\r\n    ListItemText,\r\n    Tooltip,\r\n} from '@material-ui/core';\r\nimport FileApi from '../../api/FileApi';\r\nimport FormatManager from '../../util/FormatManager';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ntype NotificationMenuProps = {\r\n    name: string,\r\n    icon: string,\r\n    anchorVertical: 'top' | 'bottom',\r\n    anchorHorizontal: 'left' | 'right',\r\n};\r\n\r\nconst StyledBadge = withStyles(theme => ({\r\n    badge: {\r\n        backgroundColor: theme.palette.error.main,\r\n        padding: '0 4px',\r\n        border: '1px solid ' + theme.palette.error.dark,\r\n    },\r\n}))(Badge);\r\n\r\nconst styles = makeStyles(theme => ({\r\n    avatar: {\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.main,\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    menuIcon: {\r\n        color: theme.palette.text.primary,\r\n        display: 'inline-flex',\r\n        flexShrink: 0,\r\n        minWidth: theme.spacing(4),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    menuText: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    menuDetail: {\r\n        maxWidth: 300,\r\n        wordWrap: 'break-word',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n}));\r\n\r\nconst NotificationMenu = (props: NotificationMenuProps) => {\r\n    const classes = styles();\r\n    const history = useHistory();\r\n    const { name, icon, anchorVertical, anchorHorizontal } = props;\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    let anchorOrigin = {\r\n        vertical: anchorVertical || 'top',\r\n        horizontal: anchorHorizontal || 'right',\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClick = item => {};\r\n\r\n    const createSkeleton = count => {\r\n        var result = [];\r\n        for (let i = 0; i < count; i++) {\r\n            result.push(\r\n                <MenuItem key={'skeleton-01'}>\r\n                    <ListItemIcon className={classes.menuIcon}>\r\n                        <Skeleton variant=\"circle\" width={32} height={32} />\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        <Skeleton />\r\n                        <Skeleton height=\"10px\" width=\"60%\" />\r\n                    </ListItemText>\r\n                </MenuItem>,\r\n            );\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const notiItems = [\r\n        {\r\n            id: 1,\r\n            icon: 'face',\r\n            title: 'Order-1',\r\n            date: new Date().getTime(),\r\n            detail1: 'What is Lorem Ipsum?',\r\n            detail2:\r\n                'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: 'face',\r\n            title: 'Order-2',\r\n            date: new Date().getTime(),\r\n            detail1: 'Why do we use it?',\r\n            detail2:\r\n                'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for lorem ipsum will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={name} aria-label={name}>\r\n                <IconButton onClick={event => setAnchorEl(event.currentTarget)}>\r\n                    <StyledBadge anchorOrigin={anchorOrigin} badgeContent={4} color=\"secondary\">\r\n                        <Icon>{icon || 'notifications'}</Icon>\r\n                    </StyledBadge>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                elevation={0}\r\n                getContentAnchorEl={null}\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {notiItems.map((item, index) => {\r\n                    let imageUrl = FileApi.downloadLink(item.image);\r\n                    return (\r\n                        <MenuItem key={(item ? item.id : 'id') + '-' + index} onClick={() => handleClick(item)}>\r\n                            <ListItemIcon className={classes.menuIcon}>\r\n                                {imageUrl ? (\r\n                                    <Avatar className={classes.avatar} alt={item.title} src={imageUrl} />\r\n                                ) : (\r\n                                    <Avatar className={classes.avatar}>{item.title[0]}</Avatar>\r\n                                )}\r\n                            </ListItemIcon>\r\n                            <ListItemText className={classes.menuText}>\r\n                                <Typography variant=\"subtitle2\" gutterBottom>\r\n                                    {`${FormatManager.formatDate(item.date, 'YYYY-MM-DD')} : ${item.detail1}`}\r\n                                </Typography>\r\n                                <Typography className={classes.menuDetail} variant=\"caption\" display=\"block\" gutterBottom>\r\n                                    {item.detail2}\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </MenuItem>\r\n                    );\r\n                })}\r\n\r\n                {createSkeleton(5)}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nNotificationMenu.defaultProps = {\r\n    name: 'Notification',\r\n    icon: 'notifications',\r\n};\r\n\r\nexport default NotificationMenu;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\UserMenu.js",["469","470","471","472"],"import React, { useState } from 'react';\r\nimport {\r\n    makeStyles,\r\n    IconButton,\r\n    Avatar,\r\n    Menu,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    Icon,\r\n    ListItemText,\r\n    Tooltip,\r\n    Divider,\r\n    useTheme,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport FileApi from '../../api/FileApi';\r\nimport { USER_PROFILE_MENU } from '../../config/Constant';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ntype UserMenuProps = {\r\n    name: string,\r\n    image?: string | Object,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    avatar: {\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.main,\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    menuIcon: {\r\n        color: theme.palette.text.primary,\r\n        display: 'inline-flex',\r\n        flexShrink: 0,\r\n        minWidth: theme.spacing(4),\r\n    },\r\n    menuText: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    headerGrid: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst UserMenu = (props: UserMenuProps) => {\r\n    const classes = styles();\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const { name, role, image } = props;\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const imageUrl = FileApi.downloadLink(image, 'thumb');\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClick = item => {\r\n        if (item.id === 'sys-logout') {\r\n            sessionStorage.clear();\r\n        }\r\n        setAnchorEl(null);\r\n        history.push(item.path);\r\n    };\r\n\r\n    const menuItems = [\r\n        ...USER_PROFILE_MENU.items,\r\n        {\r\n            id: 'sys-logout',\r\n            label: 'Logout',\r\n            icon: 'lock',\r\n            path: '/login',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={name} aria-label={name}>\r\n                <IconButton size=\"small\" onClick={event => setAnchorEl(event.currentTarget)}>\r\n                    {imageUrl ? (\r\n                        <Avatar className={classes.avatar} alt={name} src={imageUrl} />\r\n                    ) : (\r\n                        <Avatar className={classes.avatar}>{name[0]}</Avatar>\r\n                    )}\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                elevation={0}\r\n                getContentAnchorEl={null}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <Grid className={classes.headerGrid} container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        {imageUrl ? (\r\n                            <Avatar className={classes.avatar} alt={name} src={imageUrl} />\r\n                        ) : (\r\n                            <Avatar className={classes.avatar}>{name[0]}</Avatar>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"subtitle1\">{name}</Typography>\r\n                    </Grid>\r\n                    <Grid item style={{ display: !role ? 'none' : 'block' }}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            {role}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Divider />\r\n                {menuItems.map((item, index) => {\r\n                    return (\r\n                        <MenuItem key={(item ? item.id : 'id') + '-' + index} onClick={() => handleClick(item)}>\r\n                            <ListItemIcon className={classes.menuIcon}>\r\n                                <Icon>{item ? item.icon : ''}</Icon>\r\n                            </ListItemIcon>\r\n                            <ListItemText inset={false} primary={item ? item.label : ''} className={classes.menuText} />\r\n                        </MenuItem>\r\n                    );\r\n                })}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nUserMenu.defaultProps = {\r\n    name: 'User',\r\n};\r\n\r\nexport default UserMenu;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ScrollBar.js",["473","474"],"import React, { Children } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst ScrollBar = props => {\r\n    console.log('sc child', props, props.name);\r\n    return (\r\n        <Scrollbars autoHide universal={true} hideTracksWhenNotNeeded={true} autoHideTimeout={500} autoHideDuration={200}>\r\n            {props.children}\r\n        </Scrollbars>\r\n    );\r\n};\r\n\r\nexport default ScrollBar;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\FileApi.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\MenuApi.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\MasterForm.js",["475","476","477","478","479","480","481","482"],"// @flow\r\nimport React, { useState } from 'react';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport {\r\n    TextInput,\r\n    EmailInput,\r\n    PasswordInput,\r\n    NumberInput,\r\n    ImageInput,\r\n    MultiImageInput,\r\n    CheckboxInput,\r\n    ListInput,\r\n    ObjectInput,\r\n    IconInput,\r\n    ChipInput,\r\n    ColorInput,\r\n    TabControl,\r\n    DraftEditorInput,\r\n} from './control';\r\nimport { background } from '../config/Theme';\r\nimport { TextInputProps } from './control/TextInput';\r\n\r\nexport type Field = {\r\n    ...TextInputProps,\r\n    data?: Array | Object,\r\n    onValidate?: (event: React.SyntheticEvent<HTMLInputElement>, form?: Object) => string,\r\n};\r\n\r\nexport type GridProps = {\r\n    row: number,\r\n    col: number,\r\n};\r\n\r\nexport type MasterFormProps = {\r\n    fields: Array<Field>,\r\n    grid: GridProps,\r\n    type: 'form' | 'tab',\r\n    initialData: Object,\r\n    onWillSubmit?: (form: Object) => boolean,\r\n    onSubmit?: (event: React.SyntheticEvent<HTMLFormElement>, form: Object) => void,\r\n    onChange: () => void,\r\n    onKeyDown: () => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\n//const CHILDREN_MAPPING = [TextInput, EmailInput, PasswordInput, NumberInput, ImageInput];\r\n\r\nconst MasterForm = React.forwardRef((props: MasterFormProps, ref) => {\r\n    const [form, setForm] = useState({});\r\n    const classes = styles();\r\n    const { initialData, type, variant, direction, onWillSubmit, onSubmit, onChange, onKeyDown, children, fields, ...rest } = props;\r\n\r\n    React.useEffect(() => {\r\n        console.log('master init', initialData);\r\n        setForm({ ...form, ...initialData });\r\n    }, [initialData]);\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        let allow = true;\r\n\r\n        if (onWillSubmit) {\r\n            allow = onWillSubmit(form);\r\n        }\r\n\r\n        if (allow && onSubmit) {\r\n            onSubmit(event, form);\r\n        }\r\n    };\r\n\r\n    const handleValueChange = (field, event, index) => {\r\n        if (field.type === 'checkbox') {\r\n            form[field.id] = event.target.checked;\r\n        } else if (field.type === 'multi-image') {\r\n            if (!form[field.id]) form[field.id] = [];\r\n\r\n            if (!form[field.id][index]) {\r\n                form[field.id].push(event.target.value);\r\n            } else {\r\n                form[field.id][index] = event.target.value;\r\n            }\r\n        } else {\r\n            form[event.target.name] = event.target.value;\r\n        }\r\n\r\n        setForm(form);\r\n\r\n        if (onChange) {\r\n            onChange(event, index);\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = e => {\r\n        if (onKeyDown) {\r\n            onKeyDown(e);\r\n        }\r\n    };\r\n\r\n    const renderControl = (type, inputProps) => {\r\n        inputProps = { ...inputProps, variant: 'outlined' };\r\n\r\n        switch (type) {\r\n            case 'email':\r\n                return <EmailInput {...inputProps} />;\r\n            case 'password':\r\n                return <PasswordInput {...inputProps} />;\r\n            case 'number':\r\n                return <NumberInput {...inputProps} />;\r\n            case 'datetime':\r\n                return <TextInput type=\"datetime-local\" {...inputProps} />;\r\n            case 'date':\r\n                return <TextInput type=\"date\" {...inputProps} />;\r\n            case 'time':\r\n                return <TextInput type=\"time\" {...inputProps} />;\r\n            case 'checkbox':\r\n                return <CheckboxInput {...inputProps} />;\r\n            case 'image':\r\n                return <ImageInput {...inputProps} />;\r\n            case 'multi-image': {\r\n                return <MultiImageInput {...inputProps} />;\r\n            }\r\n            case 'icon':\r\n                return <IconInput {...inputProps} />;\r\n            case 'file':\r\n                return <ImageInput {...inputProps} />;\r\n            case 'list':\r\n                return <ListInput {...inputProps} />;\r\n            case 'table':\r\n                return <ObjectInput {...inputProps} />;\r\n            case 'chip':\r\n                return <ChipInput {...inputProps} />;\r\n            case 'color':\r\n                return <ColorInput {...inputProps} />;\r\n            case 'draft-editor':\r\n                return <DraftEditorInput {...inputProps} />;\r\n            default:\r\n                return <TextInput type={type} {...inputProps} />;\r\n        }\r\n    };\r\n\r\n    const renderTab = datas => {\r\n        datas = datas.map(data => {\r\n            if (data.fields) data.content = renderGrid(data.fields);\r\n\r\n            return data;\r\n        });\r\n\r\n        return <TabControl centered variant={variant || 'fullWidth'} tabs={datas}></TabControl>;\r\n    };\r\n\r\n    const renderGrid = datas => {\r\n        return (\r\n            <Grid\r\n                style={{ backgroundColor: 'inherit' }}\r\n                direction={direction || 'column'}\r\n                container\r\n                alignItems={direction === 'row' ? 'center' : 'stretch'}\r\n            >\r\n                {datas.map((field, index) => {\r\n                    const { type, ...inputProps } = field;\r\n                    inputProps.key = field.id + '_' + index;\r\n                    inputProps.name = field.name || field.id;\r\n                    inputProps.onChange = (event, index) => handleValueChange(field, event, index);\r\n\r\n                    if (field.onValidate) {\r\n                        inputProps.onValidate = event => field.onValidate(event, form);\r\n                    }\r\n\r\n                    return (\r\n                        <Grid className={classes.container} key={`grid_${inputProps.key}`} item>\r\n                            {renderControl(type, inputProps)}\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <form style={{ width: '100%' }} {...rest} ref={ref} onKeyDown={handleKeyDown} onSubmit={handleFormSubmit}>\r\n            {type == 'tab' ? renderTab(fields) : renderGrid(fields)}\r\n            {children}\r\n        </form>\r\n    );\r\n});\r\n\r\nMasterForm.defaultProps = {\r\n    type: 'form',\r\n    initialData: {},\r\n};\r\n\r\nexport default MasterForm;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\PaginationBar.js",["483","484","485","486","487","488","489"],"import React from 'react';\r\nimport { TablePagination, TablePaginationBaseProps, IconButton, Icon, makeStyles } from '@material-ui/core';\r\n\r\ntype PaginationBarProps = {\r\n    ...TablePaginationBaseProps,\r\n    rowsPerPage: Array<number>,\r\n    total: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    onPageChange: (newPage: number) => void,\r\n    onPageSizeChange: (newPageSize: number) => void,\r\n};\r\n\r\nconst PAGINATION_BUTTONS = [\r\n    {\r\n        name: 'first',\r\n        label: 'First Page',\r\n        icon: 'first_page',\r\n    },\r\n    {\r\n        name: 'previous',\r\n        label: 'Previous Page',\r\n        icon: 'chevron_left',\r\n    },\r\n    {\r\n        name: 'next',\r\n        label: 'Next Page',\r\n        icon: 'chevron_right',\r\n    },\r\n    {\r\n        name: 'last',\r\n        label: 'Last Page',\r\n        icon: 'last_page',\r\n    },\r\n];\r\n\r\nconst actionStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n    paginateButton: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\nconst PaginationAction = props => {\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n    const classes = actionStyles();\r\n\r\n    const isDisabled = item => {\r\n        const pageCount = Math.ceil(count / rowsPerPage);\r\n        if (item.name === 'first' || item.name === 'previous') {\r\n            return page <= 0;\r\n        } else if (item.name === 'last' || item.name === 'next') {\r\n            return page >= pageCount - 1;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const handlePaginationAction = action => {\r\n        const pageCount = Math.ceil(count / rowsPerPage);\r\n        let currentPage = page;\r\n        if (action.name === 'first') {\r\n            currentPage = 0;\r\n        } else if (action.name === 'last') {\r\n            currentPage = pageCount - 1;\r\n        } else if (action.name === 'next') {\r\n            currentPage = currentPage < pageCount - 1 ? currentPage + 1 : 0;\r\n        } else if (action.name === 'previous') {\r\n            currentPage = currentPage > 0 ? currentPage - 1 : pageCount - 1;\r\n        }\r\n        onChangePage(action, currentPage);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {PAGINATION_BUTTONS.map((item, index) => {\r\n                return (\r\n                    <IconButton\r\n                        className={classes.paginateButton}\r\n                        disabled={isDisabled(item)}\r\n                        onClick={() => handlePaginationAction(item)}\r\n                        key={index}\r\n                        aria-label={item.label}\r\n                    >\r\n                        <Icon>{item.icon}</Icon>\r\n                    </IconButton>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        background: theme.palette.common.white,\r\n    },\r\n}));\r\n\r\nconst PaginationBar = (props: PaginationBarProps) => {\r\n    const { total, pageSize, currentPage, rowsPerPage, onPageChange, onPageSizeChange, ...paginationProps } = props;\r\n    const classes = styles();\r\n    const handleRowsPerPageChange = e => {\r\n        if (onPageSizeChange) {\r\n            onPageSizeChange(parseInt(e.target.value));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TablePagination\r\n            className={classes.root}\r\n            rowsPerPageOptions={rowsPerPage}\r\n            count={total}\r\n            rowsPerPage={pageSize}\r\n            labelRowsPerPage=\"Page Size :\"\r\n            page={currentPage}\r\n            onChangeRowsPerPage={handleRowsPerPageChange}\r\n            onChangePage={(event, newPage) => onPageChange(newPage)}\r\n            ActionsComponent={PaginationAction}\r\n            {...paginationProps}\r\n        />\r\n    );\r\n};\r\n\r\nPaginationBar.defaultProps = {\r\n    rowsPerPage: [5, 10, 20, 50],\r\n    total: 0,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    onPageChange: newPage => console.warn('Undefined onPageChange => ', newPage),\r\n};\r\n\r\nexport default PaginationBar;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\RoleApi.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\layout\\TreeMenu.js",["490","491","492","493","494","495","496","497","498","499","500","501","502","503"],"import React from 'react';\r\nimport { Icon, makeStyles, Typography, fade } from '@material-ui/core';\r\nimport { TreeView, TreeItem } from '@material-ui/lab';\r\nimport { MenuProps } from './SideMenu';\r\n\r\nexport const TreeCollapseIcon = (expand, onClick) => {\r\n    return (\r\n        <Icon onClick={onClick} fontSize=\"small\">\r\n            {expand ? 'arrow_right' : 'arrow_drop_down'}\r\n        </Icon>\r\n    );\r\n};\r\n\r\nconst useTreeItemStyles = makeStyles(theme => ({\r\n    root: {\r\n        '&:focus > $content $label, &$selected > $content $label': {\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n    },\r\n    content: {\r\n        color: theme.palette.text.secondary,\r\n        borderTopRightRadius: theme.spacing(2),\r\n        borderBottomRightRadius: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        '$selected > &': {\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    },\r\n    selected: {},\r\n    group: {\r\n        marginLeft: 7,\r\n        paddingLeft: 7,\r\n        borderLeft: `1px dotted ${fade(theme.palette.text.primary, 0.4)}`,\r\n    },\r\n    label: {\r\n        fontWeight: 'inherit',\r\n        color: 'inherit',\r\n    },\r\n    labelRoot: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0.5, 0),\r\n    },\r\n    labelIcon: {\r\n        marginRight: theme.spacing(1),\r\n        color: theme.palette.text.primary,\r\n    },\r\n    labelText: {\r\n        fontWeight: 'inherit',\r\n        flexGrow: 1,\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nexport const DefaultTreeItem = props => {\r\n    const classes = useTreeItemStyles();\r\n    //Unused property need to add for remove in DOM.\r\n    const { nodeId, label, icon, onClick, onCollapseClick, items, divider, parentId, createdBy, modifiedBy, createdAt, modifiedAt, ...other } = props;\r\n    const isCollapseable = items && items.length > 0;\r\n\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick(props);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TreeItem\r\n            nodeId={nodeId}\r\n            expandIcon={TreeCollapseIcon(true, () => onCollapseClick(nodeId))}\r\n            collapseIcon={TreeCollapseIcon(false, () => onCollapseClick(nodeId))}\r\n            onClick={handleClick}\r\n            label={\r\n                <div className={classes.labelRoot}>\r\n                    <Icon className={classes.labelIcon} fontSize=\"small\">\r\n                        {icon}\r\n                    </Icon>\r\n                    <Typography variant=\"body2\" className={classes.labelText}>\r\n                        {label}\r\n                    </Typography>\r\n                </div>\r\n            }\r\n            classes={{\r\n                root: classes.root,\r\n                content: classes.content,\r\n                selected: classes.selected,\r\n                expanded: classes.expanded,\r\n                group: classes.group,\r\n                label: classes.label,\r\n            }}\r\n            {...other}\r\n        >\r\n            {isCollapseable\r\n                ? items.map((menu, index) => {\r\n                      return (\r\n                          <DefaultTreeItem\r\n                              onCollapseClick={onCollapseClick}\r\n                              onClick={onClick}\r\n                              nodeId={menu.id + '-' + index}\r\n                              key={menu.id + '-' + index}\r\n                              {...menu}\r\n                          />\r\n                      );\r\n                  })\r\n                : null}\r\n        </TreeItem>\r\n    );\r\n};\r\n\r\ntype TreeMenuProps = {\r\n    menus: Array<MenuProps>,\r\n    onClickItem?: (item: Object) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        height: 216,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n}));\r\n\r\nconst TreeMenu = (props: TreeMenuProps) => {\r\n    const classes = styles();\r\n    const { onClickItem, menus } = props;\r\n    const [expandedNodes, setExpandedNodes] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        const expNodes = menus.map((menu, index) => menu.id + '-' + index);\r\n        setExpandedNodes(expNodes);\r\n    }, [menus]);\r\n\r\n    const handleCollapseItemClick = nodeId => {\r\n        const existIdx = expandedNodes.findIndex(x => x === nodeId);\r\n        const updateNodes = existIdx < 0 ? [...expandedNodes, nodeId] : expandedNodes.filter(x => x !== nodeId);\r\n\r\n        setExpandedNodes(updateNodes);\r\n    };\r\n\r\n    return (\r\n        <TreeView\r\n            expanded={expandedNodes}\r\n            className={classes.root}\r\n            defaultCollapseIcon={<Icon>arrow_drop_down</Icon>}\r\n            defaultExpandIcon={<Icon>arrow_right</Icon>}\r\n        >\r\n            {menus.map((menu, index) => {\r\n                return (\r\n                    <DefaultTreeItem\r\n                        onCollapseClick={handleCollapseItemClick}\r\n                        onClick={onClickItem}\r\n                        nodeId={menu.id + '-' + index}\r\n                        key={menu.id + '-' + index}\r\n                        {...menu}\r\n                    />\r\n                );\r\n            })}\r\n        </TreeView>\r\n    );\r\n};\r\n\r\nTreeMenu.defaultProps = {\r\n    onClickItem: item => console.warn('Undefined onClickItem => ', item),\r\n};\r\n\r\nexport default TreeMenu;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\SwaggerApi.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\file\\ImagePreview.js",["504","505"],"import React from 'react';\r\nimport {\r\n    Dialog,\r\n    IconButton,\r\n    Icon,\r\n    Divider,\r\n    CardContent,\r\n    Typography,\r\n    Grid,\r\n    CardActions,\r\n    Button,\r\n    makeStyles,\r\n    Fade,\r\n    MuiThemeProvider,\r\n} from '@material-ui/core';\r\nimport { ErrorTheme } from '../../config/Theme';\r\nimport FileApi from '../../api/FileApi';\r\n\r\nconst FileInfoField = props => {\r\n    const { label, value, ...rest } = props;\r\n    return (\r\n        <Grid container {...rest}>\r\n            <Grid container item xs={3}>\r\n                <Typography variant=\"caption\">{label}</Typography>\r\n            </Grid>\r\n            <Grid container item xs={9}>\r\n                <Typography variant=\"subtitle2\">: {value}</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Fade in ref={ref} {...props} />;\r\n});\r\n\r\nconst style = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(0.5),\r\n        position: 'relative',\r\n    },\r\n    buttonClose: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n    },\r\n}));\r\n\r\ntype ImagePreviewProps = {\r\n    show: boolean,\r\n    data: Object,\r\n    onClose?: () => void,\r\n    onRemove?: (file: Object) => void,\r\n};\r\n\r\nconst ImagePreview = (props: ImagePreviewProps) => {\r\n    const { show, data, onClose, onRemove } = props;\r\n    const [dimension, setDimension] = React.useState(data.size);\r\n    const isImage = data.type.startsWith('image');\r\n    const url = FileApi.downloadLink(data, 'large') || '/res/default-image.png';\r\n\r\n    const handleImageLoading = ({ target: img }) => {\r\n        setDimension(img.naturalWidth + ' x ' + img.naturalHeight);\r\n    };\r\n\r\n    const classes = style();\r\n\r\n    const handleRemove = () => {\r\n        onClose();\r\n        if (onRemove) {\r\n            onRemove(data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            onEscapeKeyDown={onClose}\r\n            open={show}\r\n            TransitionComponent={Transition}\r\n            onClose={onClose}\r\n            aria-labelledby=\"image-preview-dialog\"\r\n            aria-describedby={data.name}\r\n        >\r\n            <div className={classes.root}>\r\n                <IconButton className={classes.buttonClose} size=\"small\" color=\"primary\" onClick={() => onClose(false)} aria-label=\"Close\">\r\n                    <Icon>close</Icon>\r\n                </IconButton>\r\n                <img onLoad={handleImageLoading} width=\"100%\" height=\"100%\" src={url} alt={data.name} />\r\n            </div>\r\n            <Divider />\r\n            <CardContent>\r\n                {data ? (\r\n                    <Grid container>\r\n                        <FileInfoField label=\"Name\" value={data.name + '.' + data.extension} />\r\n                        <FileInfoField label=\"Type\" value={data.type} />\r\n                        <FileInfoField label=\"Size\" value={data.size} />\r\n                        {isImage ? <FileInfoField label=\"Dimensions\" value={dimension} /> : null}\r\n                    </Grid>\r\n                ) : (\r\n                    <Typography variant=\"caption\" align=\"center\">\r\n                        There is no image.\r\n                    </Typography>\r\n                )}\r\n            </CardContent>\r\n            {onRemove ? (\r\n                <CardActions style={{ justifyContent: 'flex-end' }}>\r\n                    <MuiThemeProvider theme={ErrorTheme}>\r\n                        <Button color=\"primary\" variant=\"contained\" onClick={handleRemove}>\r\n                            Delete\r\n                        </Button>\r\n                    </MuiThemeProvider>\r\n                </CardActions>\r\n            ) : null}\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nImagePreview.defaultProps = {\r\n    onClose: () => console.warn('Undefined onClose'),\r\n};\r\n\r\nexport default ImagePreview;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\file\\FileGrid.js",["506","507","508","509","510","511","512"],"/* @flow */\r\nimport React from 'react';\r\nimport { Grid, GridProps, CardActionArea, Card, CardMedia, CardContent, Typography, makeStyles } from '@material-ui/core';\r\nimport FileApi from '../../api/FileApi';\r\n\r\nconst itemStyles = makeStyles(theme => ({\r\n    root: props => ({\r\n        width: '100%',\r\n        cursor: 'pointer',\r\n        margin: theme.spacing(1),\r\n        border: '1px solid ' + (props.selected ? theme.palette.primary.main : theme.palette.divider),\r\n        backgroundColor: theme.palette.background.paper,\r\n    }),\r\n    title: {\r\n        padding: theme.spacing(0.5, 0),\r\n    },\r\n    media: props => ({\r\n        paddingTop: '75%', // 16:9\r\n        borderBottom: '1px solid ' + (props.selected ? theme.palette.primary.main : theme.palette.divider),\r\n    }),\r\n    info: props => ({\r\n        padding: theme.spacing(0.5, 1),\r\n        color: props.selected ? theme.palette.primary.contrastText : theme.palette.secondary.contrastText,\r\n        backgroundColor: props.selected ? theme.palette.primary.main : theme.palette.secondary.main,\r\n    }),\r\n    markedIcon: {\r\n        position: 'absolute',\r\n        fontSize: 28,\r\n        top: 0,\r\n        right: 0,\r\n    },\r\n}));\r\n\r\ntype FileGridItemProps = {\r\n    onClick: () => void,\r\n    multi: boolean,\r\n    isMarked: boolean,\r\n    name: string,\r\n    extension: string,\r\n    size: string,\r\n    type: string,\r\n};\r\n\r\nexport const FileGridItem = (props: FileGridItemProps) => {\r\n    const { onClick, multi, isMarked, ...item } = props;\r\n    const classes = itemStyles({ selected: isMarked });\r\n    const isImage = item.type.startsWith('image');\r\n    const url = FileApi.downloadLink(item, 'small') || '/res/default-image.png';\r\n\r\n    return (\r\n        <Grid container item justify=\"center\" xs={6} sm={4} md={3} lg={2}>\r\n            <Card className={classes.root} elevation={3}>\r\n                <CardActionArea onClick={onClick}>\r\n                    <CardMedia className={classes.media} image={url} title={item.name ? item.name : 'No Image'} />\r\n                    {url && isImage ? <img src={url} alt={item.name} style={{ display: 'none' }} /> : null}\r\n                    <CardContent style={isMarked ? { position: 'relative' } : null} className={classes.info}>\r\n                        <Typography className={classes.title} variant=\"subtitle2\" align=\"center\">\r\n                            {item.name + '.' + item.extension}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n\r\ntype FileGridProps = {\r\n    data: Array<Object>,\r\n    selectedData: Array<Object>,\r\n    multi: boolean,\r\n    onClickItem?: (file: Object) => void,\r\n    ...GridProps,\r\n};\r\n\r\nconst FileGrid = (props: FileGridProps) => {\r\n    const { data, selectedData, multi, onClickItem, ...gridProps } = props;\r\n\r\n    return (\r\n        <Grid container {...gridProps}>\r\n            {data && data.length > 0 ? (\r\n                data.map((item, index) => {\r\n                    const isMarked = multi\r\n                        ? selectedData.findIndex(x => x.id === item.id) >= 0\r\n                        : selectedData && selectedData.id && selectedData.id === item.id;\r\n\r\n                    return <FileGridItem multi={multi} isMarked={isMarked} key={item.id + '-' + index} onClick={() => onClickItem(item)} {...item} />;\r\n                })\r\n            ) : (\r\n                <Grid item>\r\n                    <Typography variant=\"body2\">There is no file.</Typography>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nFileGrid.defaultProps = {\r\n    data: [],\r\n    multi: false,\r\n    onClickItem: file => console.warn('Undefined onSelectionChange => ', file),\r\n};\r\n\r\nexport default FileGrid;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\file\\MultiUpload.js",["513","514","515","516","517","518","519","520","521"],"import React from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport {\r\n    Fade,\r\n    Dialog,\r\n    makeStyles,\r\n    Typography,\r\n    Container,\r\n    DialogActions,\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    Divider,\r\n    IconButton,\r\n    MuiThemeProvider,\r\n} from '@material-ui/core';\r\nimport { ErrorTheme } from '../../config/Theme';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Fade in ref={ref} {...props} />;\r\n});\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    container: {\r\n        minHeight: 120,\r\n        flex: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        outline: 'none',\r\n        color: theme.palette.action.disabled,\r\n        transition: 'border .24s ease-in-out',\r\n        border: '2px dashed ' + theme.palette.info.main,\r\n        background: theme.palette.background.default,\r\n        cursor: 'pointer',\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    thumbnailContainer: {\r\n        border: '1px solid ' + theme.palette.divider,\r\n        padding: theme.spacing(1),\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.default,\r\n        position: 'relative',\r\n    },\r\n    thumbnail: {\r\n        maxWidth: 128,\r\n        maxHeight: 128,\r\n        width: 'auto',\r\n        height: 'auto',\r\n    },\r\n    removeButton: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0,\r\n        padding: 0,\r\n        width: 25,\r\n        height: 25,\r\n        fontSize: 12,\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        borderRadius: 40,\r\n    },\r\n}));\r\n\r\ntype MultiUploadProps = {\r\n    show: boolean,\r\n    accept: string,\r\n    onClose: (result: Array<Object>) => void,\r\n};\r\n\r\nexport const MultiUpload = (props: MultiUploadProps) => {\r\n    const { show, accept, onClose } = props;\r\n    const classes = styles();\r\n    const [files, setFiles] = React.useState([]);\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: accept,\r\n        onDrop: acceptedFiles => {\r\n            const newFiles = acceptedFiles.map((file, idx) =>\r\n                Object.assign(file, {\r\n                    preview: URL.createObjectURL(file),\r\n                    id: idx + '-' + file.name,\r\n                }),\r\n            );\r\n            setFiles([...files, ...newFiles]);\r\n        },\r\n    });\r\n\r\n    React.useEffect(\r\n        () => () => {\r\n            // Make sure to revoke the data uris to avoid memory leaks\r\n            files.forEach(file => {\r\n                if (file.preview) {\r\n                    URL.revokeObjectURL(file.preview);\r\n                }\r\n            });\r\n        },\r\n        [files],\r\n    );\r\n\r\n    const handleClose = status => {\r\n        const uploadFiles = files.map(file => {\r\n            URL.revokeObjectURL(file.preview);\r\n            delete file.preview;\r\n            return file;\r\n        });\r\n        if (status) {\r\n            onClose(uploadFiles);\r\n        } else {\r\n            onClose(false);\r\n        }\r\n        setFiles([]);\r\n    };\r\n\r\n    const handleRemove = file => {\r\n        // Make sure to revoke the data uris to avoid memory leaks\r\n        URL.revokeObjectURL(file.preview);\r\n        const updatedFiles = files.filter(f => f.id !== file.id);\r\n        console.log('Updated Files => ', updatedFiles);\r\n        setFiles(updatedFiles);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth=\"md\"\r\n            fullWidth\r\n            open={show}\r\n            onClose={() => handleClose(false)}\r\n            onEscapeKeyDown={() => handleClose(false)}\r\n            TransitionComponent={Transition}\r\n        >\r\n            <Container className={classes.root}>\r\n                <div {...getRootProps({ className: classes.container })}>\r\n                    <input {...getInputProps()} />\r\n                    <Typography variant=\"h5\" color=\"inherit\">\r\n                        Drag &amp; drop or click to upload files.\r\n                    </Typography>\r\n                </div>\r\n                <Grid container spacing={1}>\r\n                    {files.map((file, idx) => {\r\n                        return (\r\n                            <Grid key={file.id} container item justify=\"center\" xs={6} sm={4} md={3} lg={2}>\r\n                                <div className={classes.thumbnailContainer}>\r\n                                    <MuiThemeProvider theme={ErrorTheme}>\r\n                                        <IconButton onClick={() => handleRemove(file)} className={classes.removeButton}>\r\n                                            <Icon color=\"primary\">delete</Icon>\r\n                                        </IconButton>\r\n                                    </MuiThemeProvider>\r\n                                    <img className={classes.thumbnail} src={file.preview} alt={file.name} />\r\n                                </div>\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n                </Grid>\r\n            </Container>\r\n            <Divider />\r\n            <DialogActions>\r\n                <Button onClick={() => handleClose(true)} variant=\"contained\" color=\"primary\">\r\n                    <Icon>done</Icon> Ok\r\n                </Button>\r\n                <Button onClick={() => handleClose(false)} variant=\"contained\" color=\"default\">\r\n                    <Icon>done</Icon> Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nMultiUpload.defaultProps = {\r\n    accept: 'image/*',\r\n    onClose: result => console.warn('Undefined onClose =>', result),\r\n};\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\ImportMenu.js",["522","523","524","525","526"],"import React from 'react';\r\nimport { ButtonProps, Button, Icon, makeStyles } from '@material-ui/core';\r\nimport ImportDialog from './ImportDialog';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    icon: {\r\n        marginRight: theme.spacing(0.5),\r\n    },\r\n}));\r\n\r\ntype ImportMenuProps = {\r\n    ...ButtonProps,\r\n    label?: string,\r\n    title?: string,\r\n    onImportItems?: data => void,\r\n    fields: Array,\r\n};\r\n\r\nconst ImportMenu = (props: ImportMenuProps) => {\r\n    const { label, title, fields, onImportItems, ...buttonProps } = props;\r\n    const classes = styles();\r\n    const [showImport, setShowImport] = React.useState(false);\r\n\r\n    const handleClose = result => {\r\n        if (result && result.length > 0) {\r\n            onImportItems(result);\r\n        }\r\n        setShowImport(false);\r\n    };\r\n\r\n    const importablFields = fields.map(field => ({ name: field, label: field }));\r\n\r\n    return (\r\n        <>\r\n            <ImportDialog show={showImport} title={title ? title : 'Import Data'} fields={importablFields} onClose={handleClose} />\r\n            <Button type=\"button\" color=\"secondary\" onClick={() => setShowImport(true)} variant=\"contained\" aria-label=\"Import Data\" {...buttonProps}>\r\n                <Icon className={classes.icon}>cloud_upload</Icon>\r\n                {label ? label : 'Import'}\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nImportMenu.defaultProps = {\r\n    onImportItems: data => console.warn('Undefined onImportItems => ', data),\r\n};\r\n\r\nexport default ImportMenu;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\RouteApi.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\index.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\SearchInput.js",["527","528","529"],"import * as React from 'react';\r\nimport { TextField, TextFieldProps, InputAdornment, Icon, IconButton, makeStyles } from '@material-ui/core';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nexport type SearchIpnutProps = {\r\n    ...TextFieldProps,\r\n    icon?: string,\r\n    required: boolean,\r\n    label: string,\r\n    onSearch?: (search: string) => void,\r\n    onChange?: (event: React.SyntheticEvent<HTMLInputElement>) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    closeButton: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nexport default function SearchInput(props: SearchIpnutProps) {\r\n    const { id, name, value, onSearch, onChange, ...rest } = props;\r\n    const [search, setSearch] = React.useState(value);\r\n    const searchTextField = React.createRef();\r\n    const classes = styles();\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        const newValue = FormatManager.defaultNull(value) || '';\r\n\r\n        if (searchTextField.current && newValue !== searchTextField.current.value) {\r\n            searchTextField.current.value = newValue;\r\n            handleTextChange({ target: searchTextField.current });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const handleTextChange = event => {\r\n        setSearch(event.target.value);\r\n        if (onChange) {\r\n            onChange(event);\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            if (onSearch) {\r\n                onSearch(search);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleClearText = () => {\r\n        searchTextField.current.value = '';\r\n        setSearch('');\r\n        onSearch('');\r\n    };\r\n\r\n    const buildInputIcon = () => {\r\n        const hasFilterText = search && search.length > 0;\r\n        let inputProps = {\r\n            startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                    <Icon color=\"textPrimary\">search</Icon>\r\n                </InputAdornment>\r\n            ),\r\n        };\r\n\r\n        if (hasFilterText) {\r\n            inputProps.endAdornment = (\r\n                <InputAdornment position=\"end\">\r\n                    {search ? (\r\n                        <IconButton edge=\"end\" aria-label=\"Clear filter text\" onClick={handleClearText} size=\"small\">\r\n                            <Icon className={classes.closeButton} fontSize=\"small\">\r\n                                close\r\n                            </Icon>\r\n                        </IconButton>\r\n                    ) : null}\r\n                </InputAdornment>\r\n            );\r\n        }\r\n\r\n        return inputProps;\r\n    };\r\n\r\n    return (\r\n        <TextField\r\n            placeholder=\"Search\"\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            {...rest}\r\n            inputRef={searchTextField}\r\n            id={id || name}\r\n            name={name || id}\r\n            onChange={handleTextChange}\r\n            onKeyDown={handleKeyDown}\r\n            InputProps={buildInputIcon()}\r\n        />\r\n    );\r\n}\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\util\\FormatManager.js",["530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557"],"import moment from 'moment';\r\nimport chroma from 'chroma-js';\r\n\r\nexport default class FormatManager {\r\n    static tryParseJson = text => {\r\n        try {\r\n            const jsonObj = JSON.parse(text);\r\n            if (jsonObj && typeof jsonObj === 'object') {\r\n                return jsonObj;\r\n            } else {\r\n                return text;\r\n            }\r\n        } catch (e) {\r\n            return text;\r\n        }\r\n    };\r\n\r\n    static defaultNull = input => {\r\n        if (typeof input === 'undefined') {\r\n            return null;\r\n        }\r\n        return input;\r\n    };\r\n\r\n    static formatDate = (date, format) => {\r\n        if (!date) return '-';\r\n        const unixTS = parseInt(date / 1000);\r\n        return moment.unix(unixTS).format(format);\r\n    };\r\n\r\n    static validURL = str => {\r\n        var pattern = new RegExp(\r\n            '^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n                '(\\\\#[-a-z\\\\d_]*)?$',\r\n            'i',\r\n        ); // fragment locator\r\n        return !!pattern.test(str);\r\n    };\r\n\r\n    static isFunction(functionToCheck) {\r\n        return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\r\n    }\r\n\r\n    static buildCSV = input => {\r\n        if (typeof input === 'boolean') {\r\n            return '\"' + input + '\"';\r\n        }\r\n\r\n        if (!input) {\r\n            return '\"\"';\r\n        }\r\n\r\n        return '\"' + input.replace(/[\"]/g, '\"\"') + '\"';\r\n    };\r\n\r\n    static toTimestamp = date => {\r\n        return moment(date).valueOf();\r\n    };\r\n\r\n    static snakeToCamel = str => {\r\n        return str.replace(/([-_][a-z])/g, word => word.toUpperCase().replace('_', ''));\r\n    };\r\n\r\n    static camelToSnake = str => {\r\n        return str.replace(/([A-Z])/g, word => '_' + word.toLowerCase()).replace(/^_/, '');\r\n    };\r\n\r\n    static camelToReadable = str => {\r\n        return str\r\n            .match(/^[a-z]+|[A-Z][a-z]*/g)\r\n            .map(function(x) {\r\n                return x[0].toUpperCase() + x.substr(1).toLowerCase();\r\n            })\r\n            .join(' ');\r\n    };\r\n\r\n    static readableToSnake = str => {\r\n        return str.toLowerCase().replace(/\\s/g, '_');\r\n    };\r\n\r\n    static ValidateEmail = mail => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(mail);\r\n    };\r\n\r\n    static ValidateUser = user => {\r\n        return /^[a-zA-Z0-9\\\\.]*$/.test(user);\r\n    };\r\n\r\n    static DateDiff = (date1, date2) => {\r\n        //Get 1 day in milliseconds\r\n        const one_day = 1000 * 60 * 60 * 24;\r\n\r\n        // Convert both dates to milliseconds\r\n        const date1_ms = date1.getTime();\r\n        const date2_ms = date2.getTime();\r\n\r\n        // Calculate the difference in milliseconds\r\n        const difference_ms = date2_ms - date1_ms;\r\n\r\n        // Convert back to days and return\r\n        return Math.round(difference_ms / one_day);\r\n    };\r\n\r\n    static TimeDiff = (date1, date2) => {\r\n        return Math.abs(date1 - date2) / 36e5;\r\n    };\r\n\r\n    static thousandSeparator = input => {\r\n        return parseFloat(input).toLocaleString('en');\r\n    };\r\n\r\n    static hex2Rgb = e => {\r\n        if (!e) return null;\r\n        let t = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        e = e.replace(t, function(e, t, r, o) {\r\n            return t + t + r + r + o + o;\r\n        });\r\n        let r = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(e);\r\n        return r\r\n            ? {\r\n                  r: parseInt(r[1], 16),\r\n                  g: parseInt(r[2], 16),\r\n                  b: parseInt(r[3], 16),\r\n              }\r\n            : null;\r\n    };\r\n\r\n    static rgb2Hex = e => {\r\n        let t = Math.round(e.b) + 256 * Math.round(e.g) + 65536 * Math.round(e.r);\r\n        return '#' + ('000000' + t.toString(16)).substr(-6);\r\n    };\r\n\r\n    static lightenHex = hex => {\r\n        return chroma(hex)\r\n            .brighten()\r\n            .hex();\r\n    };\r\n\r\n    static darkenHex = hex => {\r\n        return chroma(hex)\r\n            .darken()\r\n            .hex();\r\n    };\r\n\r\n    static contrastText = hex => {\r\n        let c = hex.substring(1); // strip #\r\n        let rgb = parseInt(c, 16); // convert rrggbb to decimal\r\n        let r = (rgb >> 16) & 0xff; // extract red\r\n        let g = (rgb >> 8) & 0xff; // extract green\r\n        let b = (rgb >> 0) & 0xff; // extract blue\r\n\r\n        let luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\r\n        console.log('light/dark', luma);\r\n        if (luma < 127.5) {\r\n            return '#FFF';\r\n        }\r\n        return '#000';\r\n    };\r\n\r\n    static generateThemeColors = hex => {\r\n        return {\r\n            main: hex,\r\n            light: this.darkenHex(hex),\r\n            dark: this.lightenHex(hex),\r\n            contrastText: this.contrastText(hex),\r\n        };\r\n    };\r\n\r\n    static randomColor = () => {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    };\r\n}\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\index.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\TextInput.js",["558","559"],"/**\r\n * @flow\r\n */\r\nimport * as React from 'react';\r\nimport { TextField, InputBase, TextFieldProps, InputAdornment, Icon } from '@material-ui/core';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nexport type TextInputProps = {\r\n    ...TextFieldProps,\r\n    icon?: string,\r\n    required: boolean,\r\n    label: string,\r\n    variant: 'filled' | 'outlined' | 'standard',\r\n    onValidate?: (event: React.SyntheticEvent<HTMLInputElement>) => string,\r\n    onChange?: (event: React.SyntheticEvent<HTMLInputElement>) => void,\r\n};\r\n\r\nconst TextInput = (props: TextInputProps) => {\r\n    const [error, setError] = React.useState('');\r\n    const [invalid, setInvalid] = React.useState(false);\r\n\r\n    //Remove default onChange\r\n    //Skip onValidate props to parent componets\r\n    const { id, name, variant, inputRef, value, onChange, onValidate, icon, ...rest } = props;\r\n\r\n    const currentInput = inputRef || React.createRef();\r\n\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        const newValue = FormatManager.defaultNull(value) || value === 0 ? value : '';\r\n\r\n        if (currentInput.current && newValue !== currentInput.current.value) {\r\n            currentInput.current.value = newValue;\r\n            handleTextChange({\r\n                target: currentInput.current,\r\n            });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const handleTextChange = event => {\r\n        const data = event.target.value;\r\n        let errorText = '';\r\n        if (props.required && (!data || data.length <= 0)) {\r\n            errorText = (props.label || props.name || props.id) + \" can't be blank.\";\r\n        } else if (onValidate) {\r\n            errorText = onValidate(event);\r\n        }\r\n        setError(errorText);\r\n        event.target.setCustomValidity(errorText);\r\n        setInvalid(errorText.length > 0);\r\n        if (onChange) {\r\n            onChange(event);\r\n        }\r\n    };\r\n\r\n    const buildInputIcon = icon => {\r\n        if (icon) {\r\n            return {\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <Icon>{icon}</Icon>\r\n                    </InputAdornment>\r\n                ),\r\n                ...props.InputProps,\r\n            };\r\n        }\r\n        return props.InputProps;\r\n    };\r\n\r\n    const placeholder = 'Enter ' + FormatManager.camelToReadable(id || name);\r\n\r\n    let variantProps = { variant: variant };\r\n    if (variant !== 'standard') {\r\n        variantProps = {\r\n            ...variantProps,\r\n            InputLabelProps: {\r\n                shrink: true,\r\n            },\r\n            helperText: error,\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {variant == 'standard' ? (\r\n                <InputBase\r\n                    {...variantProps}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    placeholder={placeholder}\r\n                    {...rest}\r\n                    id={id || name}\r\n                    name={name || id}\r\n                    inputRef={currentInput}\r\n                    error={invalid}\r\n                    onChange={handleTextChange}\r\n                    InputProps={buildInputIcon(icon)}\r\n                />\r\n            ) : (\r\n                <TextField\r\n                    {...variantProps}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    placeholder={placeholder}\r\n                    {...rest}\r\n                    id={id || name}\r\n                    name={name || id}\r\n                    inputRef={currentInput}\r\n                    error={invalid}\r\n                    onChange={handleTextChange}\r\n                    InputProps={buildInputIcon(icon)}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTextInput.defaultProps = {\r\n    variant: 'outlined',\r\n};\r\n\r\nexport default TextInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\ImportDialog.js",["560","561","562","563","564","565","566"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Zoom,\r\n    Grid,\r\n    makeStyles,\r\n    Divider,\r\n    Typography,\r\n    Icon,\r\n    LinearProgress,\r\n    DialogActions,\r\n} from '@material-ui/core';\r\nimport DataTable from '.';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nexport type ImportDialgProps = {\r\n    show: boolean,\r\n    fields: Array,\r\n    title: string,\r\n    onClose?: (result: Object) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    content: {\r\n        backgroundColor: theme.palette.background.default,\r\n        borderBottom: '1px solid ' + theme.palette.divider,\r\n        padding: 0,\r\n    },\r\n    header: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    noLoading: {\r\n        height: 4,\r\n        display: 'block',\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(0.5),\r\n    },\r\n}));\r\n\r\nconst CSV_REGEX = {\r\n    seperator: /,|;|:|\\|/g,\r\n    jsonPattern: /(\\[[^\\]]*]+)|(\\{[^}]*}+)/g,\r\n    seperatorCleaner: /(\",\")/g,\r\n    escape: /\"\"/g,\r\n    trim: /^(\"|\\n|\\r)|(\"|\\n|\\r)$/g,\r\n    validName: /[^a-zA-Z0-9\\\\._]/g,\r\n    tempJSON: '@json_data',\r\n    invalidColumn: '<invalid>',\r\n};\r\n\r\nexport const CsvReader = (fields, input) => {\r\n    let output = [];\r\n    let headers = [];\r\n    input.split(/\\r\\n|\\n/g).forEach((line, idx) => {\r\n        const row = line.replace(CSV_REGEX.seperatorCleaner, ',').replace(CSV_REGEX.trim, '');\r\n        if (row.length > 0) {\r\n            if (idx === 0) {\r\n                headers = row.split(CSV_REGEX.seperator).map(val => {\r\n                    const header = FormatManager.snakeToCamel(val.replace(CSV_REGEX.validName, '_'));\r\n                    const validIdx = fields.findIndex(f => f.name.toLowerCase() === header.toLowerCase());\r\n                    if (validIdx >= 0) {\r\n                        return fields[validIdx];\r\n                    } else {\r\n                        return CSV_REGEX.invalidColumn;\r\n                    }\r\n                });\r\n            } else {\r\n                const innerValues = row.match(CSV_REGEX.jsonPattern);\r\n                const values = row.replace(CSV_REGEX.jsonPattern, CSV_REGEX.tempJSON).split(CSV_REGEX.seperator);\r\n                let item = {};\r\n                let jsonIdx = 0;\r\n                headers.forEach((prop, col) => {\r\n                    if (prop === CSV_REGEX.invalidColumn) {\r\n                        return;\r\n                    }\r\n\r\n                    let value = values[col].trim().replace(CSV_REGEX.escape, '\"');\r\n                    if (value === CSV_REGEX.tempJSON) {\r\n                        value = innerValues[jsonIdx].replace(CSV_REGEX.escape, '\"');\r\n                        try {\r\n                            value = JSON.parse(value);\r\n                        } catch (error) {\r\n                            console.warn(error);\r\n                        } finally {\r\n                            jsonIdx++;\r\n                        }\r\n                    }\r\n                    item[prop.name] = value;\r\n                });\r\n                output.push(item);\r\n            }\r\n        }\r\n    });\r\n    return output;\r\n};\r\n\r\nexport default function ImportDialog(props: ImportDialgProps) {\r\n    const classes = styles();\r\n    const { title, fields, onClose, show } = props;\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [message, setMessage] = React.useState('Please upload a csv file.');\r\n    const [data, setData] = React.useState([]);\r\n    const inputUpload = React.createRef();\r\n\r\n    const handleClose = isSubmit => {\r\n        if (isSubmit && data && data.length > 0) {\r\n            onClose(data);\r\n        } else {\r\n            onClose(false);\r\n        }\r\n        setData([]);\r\n    };\r\n\r\n    const handleUploadChange = event => {\r\n        const files = event.target.files;\r\n        if (files && files.length > 0) {\r\n            setLoading(true);\r\n            const file = files[0];\r\n            const fileReader = new FileReader();\r\n            fileReader.onload = () => {\r\n                if (file.type.endsWith('csv') || file.name.endsWith('csv')) {\r\n                    try {\r\n                        const csv = CsvReader(fields, fileReader.result);\r\n\r\n                        setData(csv);\r\n                    } catch (error) {\r\n                        setMessage(error);\r\n                    } finally {\r\n                        setLoading(false);\r\n                    }\r\n                }\r\n            };\r\n            fileReader.readAsText(file);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog fullWidth maxWidth=\"lg\" open={show} onEscapeKeyDown={() => onClose(false)} TransitionComponent={Transition}>\r\n            <DialogTitle className={classes.header}>\r\n                <Grid container>\r\n                    <Grid container item lg={6} md={6} sm={12} xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n                        <Typography color=\"primary\" variant=\"h6\" component=\"h1\" noWrap>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item lg={6} md={6} sm={12} xs={12} alignItems=\"center\" justify=\"flex-end\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            color=\"secondary\"\r\n                            onClick={() => inputUpload.current.click()}\r\n                            variant=\"contained\"\r\n                            aria-label=\"Upload File\"\r\n                        >\r\n                            <Icon className={classes.icon}>computer</Icon>Browse ...\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogTitle>\r\n            <Divider />\r\n            <DialogContent className={classes.content}>\r\n                {loading ? <LinearProgress /> : <div className={classes.noLoading}></div>}\r\n                <DataTable items={data} fields={fields} noData={message} disablePaging={true} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <input\r\n                    ref={inputUpload}\r\n                    style={{ display: 'none' }}\r\n                    name=\"uploadFile\"\r\n                    accept=\".csv, .txt\"\r\n                    type=\"file\"\r\n                    onChange={handleUploadChange}\r\n                />\r\n                <Button onClick={() => handleClose(true)} color=\"primary\" variant=\"contained\">\r\n                    <Icon>done</Icon> Ok\r\n                </Button>\r\n                <Button onClick={() => handleClose(false)} color=\"default\" variant=\"contained\">\r\n                    <Icon>close</Icon> Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nImportDialog.defaultProps = {\r\n    onError: error => console.warn('Undefined onError => ', error),\r\n    onClose: result => console.warn('Undefined onClose => ', result),\r\n};\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\UserApi.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\util\\LangManager.js",["567"],"import Translator from '../config/Translate';\r\n\r\nexport default class LangManager {\r\n    static textConverter = (content, mmFont) => {\r\n        //Display Text Analysis\r\n        if (typeof content === 'object') {\r\n            mmFont = mmFont.startsWith('mm') ? mmFont.replace('mm', '') : 'zg';\r\n            return {\r\n                text: content[mmFont],\r\n                isMyanmar: true,\r\n            };\r\n        }\r\n\r\n        return {\r\n            text: content,\r\n            isMyanmar: false,\r\n        };\r\n    };\r\n\r\n    static translateToUni = content => {\r\n        return this.translateText(content, 'uni');\r\n    };\r\n\r\n    static translateText = (content, lang) => {\r\n        if (content && typeof content === 'object') {\r\n            if (lang === 'zg' && content.zg) {\r\n                return content.zg;\r\n            } else if (lang === 'uni' && content.uni) {\r\n                return content.uni;\r\n            }\r\n            return JSON.stringify(content);\r\n        } else if (content && Translator[content]) {\r\n            return Translator[content][lang];\r\n        }\r\n        return content;\r\n    };\r\n}\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\FormDialog.js",["568"],"import React from 'react';\r\nimport { Button, Dialog, DialogContent, DialogTitle, Zoom, Grid, makeStyles, Divider } from '@material-ui/core';\r\nimport MasterForm from '../MasterForm';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nexport type FormDialogProps = {\r\n    fields: Array<Field>,\r\n    show: boolean,\r\n    title: string,\r\n    onClose?: () => void,\r\n    onWillSubmit?: (form: Object) => boolean,\r\n    onSubmit?: (event: React.SyntheticEvent<HTMLFormElement>, form: Object) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    buttonContainer: {\r\n        padding: theme.spacing(2, 0),\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function FormDialog(props: FormDialogProps) {\r\n    const classes = styles();\r\n    const { title, onClose, onWillSubmit, onSubmit, fields, show } = props;\r\n\r\n    return (\r\n        <Dialog maxWidth=\"sm\" open={show} onEscapeKeyDown={() => onClose(false)} TransitionComponent={Transition}>\r\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n            <Divider />\r\n            <DialogContent>\r\n                <MasterForm fields={fields} onSubmit={onSubmit} onWillSubmit={onWillSubmit}>\r\n                    <Grid className={classes.buttonContainer} container justify=\"flex-end\">\r\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                            Submit\r\n                        </Button>\r\n                        <Button className={classes.button} onClick={() => onClose(false)} variant=\"contained\" color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </MasterForm>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nFormDialog.defaultProps = {\r\n    onClose: () => console.warn('Undefined onClose'),\r\n};\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\MasterTable.js",["569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589"],"import React, { useState, useEffect } from 'react';\r\nimport { STORAGE_KEYS } from '../config/Constant';\r\nimport { Typography, Paper, makeStyles, Grid, Icon, Button, useTheme } from '@material-ui/core';\r\nimport DataTable, { TableField } from './table';\r\nimport { QuestionDialog, LoadingDialog } from './message';\r\nimport { SearchInput } from './control';\r\nimport ActionMenu from './table/ActionMenu';\r\nimport DataAction from './table/DataAction';\r\nimport FormatManager from '../util/FormatManager';\r\nimport ImportMenu from './table/ImportMenu';\r\nimport { Field } from './MasterForm';\r\nimport ScrollBar from './control/ScrollBar';\r\nimport { text, error } from '../config/Theme';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    header: {\r\n        flex: 1,\r\n        // backgroundColor:theme.palette.primary.main,\r\n        borderBottom: '1px solid' + theme.palette.divider,\r\n        padding: theme.spacing(1),\r\n    },\r\n    headerTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        color: theme.palette.text.primary,\r\n    },\r\n    newButton: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    deleteButton: {\r\n        color: theme.palette.error.main,\r\n        '&:hover': {\r\n            color: theme.palette.error.dark,\r\n        },\r\n    },\r\n    editButton: {\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            color: theme.palette.secondary.dark,\r\n        },\r\n    },\r\n}));\r\n\r\nexport type PaginationObject = {\r\n    currentPage: number,\r\n    pageSize: number,\r\n    total: number,\r\n    data: Array<Object>,\r\n    sort: string,\r\n};\r\n\r\nexport type ActionProps = {\r\n    id: string,\r\n    label: string,\r\n    icon: string,\r\n};\r\n\r\nexport type MasterTableProps = {\r\n    fields: Array<TableField>,\r\n    inputFields: Array<Field>,\r\n    importFields: Array<string>,\r\n    moreActions: Array<ActionProps>,\r\n    title?: string,\r\n    onInputChange?: () => void,\r\n    value?: Object,\r\n    onSave?: () => void,\r\n    onAddNew?: () => void,\r\n    onEdit: (item: Object) => void,\r\n    onLoad: (currentPage: number, pageSize: number, sort: string, search: string) => Promise<Any>,\r\n    onRemove: (removeData: Object | Array) => Promise<Any>,\r\n    onError: (error: Object | string) => void,\r\n    onItemAction: (item: Object, data: Object) => void,\r\n    onImport?: (data: Object | Any) => Promise<Any>,\r\n    onRowClick?: () => void,\r\n    type: 'TABLE' | 'INPUT',\r\n    hideSearch?: Boolean,\r\n    hideDataActions?: Boolean,\r\n    hideActionMenu?: Boolean,\r\n    hideImportMenu?: Boolean,\r\n    hideCRUD?: Boolean,\r\n};\r\n\r\nexport const defaultActions = [\r\n    {\r\n        id: 'edit',\r\n        label: 'Edit',\r\n        icon: 'edit',\r\n        color: text.primary,\r\n    },\r\n    {\r\n        id: 'remove',\r\n        label: 'Remove',\r\n        icon: 'delete',\r\n        color: error.main,\r\n    },\r\n];\r\n\r\nconst MasterTable = (props: MasterTableProps) => {\r\n    const classes = styles();\r\n    const theme = useTheme();\r\n\r\n    const {\r\n        title,\r\n        fields,\r\n        inputFields,\r\n        importFields,\r\n        type,\r\n        onInputChange,\r\n        value,\r\n        onSave,\r\n        onError,\r\n        onAddNew,\r\n        onEdit,\r\n        moreActions,\r\n        onLoad,\r\n        onRemove,\r\n        onItemAction,\r\n        onRowClick,\r\n        onImport,\r\n        hideSearch,\r\n        hideDataActions,\r\n        hideActionMenu,\r\n        hideImportMenu,\r\n        hideCRUD,\r\n    } = props;\r\n\r\n    const [init, setInit] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n    const [question, setQuestion] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [removeData, setRemoveData] = useState(null);\r\n\r\n    if (!hideDataActions && importFields.findIndex(f => f === 'version') < 0) {\r\n        importFields.push('version');\r\n    }\r\n\r\n    const loadData = async (currentPage, pageSize, sort) => {\r\n        setLoading(true);\r\n        try {\r\n            const result = await onLoad(currentPage, pageSize, sort, search);\r\n            setPaging(result);\r\n        } catch (error) {\r\n            onError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const exportFile = (data, file) => {\r\n        const link = document.createElement('a');\r\n        link.setAttribute('href', data);\r\n        link.setAttribute('target', '_blank');\r\n        link.setAttribute('download', file);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    const exportCSV = async () => {\r\n        setLoading(true);\r\n        let csv = importFields.map(field => FormatManager.buildCSV(field)).join(',') + '\\n';\r\n        console.log('csv', selectedData);\r\n        selectedData.forEach(data => {\r\n            csv +=\r\n                importFields\r\n                    .map(field => {\r\n                        let value = data[field] || '';\r\n                        if (typeof data[field] === 'boolean') value = data[field];\r\n\r\n                        if (typeof value === 'string' || typeof value === 'boolean') {\r\n                            return FormatManager.buildCSV(value);\r\n                        } else if (typeof value === 'object') {\r\n                            if (value.id) {\r\n                                return FormatManager.buildCSV(JSON.stringify({ id: value.id }));\r\n                            }\r\n                        }\r\n\r\n                        return FormatManager.buildCSV(JSON.stringify(value));\r\n                    })\r\n                    .join(',') + '\\n';\r\n        });\r\n\r\n        const fileName = FormatManager.readableToSnake(title) + '_' + FormatManager.formatDate(new Date(), 'YYYYMMDD_hhmmss') + '.csv';\r\n\r\n        const blob = new Blob([decodeURIComponent(encodeURI(csv))], {\r\n            type: 'text/csv;charset=UTF-8;header=present',\r\n        });\r\n        const downloadData = URL.createObjectURL(blob);\r\n        exportFile(downloadData, fileName);\r\n        setLoading(false);\r\n    };\r\n\r\n    const exportJson = async () => {\r\n        setLoading(true);\r\n        const json = JSON.stringify(selectedData);\r\n        const fileName = FormatManager.readableToSnake(title) + '_' + FormatManager.formatDate(new Date(), 'YYYYMMDD_hhmmss') + '.json';\r\n\r\n        const blob = new Blob([decodeURIComponent(encodeURI(json))], {\r\n            type: 'data:application/json;charset=UTF-8',\r\n        });\r\n        const downloadData = URL.createObjectURL(blob);\r\n\r\n        exportFile(downloadData, fileName);\r\n        setLoading(false);\r\n    };\r\n\r\n    const [paging, setPaging] = useState(() => {\r\n        return {\r\n            currentPage: 0,\r\n            pageSize: 10,\r\n            total: 0,\r\n            data: [],\r\n            sort: 'id:ASC',\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function initData() {\r\n            const tableData = await localStorage.getItem(`${STORAGE_KEYS.TABLE_SESSION}.${FormatManager.readableToSnake(title)}`);\r\n            const tableJson = JSON.parse(tableData);\r\n            console.log('paging', tableJson);\r\n            setInit(false);\r\n            if (tableJson && tableJson.paging.data && tableJson.paging.data.length > 0) {\r\n                loadData(tableJson.paging.currentPage, tableJson.paging.pageSize, tableJson.paging.sort);\r\n                setSelectedData(tableJson.selectedData);\r\n                setSearch(tableJson.search);\r\n            } else {\r\n                loadData(0, paging.pageSize, paging.sort);\r\n            }\r\n        }\r\n\r\n        initData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleTableSession();\r\n        if (!init) {\r\n            loadData(paging.currentPage, paging.pageSize, paging.sort);\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [search]);\r\n\r\n    useEffect(() => {\r\n        handleTableSession();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedData, paging]);\r\n\r\n    const handleTableSession = () => {\r\n        localStorage.setItem(\r\n            `${STORAGE_KEYS.TABLE_SESSION}.${title}`,\r\n            JSON.stringify({\r\n                paging: paging,\r\n                selectedData: selectedData,\r\n                search: search,\r\n            }),\r\n        );\r\n    };\r\n\r\n    const handlePageChange = pagination => {\r\n        loadData(pagination.page, pagination.pageSize, pagination.sort);\r\n    };\r\n\r\n    const handleImport = data => {\r\n        console.log('import', data);\r\n        setLoading(true);\r\n        if (onImport) {\r\n            onImport(data)\r\n                .then(() => {\r\n                    loadData(0, paging.pageSize, paging.sort);\r\n                })\r\n                .catch(onError)\r\n                .finally(() => setLoading(false));\r\n        }\r\n    };\r\n\r\n    const handleSelectionChange = result => {\r\n        setSelectedData(result);\r\n    };\r\n\r\n    const handleActionMenu = menuItem => {\r\n        switch (menuItem.id) {\r\n            case 'uncheck_all':\r\n                setSelectedData([]);\r\n                break;\r\n            case 'export_csv':\r\n                exportCSV();\r\n                break;\r\n            case 'export_json':\r\n                exportJson();\r\n                break;\r\n            case 'remove':\r\n                if (selectedData.length > 0) {\r\n                    const ids = selectedData.map(item => item.id);\r\n                    setQuestion('Are you sure to remove [' + ids.join(', ') + '] items?');\r\n                    setRemoveData(selectedData);\r\n                }\r\n                break;\r\n            default:\r\n                console.log('invalid action');\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleDataAction = (item, data) => {\r\n        if (item.id === 'edit') {\r\n            onEdit(data);\r\n        } else if (item.id === 'remove') {\r\n            setQuestion('Are you sure to remove item : ' + data.id + ' ?');\r\n            setRemoveData(data);\r\n        } else if (onItemAction) {\r\n            onItemAction(item, data);\r\n        }\r\n    };\r\n\r\n    //Remove Data if confirmation is Yes\r\n    const handleQuestionDialog = status => {\r\n        if (status && removeData) {\r\n            setLoading(true);\r\n            onRemove(removeData)\r\n                .then(data => {\r\n                    setSelectedData([]);\r\n                    loadData(0, paging.pageSize, paging.sort);\r\n                })\r\n                .catch(error => onError(error))\r\n                .finally(() => setLoading(false));\r\n        }\r\n        setQuestion('');\r\n        setRemoveData(null);\r\n    };\r\n\r\n    const actions = [...moreActions, ...(hideCRUD ? [] : defaultActions)];\r\n\r\n    const actionFields = {\r\n        name: 'data_actions',\r\n        align: 'center',\r\n        label: '@',\r\n        minWidth: 50,\r\n        type: 'raw',\r\n        onLoad: item => <DataAction onMenuItemClick={handleDataAction} actions={actions} data={item} />,\r\n    };\r\n    let fields_with_action = [];\r\n    if (actions.length > 0) {\r\n        fields_with_action = [actionFields];\r\n    }\r\n    fields_with_action = [...fields_with_action, ...fields];\r\n\r\n    return (\r\n        <>\r\n            <LoadingDialog show={loading} />\r\n            <QuestionDialog show={question.length > 0} title=\"Confirm?\" message={question} onClose={handleQuestionDialog} />\r\n            <Paper className={classes.root} elevation={6}>\r\n                <Grid container className={classes.header}>\r\n                    <Grid container item lg={4} md={4} sm={6} xs={12} justify=\"flex-start\" alignContent=\"center\" alignItems=\"center\">\r\n                        <Typography className={classes.headerTitle} variant=\"h6\" component=\"h1\" noWrap>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item lg={4} md={4} sm={6} xs={12} alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                        {hideSearch || <SearchInput value={search} onSearch={value => setSearch(value)} placeholder=\"Search Files\" />}\r\n                    </Grid>\r\n                    <Grid container item lg={4} md={4} sm={12} xs={12} alignContent=\"center\" justify=\"flex-end\">\r\n                        {hideDataActions || (\r\n                            <>\r\n                                {hideActionMenu || (\r\n                                    <ActionMenu\r\n                                        onMenuItemClick={handleActionMenu}\r\n                                        disabled={!selectedData || selectedData.length < 1}\r\n                                        label={selectedData && selectedData.length > 0 ? selectedData.length + ' Items.' : null}\r\n                                    />\r\n                                )}\r\n                                {hideImportMenu || <ImportMenu fields={importFields} onImportItems={handleImport} className={classes.newButton} />}\r\n                            </>\r\n                        )}\r\n                        {hideCRUD || (\r\n                            <Button onClick={onAddNew} variant=\"contained\" color=\"primary\" aria-label=\"Add New\" className={classes.newButton}>\r\n                                <Icon>add</Icon>\r\n                                New\r\n                            </Button>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item lg={12}>\r\n                    <DataTable\r\n                        multi={true}\r\n                        type={type}\r\n                        items={paging.data}\r\n                        fields={fields_with_action}\r\n                        inputFields={inputFields}\r\n                        onInputChange={onInputChange}\r\n                        value={value}\r\n                        onSave={onSave}\r\n                        onEdit={onEdit}\r\n                        total={paging.total}\r\n                        pageSize={paging.pageSize}\r\n                        currentPage={paging.currentPage}\r\n                        sort={paging.sort}\r\n                        selectedData={selectedData}\r\n                        onPageChange={handlePageChange}\r\n                        onSelectionChange={handleSelectionChange}\r\n                        onRowClick={onRowClick}\r\n                    />\r\n                </Grid>\r\n            </Paper>\r\n        </>\r\n    );\r\n};\r\n\r\nMasterTable.defaultProps = {\r\n    fields: [],\r\n    title: 'Master Data',\r\n    moreActions: [],\r\n    hideSearch: false,\r\n    hideCRUD: false,\r\n    hideDataActions: false,\r\n    hideActionMenu: false,\r\n    hideImportMenu: false,\r\n    type: 'TABLE',\r\n    onAddNew: () => console.warn('Undefined onAddNew'),\r\n    onEdit: item => console.warn('Undefined onEdit => ', item),\r\n    onError: error => console.warn('Undefined onError => ', error),\r\n    onItemAction: item => console.warn('Undefined Item Action => ', item),\r\n};\r\n\r\nexport default MasterTable;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\AuthApi.js",["590"],"import ApiManager from '../util/ApiManager';\r\n\r\ntype Auth = {\r\n    deviceId: string,\r\n    deviceOs: string,\r\n    firebaseMessagingToken?: string,\r\n};\r\n\r\ntype UserAuth = {\r\n    ...Auth,\r\n    password: string,\r\n    user: string,\r\n};\r\n\r\ntype UserRegistration = {\r\n    ...Auth,\r\n    displayName: string,\r\n    email: string,\r\n    phoneNumber: string,\r\n    password: string,\r\n};\r\n\r\ntype ForgetPassword = {\r\n    phoneNumber: string,\r\n    email: string,\r\n    callback: string,\r\n};\r\n\r\ntype ResetPassword = {\r\n    oldPassword: string,\r\n    newPassword: string,\r\n    user: string,\r\n};\r\n\r\nclass AuthApi extends ApiManager {\r\n    constructor() {\r\n        super('auth');\r\n    }\r\n\r\n    async setAuth(data): Auth {\r\n        return {\r\n            deviceId: this.getDeviceId(),\r\n            deviceOS: this.getDeviceOS(),\r\n            firebaseMessagingToken: null,\r\n            ...data,\r\n        };\r\n    }\r\n\r\n    async register(request: UserRegistration) {\r\n        const data = await this.setAuth(request);\r\n        const response = await this.post('/register', data, this.getHeaders(false));\r\n        return response;\r\n    }\r\n\r\n    async authByUserAndPassword(request: UserAuth) {\r\n        const data = await this.setAuth(request);\r\n        const response = await this.post('', data, this.getHeaders(false));\r\n        return response;\r\n    }\r\n\r\n    async forgetPassword(request: ForgetPassword) {\r\n        const response = await this.post('/forgetPassword', request, this.getHeaders(false));\r\n        return response;\r\n    }\r\n\r\n    async authByFacebook(accessToken: string) {}\r\n\r\n    async resetPassword(request: ResetPassword) {\r\n        const response = await this.post('/resetPassword', request, this.getHeaders(false));\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default new AuthApi();\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\DraftEditorInput.js",["591","592"],"import React, { useState } from 'react';\r\nimport { EditorState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { ContentState, convertFromHTML } from 'draft-js';\r\nimport { convertToHTML } from 'draft-convert';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    DraftInput: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    AppHeader: {\r\n        backgroundColor: theme.palette.background.default,\r\n        minHeight: '5vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize: 'calc(10px + 2vmin)',\r\n        color: theme.palette.background.paper,\r\n        marginBottom: '5vh',\r\n        textAlign: 'center',\r\n    },\r\n    wrapperClass: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: 4,\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    },\r\n    editorClass: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: '10px',\r\n        minHeight: 400,\r\n    },\r\n    toolbarClass: {\r\n        border: '0px solid #ccc',\r\n        borderBottom: '1px solid #ccc',\r\n    },\r\n}));\r\n\r\nexport type DraftEditorInputProps = {\r\n    value?: Object,\r\n    onChange?: Object,\r\n};\r\n\r\nconst DraftEditorInput = (props: DraftEditorInputProps) => {\r\n    const { id, name, value, onChange, ...rest } = props;\r\n\r\n    const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\r\n    // const [convertedContent, setConvertedContent] = useState(null);\r\n    const classes = styles();\r\n\r\n    /*AVAILABLE PROPERTIES\r\n    ['inline', 'blockType', 'fontSize', 'fontFamily', 'list', 'textAlign', 'colorPicker', 'link', 'embedded', 'emoji', 'image', 'remove', 'history']\r\n    REF: https://jpuri.github.io/react-draft-wysiwyg/#/docs\r\n    */\r\n\r\n    const options = ['inline', 'blockType', 'fontSize', 'list', 'textAlign', 'colorPicker', 'link', 'emoji', 'remove', 'history'];\r\n\r\n    React.useEffect(() => {\r\n        if (value) {\r\n            const blocksFromHTML = convertFromHTML(value);\r\n            let result = ContentState.createFromBlockArray(blocksFromHTML.contentBlocks, blocksFromHTML.entityMap);\r\n\r\n            setEditorState(EditorState.createWithContent(result));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleEditorChange = state => {\r\n        setEditorState(state);\r\n        convertContentToHTML();\r\n    };\r\n\r\n    const convertContentToHTML = () => {\r\n        let currentContentAsHTML = convertToHTML(editorState.getCurrentContent());\r\n        // setConvertedContent(currentContentAsHTML);\r\n\r\n        if (onChange)\r\n            onChange({\r\n                target: {\r\n                    name: id || name,\r\n                    value: currentContentAsHTML,\r\n                },\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.DraftInput}>\r\n            <Editor\r\n                id={id || name}\r\n                {...rest}\r\n                name={id || name}\r\n                toolbar={{ options: options }}\r\n                defaultEditorState={editorState}\r\n                onEditorStateChange={handleEditorChange}\r\n                editorState={editorState}\r\n                wrapperClassName={classes.wrapperClass}\r\n                editorClassName={classes.editorClass}\r\n                toolbarClassName={classes.toolbarClass}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DraftEditorInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\LoadingDialog.js",["593"],"import React from 'react';\r\nimport { Dialog, DialogContent, DialogContentText, CircularProgress, makeStyles, Zoom } from '@material-ui/core';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nconst loadingStyle = makeStyles(theme => ({\r\n    progress: {\r\n        display: 'block',\r\n        textAlign: 'center',\r\n        margin: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport type LoadingDialogProps = {\r\n    show: boolean,\r\n    message?: string,\r\n};\r\n\r\nexport default function LoadingDialog(props: LoadingDialogProps) {\r\n    const classes = loadingStyle();\r\n    const { message, show } = props;\r\n    return (\r\n        <div>\r\n            <Dialog maxWidth=\"sm\" open={show} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <div className={classes.progress}>\r\n                        <CircularProgress />\r\n                    </div>\r\n                    <DialogContentText id=\"loading-dialog-description\">{message}</DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nLoadingDialog.defaultProps = {\r\n    message: 'Please wait ...',\r\n};\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\QuestionDialog.js",["594"],"import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Zoom, Icon } from '@material-ui/core';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nexport type QuestionDialogProps = {\r\n    show: boolean,\r\n    title: string,\r\n    message: string,\r\n    onClose: (result: boolean) => void,\r\n};\r\n\r\nexport default function QuestionDialog(props: QuestionDialogProps) {\r\n    let { show, title, message, onClose } = props;\r\n    if (!FormatManager.defaultNull(show)) {\r\n        show = false;\r\n    }\r\n\r\n    return (\r\n        <Dialog onEscapeKeyDown={() => onClose(false)} open={show} maxWidth=\"sm\" TransitionComponent={Transition}>\r\n            <DialogTitle id=\"question-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">{message}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose(true)} variant=\"contained\" color=\"primary\">\r\n                    <Icon>done</Icon> Ok\r\n                </Button>\r\n                <Button onClick={() => onClose(false)} variant=\"contained\" color=\"default\">\r\n                    <Icon>close</Icon> Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nQuestionDialog.defaultProps = {\r\n    onClose: result => console.warn('Undefined onClose => ', result),\r\n};\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\AlertDialog.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\message\\Notification.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\Translate.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\DataAction.js",["595","596","597","598"],"import React from 'react';\r\nimport { Tooltip, IconButtonProps, IconButton, Icon, Menu, MenuItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    menuButton: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    menuIcon: {\r\n        color: theme.palette.text.primary,\r\n        display: 'inline-flex',\r\n        flexShrink: 0,\r\n        minWidth: theme.spacing(4),\r\n    },\r\n    menuText: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nexport type ActionProps = {\r\n    id: string,\r\n    label: Object,\r\n    icon: Object,\r\n    color: Object,\r\n    onClick: () => void,\r\n};\r\n\r\nexport type DataActionProps = {\r\n    ...IconButtonProps,\r\n    data: Object,\r\n    actions: Array<ActionProps>,\r\n    rowIndex: Int,\r\n    onMenuItemClick: (item: Object) => void,\r\n};\r\n\r\nconst DataAction = (props: DataActionProps) => {\r\n    const { id, actions, data, rowIndex, onMenuItemClick, ...iconButtonProps } = props;\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const classes = styles();\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClick = (item, index) => {\r\n        setAnchorEl(null);\r\n        onMenuItemClick(item, data);\r\n    };\r\n    console.log('fields', data);\r\n    return (\r\n        <>\r\n            <Tooltip title=\"More Actions\" placement=\"top\">\r\n                <IconButton\r\n                    size=\"small\"\r\n                    onClick={event => setAnchorEl(event.currentTarget)}\r\n                    className={classes.menuButton}\r\n                    aria-label={id}\r\n                    {...iconButtonProps}\r\n                >\r\n                    <Icon>more_vert</Icon>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu id=\"actions-menu\" marginThreshold={50} anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n                {actions.map((item, index) => {\r\n                    let colorProps = {};\r\n                    if (item.color) {\r\n                        let customColor = FormatManager.isFunction(item.color) ? item.color(data) : item.color;\r\n                        colorProps = { style: { color: customColor } };\r\n                    }\r\n                    return (\r\n                        <MenuItem dense key={item.id + '-' + index} onClick={() => handleClick(item, index)}>\r\n                            <ListItemIcon className={classes.menuIcon}>\r\n                                <Icon {...colorProps}>{FormatManager.isFunction(item.icon) ? item.icon(data) : item.icon}</Icon>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                inset={false}\r\n                                primary={FormatManager.isFunction(item.label) ? item.label(data) : item.label}\r\n                                className={classes.menuText}\r\n                                {...colorProps}\r\n                            />\r\n                        </MenuItem>\r\n                    );\r\n                })}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataAction;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\index.js",["599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617"],"import React, { useState, useEffect, Component } from 'react';\r\nimport {\r\n    Table,\r\n    TableBaseProps,\r\n    TableHead,\r\n    TableRow,\r\n    TableBody,\r\n    TableFooter,\r\n    makeStyles,\r\n    TableCell,\r\n    TableContainer,\r\n    Checkbox,\r\n    IconButton,\r\n    Icon,\r\n} from '@material-ui/core';\r\nimport {\r\n    TextInput,\r\n    EmailInput,\r\n    PasswordInput,\r\n    NumberInput,\r\n    ImageInput,\r\n    CheckboxInput,\r\n    ListInput,\r\n    ObjectInput,\r\n    IconInput,\r\n    ChipInput,\r\n    ColorInput,\r\n    TabControl,\r\n} from '../control';\r\nimport Cell from './Cell';\r\nimport PaginationBar from '../PaginationBar';\r\nimport { HeaderCell } from './HeaderCell';\r\n\r\nexport type TableField = {\r\n    name: string,\r\n    type: 'text' | 'image' | 'icon' | 'bool' | 'raw',\r\n    align: 'left' | 'center' | 'right',\r\n    label: string,\r\n    minWidth: number,\r\n    sortable: ?boolean,\r\n    hidden: ?boolean,\r\n    onLoad?: (item: Object) => Component | string,\r\n};\r\n\r\nexport type DataTableProps = {\r\n    ...TableBaseProps,\r\n    fields: Array<Object>,\r\n    inputFields: Array<Object>,\r\n    items: Array<Object>,\r\n    selectedData?: Array<Object> | Object,\r\n    total?: number,\r\n    pageSize?: number,\r\n    currentPage?: number,\r\n    sort?: string,\r\n    multi?: boolean,\r\n    noData?: string,\r\n    onEdit?: (item: Object) => void,\r\n    disablePaging?: boolean,\r\n    type: 'TABLE' | 'INPUT',\r\n    onPageChange?: (page: number) => void,\r\n    onRowClick?: (item: Object) => void,\r\n    onSelectionChange?: (result: Object | Array<Object>) => void,\r\n    onError?: (error: Object | string) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        flex: 1,\r\n    },\r\n    tableHead: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.primary.contrastText,\r\n        borderBottom: theme.palette.divider,\r\n    },\r\n    tableBody: {\r\n        background: theme.palette.background.default,\r\n        borderBottom: theme.palette.primary.dark,\r\n    },\r\n    inputTableRow: {\r\n        backgroundColor: 'inherit',\r\n        // height: 100,\r\n        margin: 0,\r\n    },\r\n    tableFooter: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    footerRow: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nconst SelectionCheckbox = makeStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.primary.contrastText,\r\n        '&$checked': {\r\n            color: theme.palette.primary.light,\r\n        },\r\n        '&$indeterminate': {\r\n            color: theme.palette.primary.light,\r\n        },\r\n    },\r\n    checked: {},\r\n    indeterminate: {},\r\n}));\r\n\r\nconst DataTable = (props: DataTableProps) => {\r\n    const classes = styles();\r\n    const {\r\n        multi,\r\n        selectedData,\r\n        fields,\r\n        inputFields,\r\n        value,\r\n        items,\r\n        total,\r\n        pageSize,\r\n        currentPage,\r\n        sort,\r\n        noData,\r\n        disablePaging,\r\n        type,\r\n        onEdit,\r\n        onSave,\r\n        onInputChange,\r\n        onPageChange,\r\n        onRowClick,\r\n        onSelectionChange,\r\n        ...tableProps\r\n    } = props;\r\n    const [rootState, setRootState] = useState('unchecked');\r\n\r\n    useEffect(() => {\r\n        if (!multi) {\r\n            return;\r\n        }\r\n\r\n        if (!selectedData || selectedData.length <= 0 || !items || items.length <= 0) {\r\n            setRootState('unchecked');\r\n            return;\r\n        }\r\n\r\n        let found = 0;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            if (!item) {\r\n                continue;\r\n            }\r\n            const existIdx = selectedData.findIndex(x => x.id === item.id);\r\n            if (existIdx >= 0) {\r\n                found++;\r\n            }\r\n        }\r\n\r\n        if (found > 0) {\r\n            setRootState(found === items.length ? 'checked' : 'indeterminate');\r\n        } else {\r\n            setRootState('unchecked');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [items, selectedData]);\r\n\r\n    const handleRootClick = event => {\r\n        if (!multi) {\r\n            return;\r\n        }\r\n        let updateSelection = selectedData.filter(x => items.findIndex(item => item.id === x.id) < 0);\r\n        if (event.target.checked) {\r\n            updateSelection = [...updateSelection, ...items];\r\n        }\r\n        onSelectionChange(updateSelection);\r\n    };\r\n\r\n    const handleCheck = item => {\r\n        if (!multi) {\r\n            onSelectionChange(item);\r\n            return;\r\n        }\r\n\r\n        const existIdx = selectedData.findIndex(x => x.id === item.id);\r\n        const updateSelection = existIdx < 0 ? [...selectedData, item] : selectedData.filter(x => x.id !== item.id);\r\n\r\n        onSelectionChange(updateSelection);\r\n    };\r\n\r\n    const handlePageChange = page => {\r\n        onPageChange({\r\n            page: page,\r\n            pageSize: pageSize,\r\n            sort: sort,\r\n        });\r\n    };\r\n\r\n    const handlePageSizeChange = pageSize => {\r\n        onPageChange({\r\n            page: 0,\r\n            pageSize: pageSize,\r\n            sort: sort,\r\n        });\r\n    };\r\n\r\n    const handleSortChange = sortString => {\r\n        onPageChange({\r\n            page: currentPage,\r\n            pageSize: pageSize,\r\n            sort: sortString,\r\n        });\r\n    };\r\n\r\n    const handleValueChange = (field, event) => {\r\n        if (onInputChange) {\r\n            onInputChange(event);\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (onSave) {\r\n            onSave(value);\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = evt => {\r\n        if (['Enter', 'Tab', ','].includes(evt.key)) {\r\n            evt.preventDefault();\r\n            if (onSave) {\r\n                onSave();\r\n            }\r\n        }\r\n    };\r\n\r\n    const renderControl = (type, inputProps) => {\r\n        inputProps = { ...inputProps, height: 30, variant: 'standard', display: 'simple', style: { margin: 0 } };\r\n        switch (type) {\r\n            case 'email':\r\n                return <EmailInput {...inputProps} />;\r\n            case 'password':\r\n                return <PasswordInput {...inputProps} />;\r\n            case 'number':\r\n                return <NumberInput {...inputProps} />;\r\n            case 'datetime':\r\n                return <TextInput type=\"datetime-local\" {...inputProps} />;\r\n            case 'date':\r\n                return <TextInput type=\"date\" {...inputProps} />;\r\n            case 'time':\r\n                return <TextInput type=\"time\" {...inputProps} />;\r\n            case 'checkbox':\r\n                return <CheckboxInput {...inputProps} />;\r\n            case 'image':\r\n                return <ImageInput size={{ width: 30, height: 30 }} {...inputProps} />;\r\n            // case 'multi-image': {\r\n            //     return <MultiImagePicker {...inputProps} />;\r\n            // }\r\n            case 'icon':\r\n                return <IconInput {...inputProps} />;\r\n            case 'file':\r\n                return <ImageInput size={{ width: 30, height: 30 }} {...inputProps} />;\r\n            case 'list':\r\n                return <ListInput {...inputProps} />;\r\n            case 'table':\r\n                return <ObjectInput {...inputProps} />;\r\n            case 'chip':\r\n                return <ChipInput {...inputProps} />;\r\n            case 'color':\r\n                return <ColorInput {...inputProps} />;\r\n            default:\r\n                return <TextInput type={type} {...inputProps} />;\r\n        }\r\n    };\r\n\r\n    const renderTableInput = () => {\r\n        if (type == 'INPUT') {\r\n            return (\r\n                <TableRow className={classes.inputTableRow}>\r\n                    {multi ? <TableCell></TableCell> : null}\r\n                    {inputFields.map((field, index) => {\r\n                        const { type, ...inputProps } = field;\r\n                        if (!type || field.id == 'id' || field.name == 'id') {\r\n                            return <TableCell key={`ip-cell-${index}`}></TableCell>;\r\n                        }\r\n                        inputProps.key = field.id + '_' + index;\r\n                        inputProps.name = field.name || field.id;\r\n                        inputProps.onChange = event => handleValueChange(field, event);\r\n                        if (index == inputFields.length - 1) {\r\n                            inputProps.onKeyDown = handleKeyDown;\r\n                        }\r\n                        return (\r\n                            <TableCell style={{ backgroundColor: 'inherit' }} key={`ip-cell-${inputProps.key}`}>\r\n                                {renderControl(type, inputProps)}\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n                    <TableCell>\r\n                        <IconButton onClick={handleSave} style={{ marginTop: 6 }}>\r\n                            <Icon color=\"primary\">input</Icon>\r\n                        </IconButton>\r\n                    </TableCell>\r\n                </TableRow>\r\n            );\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    return (\r\n        <TableContainer>\r\n            <Table size={multi ? 'small' : 'medium'} className={classes.root} {...tableProps}>\r\n                <TableHead className={classes.tableHead}>\r\n                    <TableRow>\r\n                        {multi ? (\r\n                            <TableCell align=\"center\" style={{ width: 64 }}>\r\n                                <Checkbox\r\n                                    classes={SelectionCheckbox()}\r\n                                    indeterminate={rootState === 'indeterminate'}\r\n                                    checked={rootState === 'checked'}\r\n                                    value=\"root\"\r\n                                    color=\"primary\"\r\n                                    onChange={handleRootClick}\r\n                                />\r\n                            </TableCell>\r\n                        ) : null}\r\n                        {fields.map((field, index) => (\r\n                            <HeaderCell key={field.name + '-' + index} sort={sort} onSortChange={handleSortChange} field={field} />\r\n                        ))}\r\n                        {type == 'INPUT' ? <TableCell></TableCell> : null}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {renderTableInput()}\r\n                    {items && items.length > 0 ? (\r\n                        items.map((row, dataIdx) => {\r\n                            let pointerStyle = {\r\n                                cursor: 'pointer',\r\n                            };\r\n\r\n                            const marked = multi\r\n                                ? selectedData.findIndex(x => x.id === row.id) >= 0\r\n                                : selectedData && selectedData.id && row.id === selectedData.id;\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    selected={marked}\r\n                                    style={onRowClick ? pointerStyle : null}\r\n                                    key={row.id + '-' + dataIdx}\r\n                                    index={dataIdx}\r\n                                    onClick={() => {\r\n                                        if (onRowClick) onRowClick(row);\r\n                                    }}\r\n                                    onDoubleClick={e => {\r\n                                        if (onEdit) onEdit(row);\r\n                                    }}\r\n                                    hover={true}\r\n                                >\r\n                                    {multi ? (\r\n                                        <TableCell align=\"center\" style={{ maxWidth: 64 }}>\r\n                                            <Checkbox checked={marked} onChange={() => handleCheck(row)} value={row.id || dataIdx} color=\"primary\" />\r\n                                        </TableCell>\r\n                                    ) : null}\r\n                                    {fields.map((field, index) => (\r\n                                        <Cell key={field.name + '-' + index} rowIndex={dataIdx} field={field} data={row} />\r\n                                    ))}\r\n                                    {type == 'INPUT' ? <TableCell></TableCell> : null}\r\n                                </TableRow>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <TableRow>\r\n                            <TableCell size=\"medium\" colSpan={multi ? fields.length + 1 : fields.length}>\r\n                                {noData}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n                {disablePaging ? null : (\r\n                    <TableFooter className={classes.tableFooter}>\r\n                        <TableRow>\r\n                            <PaginationBar\r\n                                className={classes.footerRow}\r\n                                colSpan={multi ? fields.length + 1 : fields.length}\r\n                                total={total}\r\n                                pageSize={pageSize}\r\n                                currentPage={currentPage}\r\n                                onPageSizeChange={handlePageSizeChange}\r\n                                onPageChange={handlePageChange}\r\n                            />\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                )}\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nDataTable.defaultProps = {\r\n    multi: false,\r\n    selectedData: {},\r\n    items: [],\r\n    total: 0,\r\n    pageSize: 10,\r\n    currentPage: 0,\r\n    sort: 'id:Desc',\r\n    noData: 'There is no data.',\r\n    disablePaging: false,\r\n    onPageChange: newPaged => console.warn('Undefined onPageChange => ', newPaged),\r\n    onSelectionChange: result => console.warn('Undefined onSelectionChange => ', result),\r\n};\r\n\r\nexport default DataTable;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\HeaderCell.js",["618"],"import React from 'react';\r\nimport { TableCell, TableSortLabel, makeStyles } from '@material-ui/core';\r\n\r\nexport type HeaderCellProps = {\r\n    ...TableSortLabelProps,\r\n    field: TableField,\r\n    sort: string,\r\n    onSortChange?: (field: TableField, sort: 'ASC' | 'DESC') => string,\r\n};\r\n\r\nconst headerStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.primary.contrastText,\r\n        '&$active': {\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n    },\r\n    active: { color: theme.palette.primary.contrastText },\r\n    icon: {\r\n        fontSize: 15,\r\n        color: theme.palette.primary.contrastText + '!important',\r\n    },\r\n}));\r\n\r\nexport const HeaderCell = (props: HeaderCellProps) => {\r\n    const { field, sort, onSortChange, ...sortLabelProps } = props;\r\n    const classes = headerStyles();\r\n\r\n    if (!field.sortable || !sort) {\r\n        return (\r\n            <TableCell className={classes.root} align={field.align} style={field.minWidth ? { minWidth: field.minWidth } : null}>\r\n                {field.label}\r\n            </TableCell>\r\n        );\r\n    }\r\n\r\n    const sortParams = sort.replace(/\\s/g, '').split(':', 2);\r\n\r\n    const column = sortParams[0];\r\n    let direction = 'asc';\r\n    if (sortParams.length >= 2) {\r\n        direction = sortParams[1].toLowerCase();\r\n    }\r\n\r\n    const handleSortChange = () => {\r\n        let newDirection = 'asc';\r\n        if (field.name === column) {\r\n            newDirection = direction === 'asc' ? 'desc' : 'asc';\r\n        }\r\n        if (onSortChange) {\r\n            onSortChange(field.name + ':' + newDirection.toUpperCase());\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TableCell className={classes.root} align={field.align} style={field.minWidth ? { minWidth: field.minWidth } : null}>\r\n            <TableSortLabel classes={classes} active={field.name === column} direction={direction} onClick={handleSortChange} {...sortLabelProps}>\r\n                {field.label}\r\n            </TableSortLabel>\r\n        </TableCell>\r\n    );\r\n};\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\Cell.js",["619","620","621","622","623","624","625"],"import React from 'react';\r\nimport { TableCell, TableCellBaseProps, Icon } from '@material-ui/core';\r\nimport { TableField } from '.';\r\nimport FileApi from '../../api/FileApi';\r\nimport LangManager from '../../util/LangManager';\r\n\r\nexport type CellProps = {\r\n    ...TableCellBaseProps,\r\n    type: 'text' | 'image' | 'icon' | 'bool' | 'raw',\r\n    field: TableField,\r\n    rowIndex: int,\r\n    data: Object,\r\n};\r\n\r\nexport const ImageCell = (field, data) => {\r\n    const { name, align, label, type, sortable, hidden, filterable, minWidth, onLoad, ...imageProps } = field;\r\n\r\n    let image = data[name];\r\n    let alt = field.name + '-image';\r\n    if (onLoad) {\r\n        image = onLoad(data);\r\n    } else if (image && typeof image === 'object' && image.id) {\r\n        image = FileApi.downloadLink(data[field.name], 'thumb');\r\n    } else if (image) {\r\n        image = image.url;\r\n    }\r\n    return <img alt={alt} width={30} style={{ marginTop: 3 }} src={image || `../../${'images/default-image.png'}`} {...imageProps} />;\r\n};\r\n\r\nexport const IconCell = (field, data) => {\r\n    const { name, onLoad } = field;\r\n\r\n    let icon = data[name];\r\n    if (onLoad) {\r\n        icon = onLoad(data);\r\n    }\r\n\r\n    return <Icon color=\"primary\">{icon}</Icon>;\r\n};\r\n\r\nexport const BooleanCell = (field, data) => {\r\n    const { name, onLoad } = field;\r\n\r\n    let checked = data[name];\r\n    if (onLoad) {\r\n        checked = onLoad(data);\r\n    }\r\n\r\n    return <Icon color={checked ? 'textPrimary' : 'error'}>{checked ? 'check' : 'close'}</Icon>;\r\n};\r\n\r\nconst Cell = (props: CellProps) => {\r\n    const { field, data, rowIndex, ...cellProps } = props;\r\n    let cellValue = 'None';\r\n\r\n    if (field.hidden) {\r\n        return null;\r\n    }\r\n\r\n    switch (field.type) {\r\n        case 'image':\r\n            cellValue = ImageCell(field, data);\r\n            break;\r\n        case 'icon':\r\n            cellValue = IconCell(field, data);\r\n            break;\r\n        case 'bool':\r\n            cellValue = BooleanCell(field, data);\r\n            break;\r\n        case 'raw':\r\n            cellValue = field.onLoad(data, rowIndex);\r\n            break;\r\n        default:\r\n            cellValue = field.onLoad\r\n                ? LangManager.translateToUni(field.onLoad(data, rowIndex))\r\n                : LangManager.translateToUni(data[field.name], rowIndex);\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <TableCell color=\"secondary\" align={field.align} style={field.minWidth ? { minWidth: field.minWidth } : null} {...cellProps}>\r\n            {cellValue || cellValue === 0 ? cellValue : '-'}\r\n        </TableCell>\r\n    );\r\n};\r\n\r\nCell.defaultProps = {\r\n    type: 'text',\r\n};\r\n\r\nexport default Cell;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\table\\ActionMenu.js",["626","627","628","629"],"/* @flow */\r\nimport React from 'react';\r\nimport { ButtonProps, Button, Icon, Menu, MenuItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core';\r\nimport { BATCH_ACTION_MENU } from '../../config/Constant';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    menuIcon: {\r\n        color: theme.palette.primary.dark,\r\n        display: 'inline-flex',\r\n        flexShrink: 0,\r\n        minWidth: theme.spacing(4),\r\n    },\r\n    menuText: {\r\n        color: theme.palette.primary.dark,\r\n    },\r\n}));\r\n\r\ntype ActionMenuProps = {\r\n    ...ButtonProps,\r\n    label: string,\r\n    onMenuItemClick: (item: Object) => void,\r\n};\r\n\r\nconst ActionMenu = (props: ActionMenuProps) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const { label, onMenuItemClick, ...buttonProps } = props;\r\n    const classes = styles();\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClick = item => {\r\n        setAnchorEl(null);\r\n        onMenuItemClick(item);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={event => setAnchorEl(event.currentTarget)} variant=\"contained\" aria-label=\"Batch Actions\" {...buttonProps}>\r\n                {label ? label : 'Action'}\r\n                <Icon>arrow_drop_down</Icon>\r\n            </Button>\r\n            <Menu id=\"actions-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n                {BATCH_ACTION_MENU.map((item, index) => {\r\n                    return (\r\n                        <MenuItem key={item.id + '-' + index} onClick={() => handleClick(item)}>\r\n                            <ListItemIcon className={classes.menuIcon}>\r\n                                <Icon style={{ color: item.color }}>{item.icon}</Icon>\r\n                            </ListItemIcon>\r\n                            <ListItemText inset={false} primary={item.label} className={classes.menuText} style={{ color: item.color }} />\r\n                        </MenuItem>\r\n                    );\r\n                })}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nActionMenu.defaultProps = {\r\n    onMenuItemClick: item => console.warn('Undefined onMenuItemClick => ', item),\r\n};\r\n\r\nexport default ActionMenu;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\InfoCard.js",["630","631","632","633","634"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Icon, Typography, Grid, Divider, makeStyles } from '@material-ui/core';\r\nimport { info, warning, success } from '../../config/Theme';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport type InfoCardProps = {\r\n    icon: Any,\r\n    title: String,\r\n    info: String,\r\n    description1: String,\r\n    description2: String,\r\n};\r\n\r\nconst InfoCard = (props: InfoCardProps) => {\r\n    const classes = styles();\r\n    const { icon, title, info, description1, description2 } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Grid container direction=\"row\" alignItems=\"center\">\r\n                    <Grid item xs=\"2\">\r\n                        {icon ? <Icon>{icon}</Icon> : null}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography gutterBottom variant=\"subtitle1\">\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Typography variant=\"h5\">{info}</Typography>\r\n                <Grid container direction=\"row\" alignItems=\"center\">\r\n                    <Grid item xs=\"2\">\r\n                        <Typography style={{ color: warning.main }} gutterBottom variant=\"subtitle1\">\r\n                            {description1}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography gutterBottom variant=\"subtitle1\">\r\n                            {description2}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoCard;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\TabControl.js",["635","636","637","638","639","640","641","642"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Icon, AppBar, Tabs, Tab, Box } from '@material-ui/core';\r\nimport { common } from '../../config/Theme';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: 8,\r\n    },\r\n    tabControl: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    tabTitle: {\r\n        minWidth: 150,\r\n        minHeight: 60,\r\n        flex: 'none',\r\n        textTransform: 'none',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    tabPanel: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport type TabPanelProps = {\r\n    children: Any,\r\n    value: number,\r\n    index: number,\r\n};\r\n\r\nexport const TabPanel = (props: TabPanelProps) => {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={4}>\r\n                    <>{children}</>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst a11yProps = index => {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nexport type TabControlProps = {\r\n    tabs: Object,\r\n    orientation: 'horizontal' | 'vertical',\r\n    indicatorColor: 'secondary' | 'primary',\r\n    // textColor: 'secondary' | 'primary' | 'inherit',\r\n    variant: 'standard' | 'scrollable' | 'fullWidth',\r\n    scrollButtons: 'auto' | 'desktop' | 'on' | 'off',\r\n    onChange: (e, newValue) => void,\r\n};\r\n\r\nconst TabControl = (props: TabScrollButtonProps) => {\r\n    const { tabs, onChange, orientation, /*textColor,*/ indicatorColor, variant, scrollButtons } = props;\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n        if (onChange) onChange(event, newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <AppBar position=\"static\" color=\"primary\"> */}\r\n            <Tabs\r\n                className={classes.tabControl}\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"sundew-tab-control\"\r\n                variant={variant || 'standard'}\r\n                scrollButtons={scrollButtons || 'on'}\r\n                indicatorColor={indicatorColor || 'secondary'}\r\n                // textColor={textColor || 'primary'}\r\n                TabIndicatorProps={{\r\n                    style: {\r\n                        height: 4,\r\n                    },\r\n                }}\r\n                orientation={orientation || 'horizontal'}\r\n            >\r\n                {/* <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant={variant || 'standard'}\r\n                    scrollButtons={scrollButtons || 'on'}\r\n                    indicatorColor={indicatorColor || 'primary'}\r\n                    textColor={textColor || 'primary'}\r\n                    orientation={orientation || 'horizontal'}\r\n                    aria-label=\"scrollable force tabs example\"\r\n                > */}\r\n                {tabs &&\r\n                    tabs.map((tab, index) => (\r\n                        <Tab\r\n                            key={`tab-header-${tabs.indexOf(tab)}`}\r\n                            label={tab.label}\r\n                            className={classes.tabTitle}\r\n                            icon={<Icon>{tab.icon}</Icon>}\r\n                            {...a11yProps(tabs.indexOf(tab))}\r\n                            wrapped\r\n                        />\r\n                    ))}\r\n            </Tabs>\r\n            {/* </AppBar> */}\r\n            {tabs &&\r\n                tabs.map(tab => (\r\n                    <TabPanel className={classes.tabPanel} key={`tab-content-${tabs.indexOf(tab)}`} value={value} index={tabs.indexOf(tab)}>\r\n                        {tab.content}\r\n                    </TabPanel>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabControl;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\GridControl.js",["643","644","645"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: { flexGrow: 1 },\r\n}));\r\n\r\nexport type GridControlProps = {\r\n    direction: 'row' | 'row-reverse' | 'column' | 'column-reverse',\r\n    justify: 'flex-start' | 'center' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly',\r\n    alignItems: 'flex-start' | 'center' | 'flex-end' | 'stretch' | 'baseline',\r\n    spacing: number,\r\n    itemPerDirection: number,\r\n    items: Array<Any>,\r\n};\r\n\r\nconst GridControl = (props: GridControlProps) => {\r\n    const { direction, justify, alignItems, spacing, itemPerDirection, items } = props;\r\n\r\n    let defaultWidth = null;\r\n    if (itemPerDirection) {\r\n        defaultWidth = Math.abs(12 / itemPerDirection);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction={direction} justify={justify} alignItems={alignItems} spacing={spacing}>\r\n                {items\r\n                    ? items.map((i, index) => {\r\n                          let xs = defaultWidth;\r\n                          if (!xs) {\r\n                              xs = i.xs || 12;\r\n                          }\r\n                          console.log('xs', xs);\r\n                          return (\r\n                              <Grid key={`gri-${index}`} item xs={xs}>\r\n                                  {i.content}\r\n                              </Grid>\r\n                          );\r\n                      })\r\n                    : null}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nGridControl.defaultProps = {\r\n    direction: 'row',\r\n    justify: 'flex-start',\r\n    alignItems: 'flex-start',\r\n};\r\n\r\nexport default GridControl;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ColorInput.js",["646","647","648","649","650"],"/* @flow */\r\nimport * as React from 'react';\r\nimport { InputBase, InputProps, Icon, Paper, makeStyles, FormControl, InputLabel, Grid, IconButton, FormHelperText } from '@material-ui/core';\r\nimport ColorPicker from './ColorPicker';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nexport type ColorInputProps = {\r\n    ...InputProps,\r\n    value?: Object,\r\n    icon?: string,\r\n    required: boolean,\r\n    label: string,\r\n    display: 'full' | 'simple',\r\n    onValidate?: (event: React.SyntheticEvent<HTMLInputElement>) => string,\r\n    onChange?: (event: React.SyntheticEvent<HTMLInputElement>) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    label: props => ({\r\n        backgroundColor: 'inherit',\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(2),\r\n        color: props.invalid ? theme.palette.error.main : theme.palette.text.primary,\r\n    }),\r\n    openIcon: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    content: props => ({\r\n        backgroundColor: 'inherit',\r\n        minHeight: theme.spacing(6),\r\n        padding: theme.spacing(0.5, 0, 0.5, 1.5),\r\n        borderColor: props.invalid ? theme.palette.error.main : theme.palette.common.gray,\r\n        '&:hover': {\r\n            borderColor: props.invalid ? theme.palette.error.main : theme.palette.primary.main,\r\n        },\r\n    }),\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionButton: {},\r\n    displayBox: {\r\n        width: 40,\r\n        height: 25,\r\n        marginRight: 6,\r\n        border: '1px solid ' + theme.palette.background.default,\r\n    },\r\n}));\r\n\r\nconst ColorInput = (props: ColorInputProps) => {\r\n    const { variant, display, label, id, name, inputRef, value, icon, onChange, onValidate, ...rest } = props;\r\n    const [showColor, setShowColor] = React.useState(false);\r\n    const [color, setColor] = React.useState('');\r\n    const [error, setError] = React.useState('');\r\n    const [invalid, setInvalid] = React.useState(false);\r\n    const classes = styles({ invalid });\r\n    const currentInput = inputRef || React.createRef();\r\n\r\n    React.useEffect(() => {\r\n        const inputData = FormatManager.defaultNull(value);\r\n        if (inputData && color !== inputData) {\r\n            handleClose(inputData);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const handleClose = result => {\r\n        setShowColor(false);\r\n\r\n        if (result) setColor(result || color);\r\n\r\n        const hasData = (result && (result.id || result.length > 0)) || (color && color.length);\r\n        let errorText = '';\r\n        if (props.required && !hasData) {\r\n            errorText = label + \" can't be blank.\";\r\n        } else if (onValidate) {\r\n            errorText = onValidate(\r\n                {\r\n                    target: {\r\n                        name: id || name,\r\n                        value: result || color,\r\n                    },\r\n                },\r\n                result,\r\n            );\r\n        }\r\n        setError(errorText);\r\n        currentInput.current.setCustomValidity(errorText);\r\n        setInvalid(errorText.length > 0);\r\n\r\n        if (onChange) {\r\n            onChange({\r\n                target: {\r\n                    name: id || name,\r\n                    value: result || color,\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleError = error => {\r\n        setShowColor(false);\r\n        setError(error);\r\n    };\r\n\r\n    let variantProps = { style: { border: 'none' } };\r\n    let inputProps = { display: 'none' };\r\n    let boxProps = { marginTop: 8 };\r\n    if (variant !== 'standard') {\r\n        variantProps = {};\r\n    }\r\n\r\n    if (display == 'full') {\r\n        inputProps = { display: 'block' };\r\n        boxProps = {};\r\n    }\r\n\r\n    const displayBox = () => {\r\n        return (\r\n            <>\r\n                {color ? (\r\n                    <div onClick={() => setShowColor(true)} className={classes.displayBox} style={{ backgroundColor: color, ...boxProps }}></div>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ColorPicker title={'Browse ' + label} show={showColor} onClose={handleClose} onError={handleError} />\r\n            <FormControl {...rest} variant=\"outlined\" margin=\"normal\" fullWidth className={classes.root}>\r\n                <InputLabel className={classes.label} shrink htmlFor=\"bootstrap-input\">\r\n                    {label} {props.required ? '*' : ''}\r\n                </InputLabel>\r\n                <Paper {...variantProps} variant=\"outlined\" classes={{ root: classes.content }}>\r\n                    <Grid container>\r\n                        <Grid container item xs={10} sm={10} className={classes.chipContainer} alignItems=\"center\">\r\n                            {icon ? <Icon className={classes.icon}>{icon}</Icon> : null}\r\n                            {displayBox()}\r\n                            <div style={{ position: 'relative', ...inputProps }}>\r\n                                <InputBase\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    inputProps={{ 'aria-label': 'naked' }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    placeholder={'Choose ' + label}\r\n                                    {...rest}\r\n                                    disabled\r\n                                    id={id || name}\r\n                                    name={name || id}\r\n                                    inputRef={currentInput}\r\n                                    value={color || ''}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className={classes.actionButton} container item xs={2} sm={2} justify=\"flex-end\" alignItems=\"center\">\r\n                            <IconButton\r\n                                style={{ ...inputProps }}\r\n                                disableRipple\r\n                                onClick={() => setShowColor(true)}\r\n                                className={classes.openIcon}\r\n                                aria-label=\"Choose\"\r\n                            >\r\n                                <Icon>palette</Icon>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                {invalid ? <FormHelperText error={invalid}>{error}</FormHelperText> : null}\r\n            </FormControl>\r\n        </>\r\n    );\r\n};\r\n\r\nColorInput.defaultProps = {\r\n    variant: 'outlined',\r\n    display: 'full',\r\n};\r\n\r\nexport default ColorInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ChipInput.js",["651","652","653","654","655","656","657"],"import * as React from 'react';\r\nimport {\r\n    InputProps,\r\n    TextField,\r\n    Icon,\r\n    Paper,\r\n    makeStyles,\r\n    FormControl,\r\n    InputLabel,\r\n    Grid,\r\n    Chip,\r\n    InputAdornment,\r\n    FormHelperText,\r\n} from '@material-ui/core';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nexport type ChipInputProps = {\r\n    ...InputProps,\r\n    value?: Object,\r\n    icon?: string,\r\n    required: boolean,\r\n    label: string,\r\n    disableRemove?: boolean,\r\n    disableInsert?: boolean,\r\n    onValidate?: (event: React.SyntheticEvent<HTMLInputElement>) => string,\r\n    onChange?: (event: React.SyntheticEvent<HTMLInputElement>) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    chipTextInput: {\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    label: props => ({\r\n        backgroundColor: 'inherit',\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(2),\r\n        color: props.invalid ? theme.palette.error.main : theme.palette.primary.main,\r\n    }),\r\n    chipTextField: { position: 'relative', flex: 1, paddingRight: 14, paddingLeft: 1 },\r\n    content: props => ({\r\n        backgroundColor: 'inherit',\r\n        minHeight: theme.spacing(6),\r\n        padding: theme.spacing(0.5, 0.5, 0.5, 0.5),\r\n        borderColor: props.invalid ? theme.palette.error.main : theme.palette.common.gray,\r\n        '&:hover': {\r\n            borderColor: props.invalid ? theme.palette.error.main : theme.palette.primary.main,\r\n        },\r\n    }),\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.5, 0, 0),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    placeholder: {\r\n        color: theme.palette.text.hint,\r\n    },\r\n    actionButton: {},\r\n}));\r\n\r\nconst ChipInput = (props: ChipInputProps) => {\r\n    const { variant, label, id, name, inputRef, value, icon, disableRemove, disableInsert, onValidate, onChange, ...rest } = props;\r\n    const [error, setError] = React.useState('');\r\n    const [invalid, setInvalid] = React.useState(false);\r\n    const [newChip, setNewChip] = React.useState('');\r\n    const [items, setItems] = React.useState([]);\r\n    const classes = styles({ invalid });\r\n    const currentInput = inputRef || React.createRef();\r\n\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        const inputData = FormatManager.defaultNull(value);\r\n        if (inputData) {\r\n            var splitData = inputData.split(',');\r\n            if (splitData) {\r\n                setItems(splitData);\r\n            }\r\n            if (onChange) {\r\n                onChange({\r\n                    target: {\r\n                        type: 'chip',\r\n                        name: id || name,\r\n                        value: inputData,\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const handleKeyDown = evt => {\r\n        if (['Enter', 'Tab', ','].includes(evt.key)) {\r\n            evt.preventDefault();\r\n            let chip = newChip;\r\n            console.log('chip', chip);\r\n            if (chip) {\r\n                setItems([...items, chip]);\r\n                setNewChip('');\r\n                if (onChange) {\r\n                    onChange({\r\n                        target: {\r\n                            type: 'chip',\r\n                            name: id || name,\r\n                            value: [...items, chip].join(),\r\n                        },\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTextChange = event => {\r\n        const data = event.target.value;\r\n        let errorText = '';\r\n        if (props.required && (!data || data.length <= 0)) {\r\n            errorText = props.label + \" can't be blank.\";\r\n        } else if (onValidate) {\r\n            errorText = onValidate(event);\r\n        }\r\n        setError(errorText);\r\n        event.target.setCustomValidity(errorText);\r\n        setInvalid(errorText.length > 0);\r\n        setNewChip(data);\r\n    };\r\n\r\n    const handlePaste = evt => {\r\n        evt.preventDefault();\r\n        var pasteValue = evt.clipboardData.getData('text');\r\n        if (currentInput.current && pasteValue !== currentInput.current.value) {\r\n            currentInput.current.value = pasteValue;\r\n            handleTextChange({ type: 'chip', name: id || name, target: currentInput.current });\r\n        }\r\n    };\r\n\r\n    const handleRemove = (item, index) => {\r\n        items.splice(index, 1);\r\n        setItems([...items]);\r\n        if (onChange) {\r\n            onChange({\r\n                target: {\r\n                    type: 'chip',\r\n                    name: id || name,\r\n                    value: items.join(),\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    const buildInputIcon = icon => {\r\n        if (icon) {\r\n            return {\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <Icon>{icon}</Icon>\r\n                    </InputAdornment>\r\n                ),\r\n                ...props.InputProps,\r\n            };\r\n        }\r\n        return props.InputProps;\r\n    };\r\n\r\n    const displayBox = () => {\r\n        return (\r\n            <>\r\n                {items.map((item, index) => {\r\n                    return (\r\n                        <Chip\r\n                            onDelete={disableRemove ? null : () => handleRemove(item, index)}\r\n                            className={classes.chip}\r\n                            key={'chip' + index}\r\n                            label={item}\r\n                        />\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    };\r\n\r\n    const inputPlaceholder = 'Enter ' + FormatManager.camelToReadable(id || name);\r\n\r\n    let variantProps = { variant: variant, elevation: 0 };\r\n    if (variant !== 'standard') {\r\n        variantProps = { ...variantProps, elevation: 1 };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormControl id={id || name} name={name || id} variant=\"outlined\" margin=\"normal\" fullWidth className={classes.root}>\r\n                <InputLabel className={classes.label} shrink htmlFor=\"bootstrap-input\">\r\n                    {label} {props.required ? '*' : ''}\r\n                </InputLabel>\r\n                <Paper {...variantProps} classes={{ root: classes.content }}>\r\n                    <Grid container>\r\n                        <Grid container item xs={12} sm={12} className={classes.chipContainer} alignItems=\"center\">\r\n                            <div className={classes.chipTextField}>{displayBox()}</div>\r\n                            {disableInsert || (\r\n                                <TextField\r\n                                    className={classes.chipTextInput}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    placeholder={inputPlaceholder}\r\n                                    {...rest}\r\n                                    inputRef={currentInput}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onChange={handleTextChange}\r\n                                    onPaste={handlePaste}\r\n                                    InputProps={buildInputIcon(icon)}\r\n                                    value={newChip}\r\n                                />\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                {invalid ? <FormHelperText error={invalid}>{error}</FormHelperText> : null}\r\n            </FormControl>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChipInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ListInput.js",["658","659","660","661"],"import * as React from 'react';\r\nimport { TextFieldProps, TextField, InputBase, Icon, InputAdornment } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nexport type SelectListProps = {\r\n    ...TextFieldProps,\r\n    data: Array<Object>,\r\n    icon?: string,\r\n    required: boolean,\r\n    label: string,\r\n    onLoadItem?: (item: Object) => string,\r\n    onValidate?: (event: React.SyntheticEvent<HTMLInputElement>, value: Object) => string,\r\n    onChange: (event: React.SyntheticEvent<HTMLInputElement>, value: Object) => void,\r\n    disabled: boolean,\r\n};\r\n\r\nconst ListInput = (props: SelectListProps) => {\r\n    const { variant, disabled, id, name, icon, data, inputRef, value, onLoadItem, onChange, onValidate, ...rest } = props;\r\n    const [error, setError] = React.useState('');\r\n    const [invalid, setInvalid] = React.useState(false);\r\n    const [selectedItem, setSelectedItem] = React.useState(value);\r\n\r\n    const currentInput = inputRef || React.createRef();\r\n\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        const newValue = FormatManager.defaultNull(value) || '';\r\n        if (currentInput.current && newValue !== currentInput.current.value) {\r\n            currentInput.current.value = newValue;\r\n            handleChange({ target: currentInput.current }, value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const handleChange = (event, item) => {\r\n        let errorText = '';\r\n        if (props.required && !item) {\r\n            errorText = props.label + \" can't be blank.\";\r\n        } else if (onValidate) {\r\n            errorText = onValidate(event, item);\r\n        }\r\n        setError(errorText);\r\n        currentInput.current.setCustomValidity(errorText);\r\n        setInvalid(errorText.length > 0);\r\n        setSelectedItem(item);\r\n        if (onChange) {\r\n            onChange({\r\n                target: {\r\n                    id: id || name,\r\n                    name: id || name,\r\n                    value: item,\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    const buildInputIcon = inputProps => {\r\n        if (icon) {\r\n            inputProps.startAdornment = (\r\n                <InputAdornment position=\"start\">\r\n                    <Icon>{icon}</Icon>\r\n                </InputAdornment>\r\n            );\r\n        }\r\n        return inputProps;\r\n    };\r\n\r\n    const buildInputField = params => {\r\n        const { InputProps, InputLabelProps, ...otherParams } = params;\r\n        const placeholder = 'Choose ' + FormatManager.camelToReadable(id || name);\r\n\r\n        return (\r\n            <>\r\n                {variant == 'standard' ? (\r\n                    <TextField\r\n                        variant=\"standard\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        placeholder={placeholder}\r\n                        error={invalid}\r\n                        helperText={error}\r\n                        {...otherParams}\r\n                        {...rest}\r\n                        InputProps={buildInputIcon(InputProps)}\r\n                        InputLabelProps={{\r\n                            ...InputLabelProps,\r\n                            shrink: true,\r\n                        }}\r\n                        inputRef={currentInput}\r\n                    />\r\n                ) : (\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        placeholder={placeholder}\r\n                        error={invalid}\r\n                        helperText={error}\r\n                        {...otherParams}\r\n                        {...rest}\r\n                        InputProps={buildInputIcon(InputProps)}\r\n                        InputLabelProps={{\r\n                            ...InputLabelProps,\r\n                            shrink: true,\r\n                        }}\r\n                        inputRef={currentInput}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Autocomplete\r\n            id={id || name}\r\n            name={name || id}\r\n            options={data}\r\n            disabled={disabled}\r\n            getOptionLabel={onLoadItem}\r\n            onChange={handleChange}\r\n            popupIcon={<Icon color=\"primary\">arrow_drop_down</Icon>}\r\n            renderInput={buildInputField}\r\n            disableClearable={true}\r\n            value={selectedItem}\r\n        />\r\n    );\r\n};\r\n\r\nListInput.defaultProps = {\r\n    onLoadItem: item => item.toString(),\r\n};\r\n\r\nexport default ListInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\IconInput.js",["662","663","664","665","666","667","668","669","670"],"/* @flow */\r\nimport * as React from 'react';\r\nimport { InputProps, Icon, Paper, makeStyles, FormControl, InputLabel, Grid, IconButton, Typography, Chip, FormHelperText } from '@material-ui/core';\r\nimport IconPicker from './IconPicker';\r\nimport FormatManager from '../../util/FormatManager';\r\nimport { common } from '../../config/Theme';\r\n\r\nexport type IconInputProps = {\r\n    ...InputProps,\r\n    values?: Array<Object>,\r\n    value?: Object,\r\n    icon?: string,\r\n    multi?: boolean,\r\n    required: boolean,\r\n    disableRemove: boolean,\r\n    label: string,\r\n    onValidate?: (event: React.SyntheticEvent<HTMLInputElement>) => string,\r\n    onChange?: (event: React.SyntheticEvent<HTMLInputElement>) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    label: props => ({\r\n        backgroundColor: 'inherit',\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(2),\r\n        color: props.invalid ? theme.palette.error.main : theme.palette.primary.main,\r\n    }),\r\n    content: props => ({\r\n        backgroundColor: 'inherit',\r\n        minHeight: theme.spacing(6),\r\n        padding: theme.spacing(0.5, 0, 0.5, 1.5),\r\n        borderColor: props.invalid ? theme.palette.error.main : theme.palette.common.gray,\r\n        '&:hover': {\r\n            borderColor: props.invalid ? theme.palette.error.main : theme.palette.primary.main,\r\n        },\r\n    }),\r\n    openIcon: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.5, 0.5, 0),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    placeholder: {\r\n        color: theme.palette.text.hint,\r\n    },\r\n    actionButton: {},\r\n    hiddenInput: {\r\n        position: 'absolute',\r\n        zIndex: -9999,\r\n        color: theme.palette.background.paper,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft: theme.spacing(5),\r\n        border: 0,\r\n        width: 0,\r\n    },\r\n}));\r\n\r\nconst IconInput = (props: IconInputProps) => {\r\n    const {\r\n        variant,\r\n        height,\r\n        values,\r\n        label,\r\n        id,\r\n        name,\r\n        inputRef,\r\n        value,\r\n        icon,\r\n        placeholder,\r\n        disableRemove,\r\n        multi,\r\n        fields,\r\n        onValidate,\r\n        onChange,\r\n        ...rest\r\n    } = props;\r\n    const [showIcons, setShowIcons] = React.useState(false);\r\n    const [error, setError] = React.useState('');\r\n    const [invalid, setInvalid] = React.useState(false);\r\n    const [selectedData, setSelectedData] = React.useState(FormatManager.defaultNull(multi ? values : value));\r\n    const classes = styles({ invalid });\r\n    const currentInput = inputRef || React.createRef();\r\n\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        const inputData = FormatManager.defaultNull(multi ? values : value);\r\n        if (selectedData !== inputData) {\r\n            handleClose(inputData);\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [values, value]);\r\n\r\n    const handleClose = result => {\r\n        setShowIcons(false);\r\n        if (result === false) {\r\n            return;\r\n        }\r\n        setSelectedData(result);\r\n        const hasData = result && (result.id || result.length > 0);\r\n\r\n        let errorText = '';\r\n        if (props.required && !hasData) {\r\n            errorText = label + \" can't be blank.\";\r\n        } else if (onValidate) {\r\n            errorText = onValidate(\r\n                {\r\n                    target: {\r\n                        name: id || name,\r\n                        value: result,\r\n                    },\r\n                },\r\n                result,\r\n            );\r\n        }\r\n        setError(errorText);\r\n        currentInput.current.setCustomValidity(errorText);\r\n        setInvalid(errorText.length > 0);\r\n\r\n        if (onChange) {\r\n            onChange({\r\n                target: {\r\n                    name: id || name,\r\n                    value: result,\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRemove = item => {\r\n        if (!multi) {\r\n            handleClose(null);\r\n            return;\r\n        }\r\n        let updateSelection = selectedData.filter(x => x.id !== item.id);\r\n        handleClose(updateSelection);\r\n    };\r\n\r\n    const handleError = error => {\r\n        setShowIcons(false);\r\n        setError(error);\r\n    };\r\n\r\n    const displayBox = () => {\r\n        const hasData = selectedData && selectedData.length > 0;\r\n        if (!hasData) {\r\n            return (\r\n                <Typography className={classes.placeholder} variant=\"body1\">\r\n                    {placeholder || 'Choose ' + (label || name || id)}\r\n                </Typography>\r\n            );\r\n        }\r\n        if (multi) {\r\n            return (\r\n                <>\r\n                    {selectedData.map((item, index) => {\r\n                        return (\r\n                            <Chip\r\n                                className={classes.chip}\r\n                                key={item + '_' + index}\r\n                                onDelete={disableRemove ? null : () => handleRemove(item)}\r\n                                icon={<Icon>{item}</Icon>}\r\n                                label={item}\r\n                            />\r\n                        );\r\n                    })}\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <Chip\r\n                {...heightProps}\r\n                className={classes.chip}\r\n                onDelete={disableRemove ? null : () => handleRemove(selectedData)}\r\n                icon={<Icon>{selectedData}</Icon>}\r\n                label={selectedData}\r\n            />\r\n        );\r\n    };\r\n\r\n    let variantProps = { style: { border: 'none' } };\r\n    let heightProps = {};\r\n    let borderProps = {\r\n        // borderBottom: '1px solid ' + common.black,\r\n    };\r\n    if (variant !== 'standard') {\r\n        variantProps = {};\r\n        borderProps = {};\r\n    }\r\n\r\n    if (variant === 'standard' && height) heightProps = { style: { height: height } };\r\n\r\n    return (\r\n        <>\r\n            <IconPicker\r\n                title={'Choose ' + label}\r\n                show={showIcons}\r\n                multi={multi}\r\n                onClose={handleClose}\r\n                onError={handleError}\r\n                selectedData={selectedData}\r\n            />\r\n            <FormControl {...rest} variant=\"outlined\" margin=\"normal\" fullWidth className={classes.root}>\r\n                <InputLabel className={classes.label} shrink htmlFor=\"bootstrap-input\">\r\n                    {label} {props.required ? '*' : ''}\r\n                </InputLabel>\r\n                <Paper {...variantProps} variant=\"outlined\" classes={{ root: classes.content }}>\r\n                    <Grid container style={{ ...borderProps }}>\r\n                        <Grid container item xs={10} sm={10} className={classes.chipContainer} alignItems=\"center\">\r\n                            {icon ? <Icon className={classes.icon}>{icon}</Icon> : null}\r\n                            <div style={{ position: 'relative' }}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={classes.hiddenInput}\r\n                                    defaultValue={selectedData && (selectedData.id || selectedData.length > 0) ? JSON.stringify(selectedData) : ''}\r\n                                    ref={currentInput}\r\n                                    {...rest}\r\n                                />\r\n                                {displayBox()}\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className={classes.actionButton} container item xs={2} sm={2} justify=\"flex-end\" alignItems=\"center\">\r\n                            <IconButton disableRipple onClick={() => setShowIcons(true)} className={classes.openIcon} aria-label=\"Choose\">\r\n                                <Icon>open_in_new</Icon>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                {invalid ? <FormHelperText error={invalid}>{error}</FormHelperText> : null}\r\n            </FormControl>\r\n        </>\r\n    );\r\n};\r\n\r\nIconInput.defaultProps = {\r\n    disableRemove: false,\r\n};\r\n\r\nexport default IconInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ObjectInput.js",["671","672","673","674","675","676","677","678","679"],"import * as React from 'react';\r\nimport { InputProps, Icon, Paper, makeStyles, FormControl, InputLabel, Grid, IconButton, Typography, Chip, FormHelperText } from '@material-ui/core';\r\nimport { TableField } from '../table';\r\nimport TablePicker from './TablePicker';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\nexport type ObjectInputProps = {\r\n    ...InputProps,\r\n    values?: Array<Object>,\r\n    value?: Object,\r\n    icon?: string,\r\n    multi?: boolean,\r\n    fields: Array<TableField>,\r\n    required: boolean,\r\n    label: string,\r\n    disableRemove?: boolean,\r\n    disabledLoad?: boolean,\r\n    onLoadData: (currentPage: number, pageSize: number, sort: string, search: string) => Promise<Any>,\r\n    onLoadItem?: (item: Object) => string,\r\n    onValidate?: (event: React.SyntheticEvent<HTMLInputElement>) => string,\r\n    onChange?: (event: React.SyntheticEvent<HTMLInputElement>) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    label: props => ({\r\n        backgroundColor: 'inherit', //theme.palette.background.paper,\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(2),\r\n        color: props.invalid ? theme.palette.error.main : theme.palette.text.primary,\r\n    }),\r\n    content: props => ({\r\n        backgroundColor: 'inherit',\r\n        minHeight: theme.spacing(6),\r\n        padding: theme.spacing(0.5, 0, 0.5, 1.5),\r\n        borderColor: props.invalid ? theme.palette.error.main : theme.palette.common.gray,\r\n        '&:hover': {\r\n            borderColor: props.invalid ? theme.palette.error.main : theme.palette.primary.main,\r\n        },\r\n    }),\r\n    openIcon: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    disabledOpenIcon: {\r\n        color: theme.palette.common.gray,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.5, 0.5, 0),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    placeholder: {\r\n        color: theme.palette.text.hint,\r\n    },\r\n    actionButton: {},\r\n    hiddenInput: {\r\n        position: 'absolute',\r\n        zIndex: -9999,\r\n        color: theme.palette.background.paper,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft: theme.spacing(5),\r\n        border: 0,\r\n        width: 0,\r\n    },\r\n}));\r\n\r\nconst ObjectInput = (props: ObjectInputProps) => {\r\n    const {\r\n        variant,\r\n        height,\r\n        values,\r\n        label,\r\n        id,\r\n        name,\r\n        inputRef,\r\n        value,\r\n        icon,\r\n        placeholder,\r\n        multi,\r\n        fields,\r\n        disableRemove,\r\n        disabledLoad,\r\n        onValidate,\r\n        onChange,\r\n        onLoadData,\r\n        onLoadItem,\r\n        ...rest\r\n    } = props;\r\n    const [showTable, setShowTable] = React.useState(false);\r\n    const [error, setError] = React.useState('');\r\n    const [invalid, setInvalid] = React.useState(false);\r\n    const [selectedData, setSelectedData] = React.useState(FormatManager.defaultNull(multi ? values : value));\r\n    const classes = styles({ invalid });\r\n    const currentInput = inputRef || React.createRef();\r\n\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        const inputData = FormatManager.defaultNull(multi ? values : value);\r\n        if (selectedData !== inputData) {\r\n            handleClose(inputData);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [values, value]);\r\n\r\n    const handleClose = result => {\r\n        setShowTable(false);\r\n        if (result === false) {\r\n            return;\r\n        }\r\n        setSelectedData(result);\r\n        const hasData = result && (result.id || result.length > 0);\r\n\r\n        let errorText = '';\r\n        if (props.required && !hasData) {\r\n            errorText = label + \" can't be blank.\";\r\n        } else if (onValidate) {\r\n            errorText = onValidate(\r\n                {\r\n                    target: {\r\n                        name: id || name,\r\n                        value: result,\r\n                    },\r\n                },\r\n                result,\r\n            );\r\n        }\r\n        setError(errorText);\r\n        currentInput.current.setCustomValidity(errorText);\r\n        setInvalid(errorText.length > 0);\r\n\r\n        if (onChange) {\r\n            onChange({\r\n                target: {\r\n                    name: id || name,\r\n                    value: result,\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRemove = item => {\r\n        if (!multi) {\r\n            handleClose(null);\r\n            return;\r\n        }\r\n        let updateSelection = selectedData.filter(x => x.id !== item.id);\r\n        handleClose(updateSelection);\r\n    };\r\n\r\n    const handleError = error => {\r\n        setShowTable(false);\r\n        setError(error);\r\n    };\r\n\r\n    const displayBox = () => {\r\n        const hasData = selectedData && (selectedData.id || selectedData.length > 0);\r\n        if (!hasData) {\r\n            return (\r\n                <Typography className={classes.placeholder} variant=\"body1\">\r\n                    {placeholder || 'Choose ' + label}\r\n                </Typography>\r\n            );\r\n        }\r\n        if (multi) {\r\n            return (\r\n                <>\r\n                    {selectedData.map((item, index) => {\r\n                        const display = onLoadItem(item);\r\n                        return (\r\n                            <Chip\r\n                                {...heightProps}\r\n                                onDelete={disableRemove ? null : () => handleRemove(item)}\r\n                                className={classes.chip}\r\n                                key={item.id ? item.id : index}\r\n                                label={display}\r\n                            />\r\n                        );\r\n                    })}\r\n                </>\r\n            );\r\n        }\r\n\r\n        const display = onLoadItem(selectedData);\r\n        if (typeof display === 'object') {\r\n            return (\r\n                <Chip\r\n                    onDelete={disableRemove ? null : () => handleRemove(selectedData)}\r\n                    className={classes.chip}\r\n                    icon={<Icon>{display.icon}</Icon>}\r\n                    label={display.label}\r\n                />\r\n            );\r\n        }\r\n\r\n        if (disableRemove) {\r\n            return <Typography variant=\"body2\">{display}</Typography>;\r\n        }\r\n\r\n        return <Chip onDelete={disableRemove ? null : () => handleRemove(selectedData)} className={classes.chip} label={display} />;\r\n    };\r\n\r\n    let variantProps = { variant: variant, elevation: 0 };\r\n    let heightProps = {};\r\n    if (variant !== 'standard') {\r\n        variantProps = { ...variantProps, elevation: 1 };\r\n    }\r\n\r\n    if (variant === 'standard' && height) heightProps = { style: { height: height } };\r\n\r\n    return (\r\n        <>\r\n            <TablePicker\r\n                title={'Choose ' + label}\r\n                show={showTable}\r\n                multi={multi}\r\n                onLoad={onLoadData}\r\n                fields={fields}\r\n                onClose={handleClose}\r\n                onError={handleError}\r\n                selectedData={selectedData}\r\n                onSelectionChange={result => setSelectedData(result)}\r\n            />\r\n            <FormControl {...rest} variant=\"outlined\" margin=\"normal\" fullWidth className={classes.root}>\r\n                <InputLabel className={classes.label} shrink htmlFor=\"bootstrap-input\">\r\n                    {label} {props.required ? '*' : ''}\r\n                </InputLabel>\r\n                <Paper {...variantProps} classes={{ root: classes.content }}>\r\n                    <Grid container>\r\n                        <Grid container item xs={10} sm={10} className={classes.chipContainer} alignItems=\"center\">\r\n                            {icon ? <Icon className={classes.icon}>{icon}</Icon> : null}\r\n                            <div style={{ position: 'relative' }}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={classes.hiddenInput}\r\n                                    defaultValue={selectedData && (selectedData.id || selectedData.length > 0) ? JSON.stringify(selectedData) : ''}\r\n                                    ref={currentInput}\r\n                                    {...rest}\r\n                                />\r\n                                {displayBox()}\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className={classes.actionButton} container item xs={2} sm={2} justify=\"flex-end\" alignItems=\"center\">\r\n                            {\r\n                                <IconButton\r\n                                    disableRipple\r\n                                    onClick={() => {\r\n                                        disabledLoad || setShowTable(true);\r\n                                    }}\r\n                                    className={!disabledLoad ? classes.openIcon : classes.disabledOpenIcon}\r\n                                    aria-label=\"Choose\"\r\n                                >\r\n                                    <Icon>open_in_new</Icon>\r\n                                </IconButton>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                {invalid ? <FormHelperText error={invalid}>{error}</FormHelperText> : null}\r\n            </FormControl>\r\n        </>\r\n    );\r\n};\r\n\r\nObjectInput.defaultProps = {\r\n    onLoadItem: item => {\r\n        console.warn('Undefined OnLoadItem => ', item);\r\n        return item.id;\r\n    },\r\n    disableRemove: false,\r\n    disabledLoad: false,\r\n};\r\n\r\nexport default ObjectInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\NumberInput.js",["680"],"import * as React from 'react';\r\nimport TextInput, { TextInputProps } from './TextInput';\r\n\r\ntype Props = {\r\n    ...TextInputProps,\r\n    valid?: 'integer' | 'decimal' | 'uInteger' | 'uDecimal',\r\n};\r\n\r\nconst VALIDATE_REGEX = {\r\n    integer: /^-?\\d+$/,\r\n    decimal: /^-?\\d*(\\.\\d+)?$/,\r\n    uInteger: /^\\d+$/,\r\n    uDecimal: /^\\d*(\\.\\d+)?$/,\r\n};\r\n\r\nexport default function NumberInput(props: Props) {\r\n    const { onValidate, ...rest } = props;\r\n\r\n    const handleValidation = event => {\r\n        const value = event.target.value;\r\n        if (!value || value == '') return '';\r\n\r\n        const regex = VALIDATE_REGEX[props.valid];\r\n\r\n        let error = '';\r\n        if (!regex.test(value)) {\r\n            error = 'Invalid number format!';\r\n        } else if (onValidate) {\r\n            error = onValidate(event);\r\n        }\r\n\r\n        return error;\r\n    };\r\n\r\n    return <TextInput type=\"number\" onValidate={handleValidation} {...rest} />;\r\n}\r\n\r\nNumberInput.defaultProps = {\r\n    valid: 'integer',\r\n};\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\CheckboxInput.js",["681"],"/* @flow */\r\nimport * as React from 'react';\r\nimport { FormControlLabel, CheckboxProps, Checkbox } from '@material-ui/core';\r\n\r\nexport type CheckboxInputProps = {\r\n    ...CheckboxProps,\r\n    label: string,\r\n    value: string,\r\n    checked: boolean,\r\n    required: boolean,\r\n};\r\n\r\nconst CheckboxInput = (props: CheckboxInputProps) => {\r\n    const { label, inputRef, value, onChange, checked, ...checkboxProps } = props;\r\n    const [state, setState] = React.useState(checked);\r\n    const currentInput = inputRef || React.createRef();\r\n\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        if (currentInput.current) {\r\n            currentInput.current.checked = checked;\r\n            handleChange({ target: currentInput.current });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [checked]);\r\n\r\n    const handleChange = event => {\r\n        setState(event.target.checked);\r\n        if (onChange && event) {\r\n            onChange(event);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={<Checkbox checked={state} inputRef={currentInput} onChange={handleChange} value={value} color=\"primary\" {...checkboxProps} />}\r\n            label={label}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\PasswordInput.js",["682"],"import * as React from 'react';\r\nimport { InputAdornment, Icon, IconButton } from '@material-ui/core';\r\nimport TextInput, { TextInputProps } from './TextInput';\r\n\r\ntype Props = {\r\n    ...TextInputProps,\r\n    strength?: 'none' | 'moderate' | 'complex',\r\n};\r\n\r\nconst STRENGTH_REGEX = {\r\n    complex: /(?=(.*[0-9]))(?=.*[!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/,\r\n    moderate: /(?=(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/,\r\n};\r\n\r\nexport default function PasswordInput(props: Props) {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const { onValidate, variant, ...rest } = props;\r\n\r\n    const handleValidation = event => {\r\n        const value = event.target.value;\r\n        const regex = STRENGTH_REGEX[props.strength];\r\n        let error = '';\r\n        if (props.strength !== 'none' && !regex.test(value)) {\r\n            error =\r\n                props.strength === 'moderate'\r\n                    ? 'Should have 1 lowercase letter, 1 uppercase letter, 1 number, and be at least 8 characters long.'\r\n                    : 'Should have 1 lowercase letter, 1 uppercase letter, 1 number, 1 special character and be at least 8 characters long';\r\n        } else if (onValidate) {\r\n            error = onValidate(event);\r\n        }\r\n\r\n        return error;\r\n    };\r\n\r\n    let variantProps = { variant: variant };\r\n    if (variant !== 'standard') {\r\n        variantProps = {\r\n            ...variantProps,\r\n            icon: 'lock',\r\n        };\r\n    }\r\n\r\n    return (\r\n        <TextInput\r\n            {...rest}\r\n            type={showPassword ? 'text' : 'password'}\r\n            {...variantProps}\r\n            onValidate={handleValidation}\r\n            InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton onClick={() => setShowPassword(!showPassword)} onMouseDown={() => setShowPassword(!showPassword)}>\r\n                            <Icon color=\"primary\">{showPassword ? 'visibility' : 'visibility_off'}</Icon>\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nPasswordInput.defaultProps = {\r\n    strength: 'none',\r\n};\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\EmailInput.js",["683"],"/* @flow */\r\nimport * as React from 'react';\r\nimport TextInput, { TextInputProps } from './TextInput';\r\nimport FormatManager from '../../util/FormatManager';\r\n\r\ntype Props = {\r\n    ...TextInputProps,\r\n};\r\n\r\nexport default function EmailInput(props: Props) {\r\n    const { variant, onValidate, ...rest } = props;\r\n\r\n    const validateEmail = event => {\r\n        const value = event.target.value;\r\n        let error = '';\r\n        if (!FormatManager.ValidateEmail(value)) {\r\n            error = 'Invalid e-mail address!';\r\n        } else if (onValidate) {\r\n            error = onValidate(event);\r\n        }\r\n\r\n        return error;\r\n    };\r\n    let variantProps = { variant: variant };\r\n    if (variant !== 'standard') {\r\n        variantProps = {\r\n            ...variantProps,\r\n            icon: 'mail',\r\n        };\r\n    }\r\n\r\n    return <TextInput {...variantProps} type=\"email\" onValidate={validateEmail} {...rest} />;\r\n}\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\Copyright.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\api\\ProfileApi.js",[],"D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\MultiImageInput.js",["684","685","686","687","688","689","690","691","692","693","694"],"import React, { useState, createRef, useEffect } from 'react';\r\nimport { InputProps, IconButton, makeStyles, Icon } from '@material-ui/core';\r\nimport ImageInput from './ImageInput';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    ////\r\n}));\r\n\r\nconst MultiImageInput = props => {\r\n    const classes = styles();\r\n    const { id, name, values, onChange, onRemove, ...rest } = props;\r\n    const [images, setImages] = useState([{}]);\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        console.log('multi-image-here-set', images, values);\r\n        if (images.length == 1 && Object.entries(images[0]).length === 0) setImages(values ? [...values, {}] : [{}]);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [values]);\r\n\r\n    const handleChange = (obj, idx) => {\r\n        images[idx] = obj;\r\n        console.log('multi-image-here', obj, idx);\r\n        if (onChange) {\r\n            onChange(\r\n                {\r\n                    target: {\r\n                        type: 'multi-image',\r\n                        name: id || name,\r\n                        value: obj.target.value,\r\n                    },\r\n                },\r\n                idx,\r\n            );\r\n        }\r\n        if (!obj.target || !obj.target.value) {\r\n            setImages([...images]);\r\n            console.log('here 1');\r\n            return;\r\n        }\r\n        if (idx == images.length - 1) {\r\n            setImages([...images, {}]);\r\n            console.log('here 2');\r\n        } else {\r\n            setImages([...images]);\r\n            console.log('here 3');\r\n        }\r\n    };\r\n\r\n    const handleRemove = idx => {\r\n        if (onChange) {\r\n            onChange(\r\n                {\r\n                    target: {\r\n                        type: 'multi-image',\r\n                        name: id || name,\r\n                        value: {},\r\n                    },\r\n                },\r\n                idx,\r\n            );\r\n        }\r\n\r\n        // let result = JSON.parse(JSON.stringify(images));\r\n        // result.splice(idx, 1);\r\n        // for (var i = 0; i < result.length; i++) {\r\n        //     console.log('remove img', idx, result[i].target);\r\n        // }\r\n        // setImages([...result]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {images.map((img, idx) => {\r\n                console.log('img', idx, img);\r\n                return (\r\n                    <>\r\n                        <ImageInput\r\n                            size={{ width: 120, height: 120 }}\r\n                            key={'img' + idx}\r\n                            index={idx}\r\n                            value={img}\r\n                            onChange={handleChange}\r\n                            onRemove={handleRemove}\r\n                            {...rest}\r\n                        />\r\n                    </>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultiImageInput;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ImageInput.js",["695","696","697","698","699","700","701","702"],"import React, { useState, createRef, useEffect } from 'react';\r\nimport { InputProps, IconButton, makeStyles, Icon } from '@material-ui/core';\r\nimport ListPicker from './ListPicker';\r\nimport FileApi from '../../api/FileApi';\r\nimport FilePicker from './FilePicker';\r\nimport { AlertDialog } from '../message';\r\n\r\ntype ImageSize = {\r\n    width: number,\r\n    height: number,\r\n};\r\n\r\ntype ImageInputProps = {\r\n    ...InputProps,\r\n    size: ?ImageSize,\r\n    enableFilePicker?: boolean,\r\n    disabledUpload?: boolean,\r\n    disabledRemove?: boolean,\r\n    value: Object | string,\r\n    onUpload?: () => void,\r\n    onRemove?: () => void,\r\n    onChange: (image: Object | string) => void,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    container: {\r\n        cursor: 'pointer',\r\n        position: 'relative',\r\n        border: '3px solid ' + theme.palette.primary.light,\r\n        display: 'inline-flex',\r\n        margin: theme.spacing(2, 1),\r\n    },\r\n    removeButton: {\r\n        position: 'absolute',\r\n        top: -12,\r\n        right: -12,\r\n        backgroundColor: theme.palette.error.main,\r\n        color: 'white',\r\n        padding: 0,\r\n        width: 25,\r\n        height: 25,\r\n        fontSize: 12,\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        borderRadius: 40,\r\n    },\r\n    hiddenInput: {\r\n        display: 'none',\r\n        zIndex: -9999,\r\n        color: theme.palette.background.paper,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: 0,\r\n    },\r\n    image: {\r\n        backgroundColor: theme.palette.common.lightGray,\r\n    },\r\n}));\r\n\r\nconst MENU_LIST_ITEMS = [\r\n    {\r\n        id: 'gallery',\r\n        icon: 'photo',\r\n        label: 'Choose From Gallery',\r\n    },\r\n    {\r\n        id: 'upload',\r\n        icon: 'cloud_upload',\r\n        label: 'Upload New Image',\r\n    },\r\n];\r\n\r\nconst ImagePicker = (props: ImageInputProps) => {\r\n    const classes = styles();\r\n    const { id, index, name, size, value, enableFilePicker, disabledUpload, disabledRemove, onChange, onRemove, required, ...rest } = props;\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showFile, setShowFile] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [preview, setPreview] = useState('');\r\n    const [image, setImage] = useState(value);\r\n    const inputUpload = createRef();\r\n\r\n    useEffect(() => {\r\n        const imageURL = FileApi.downloadLink(value, 'small');\r\n        if (imageURL && imageURL !== preview && inputUpload.current) {\r\n            handleChange(value, imageURL);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const handleChange = (result, url) => {\r\n        setPreview(url);\r\n        setImage(result);\r\n\r\n        if (onChange && result && url) {\r\n            var obj = {\r\n                target: {\r\n                    id: id || name,\r\n                    name: id || name,\r\n                    value: result,\r\n                    type: 'image',\r\n                    url: url,\r\n                },\r\n            };\r\n            console.log('img input', obj);\r\n            onChange(obj, index);\r\n        }\r\n    };\r\n\r\n    const handleImageClick = () => {\r\n        if (!disabledUpload && enableFilePicker) {\r\n            setShowMenu(true);\r\n        } else if (disabledUpload && enableFilePicker) {\r\n            setShowFile(true);\r\n        } else if (!enableFilePicker) {\r\n            inputUpload.current.click();\r\n        }\r\n    };\r\n\r\n    const handleCloseMenu = item => {\r\n        if (item.id === 'gallery') {\r\n            setShowFile(true);\r\n        } else if (item.id === 'upload') {\r\n            inputUpload.current.click();\r\n        }\r\n\r\n        setShowMenu(false);\r\n    };\r\n\r\n    const handleCloseFile = result => {\r\n        setShowFile(false);\r\n        if (result === false) {\r\n            return;\r\n        }\r\n\r\n        const url = FileApi.downloadLink(result, 'small');\r\n        handleChange(result, url);\r\n    };\r\n\r\n    const handleError = error => {\r\n        setShowFile(false);\r\n        setShowMenu(false);\r\n        setError(error);\r\n    };\r\n\r\n    const handleImageChange = event => {\r\n        const files = event.target.files;\r\n        if (files && files.length > 0) {\r\n            const file = files[0];\r\n            const fileReader = new FileReader();\r\n            fileReader.onload = () => {\r\n                handleChange(file, fileReader.result);\r\n            };\r\n            fileReader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const handleRemove = event => {\r\n        if (onRemove) onRemove(index);\r\n        handleChange(null, null);\r\n    };\r\n\r\n    const visibility = !disabledRemove && preview ? 'visible' : 'hidden';\r\n\r\n    const img = preview ? preview : `/${'images/upload.png'}`;\r\n    const objectFit = preview\r\n        ? {}\r\n        : {\r\n              objectFit: 'contain',\r\n          };\r\n\r\n    return (\r\n        <>\r\n            <AlertDialog onClose={() => setError('')} show={error.length > 0} title=\"Error\" message={error} />\r\n            <FilePicker show={showFile} selectedData={image} onClose={handleCloseFile} onError={handleError} title=\"Choose File\" />\r\n            <ListPicker show={showMenu} onClose={handleCloseMenu} data={MENU_LIST_ITEMS} title=\"Choose Action\" />\r\n            <div {...rest} className={[classes.container]}>\r\n                <IconButton style={{ visibility: visibility }} onClick={handleRemove} className={classes.removeButton}>\r\n                    <Icon>close</Icon>\r\n                </IconButton>\r\n                <img\r\n                    onClick={handleImageClick}\r\n                    src={img}\r\n                    className={classes.image}\r\n                    alt={preview && preview.id ? preview.name : 'Uploaded Image'}\r\n                    style={{\r\n                        ...objectFit,\r\n                        maxWidth: size.width,\r\n                        maxHeight: size.height,\r\n                        width: size.width,\r\n                        height: size.height,\r\n                    }}\r\n                />\r\n                <input\r\n                    className={classes.hiddenInput}\r\n                    id={id || name}\r\n                    name={name || id}\r\n                    accept=\"image/*\"\r\n                    type=\"file\"\r\n                    onChange={handleImageChange}\r\n                    ref={inputUpload}\r\n                    {...rest}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nImagePicker.defaultProps = {\r\n    size: { width: 128, height: 128 },\r\n    enableFilePicker: false,\r\n    disabledUpload: false,\r\n    disabledRemove: false,\r\n};\r\n\r\nexport default ImagePicker;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ColorPicker.js",["703","704","705","706","707","708"],"/* @flow */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Grid,\r\n    Typography,\r\n    Zoom,\r\n    makeStyles,\r\n    Icon,\r\n    Tooltip,\r\n    IconButton,\r\n    Breadcrumbs,\r\n    Link,\r\n} from '@material-ui/core';\r\nimport { SwatchesPicker, SketchPicker } from 'react-color';\r\nimport { info } from '../../config/Theme';\r\n\r\ntype ColorPickerProps = {\r\n    show: boolean,\r\n    value: string,\r\n    title?: string,\r\n    onClose: (result: boolean | Object | Array<Object>) => void,\r\n};\r\n\r\nconst DEFAULT_WIDTH = 560;\r\nconst DEFAULT_HEIGHT = 295;\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nconst styles = makeStyles(theme => ({\r\n    content: {\r\n        padding: 0,\r\n        margin: 0,\r\n    },\r\n    body: {\r\n        backgroundColor: theme.palette.background.default,\r\n        borderTop: '1px solid ' + theme.palette.divider,\r\n        borderBottom: '1px solid ' + theme.palette.divider,\r\n        padding: 0,\r\n        margin: 0,\r\n        overflowY: 'hidden',\r\n    },\r\n    header: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    noLoading: {\r\n        height: 4,\r\n        display: 'block',\r\n    },\r\n    titleText: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst ColorPicker = (props: ColorPickerProps) => {\r\n    const classes = styles();\r\n    const { title, value, show, onClose } = props;\r\n    const [color, setColor] = React.useState('#fff');\r\n    const [type, setType] = React.useState('SWATCH');\r\n\r\n    React.useEffect(() => {\r\n        if (value) setColor(value);\r\n    }, [value, show]);\r\n\r\n    const handleChange = newColor => {\r\n        setColor(newColor);\r\n\r\n        if (onClose) onClose(newColor.hex);\r\n    };\r\n\r\n    const handleChangeComplete = newColor => {\r\n        setColor(newColor);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        if (onClose) {\r\n            onClose(color && color.hex ? color.hex : '');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog onEscapeKeyDown={() => onClose(false)} open={show} TransitionComponent={Transition}>\r\n                <DialogTitle className={classes.header}>\r\n                    <Grid container>\r\n                        <Grid container item lg={8} md={8} sm={8} xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n                            <Typography className={classes.titleText} variant=\"h6\" component=\"h1\" noWrap>\r\n                                {title}\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid container item lg={4} md={4} sm={4} xs={12} alignItems=\"center\" justify=\"flex-end\">\r\n                            <Tooltip title=\"Close Dialog\">\r\n                                <IconButton size=\"small\" className={classes.titleText} onClick={() => handleClose()} aria-label=\"Close\">\r\n                                    <Icon>close</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogTitle>\r\n                <DialogContent className={classes.body}>\r\n                    <Breadcrumbs style={{ padding: 12 }} aria-label=\"breadcrumb\">\r\n                        <Link\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                backgroundColor: type == 'SKETCH' ? 'inherit' : info.light,\r\n                                padding: 3,\r\n                                borderRadius: 2,\r\n                            }}\r\n                            color=\"inherit\"\r\n                            onClick={() => setType('SWATCH')}\r\n                        >\r\n                            Material\r\n                        </Link>\r\n                        <Link\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                backgroundColor: type == 'SKETCH' ? info.light : 'inherit',\r\n                                padding: 3,\r\n                                borderRadius: 2,\r\n                            }}\r\n                            color=\"inherit\"\r\n                            onClick={() => setType('SKETCH')}\r\n                        >\r\n                            Custom\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <Grid className={classes.content} container justify=\"center\">\r\n                        {type == 'SKETCH' ? (\r\n                            <SketchPicker width={DEFAULT_WIDTH} color={color} onChangeComplete={handleChangeComplete} />\r\n                        ) : (\r\n                            <SwatchesPicker width={DEFAULT_WIDTH} height={DEFAULT_HEIGHT} onChange={handleChange} />\r\n                        )}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nColorPicker.defaultProps = {\r\n    title: 'Color Browser',\r\n    value: '#fff',\r\n    onError: error => console.warn(error),\r\n};\r\n\r\nexport default ColorPicker;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\TablePicker.js",["709","710","711","712","713","714","715","716"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Grid,\r\n    Typography,\r\n    Zoom,\r\n    LinearProgress,\r\n    makeStyles,\r\n    Icon,\r\n    DialogActions,\r\n    Button,\r\n    Tooltip,\r\n    IconButton,\r\n} from '@material-ui/core';\r\nimport SearchInput from './SearchInput';\r\nimport DataTable from '../table';\r\n\r\ntype TablePickerProps = {\r\n    show: boolean,\r\n    selectedData?: Array<Object> | Object,\r\n    multi?: boolean,\r\n    fields: Array<TableField>,\r\n    onError?: (error: Object | string) => void,\r\n    onLoad?: (currentPage: number, pageSize: number, sort: string, search: string) => Promise<Any>,\r\n    onClose?: (result: Object | Array<Object>) => void,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nconst styles = makeStyles(theme => ({\r\n    content: {\r\n        backgroundColor: theme.palette.background.default,\r\n        borderTop: '1px solid ' + theme.palette.divider,\r\n        borderBottom: '1px solid ' + theme.palette.divider,\r\n        padding: 0,\r\n    },\r\n    header: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    noLoading: {\r\n        height: 4,\r\n        display: 'block',\r\n    },\r\n    closeButton: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst TablePicker = (props: TablePickerProps) => {\r\n    const classes = styles();\r\n    const { title, multi, selectedData, show, fields, onLoad, onClose, onError } = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [checked, setChecked] = useState(() => {\r\n        if (multi && !selectedData) {\r\n            return [];\r\n        }\r\n\r\n        return selectedData;\r\n    });\r\n    const loadData = async (currentPage, pageSize, sort) => {\r\n        setLoading(true);\r\n        try {\r\n            const result = await onLoad(currentPage, pageSize, sort, search);\r\n            setPaging(result);\r\n        } catch (error) {\r\n            onError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const [paging, setPaging] = useState(() => {\r\n        return {\r\n            currentPage: 0,\r\n            pageSize: 10,\r\n            total: 0,\r\n            data: [],\r\n            sort: 'id:DESC',\r\n        };\r\n    });\r\n\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        if (multi && !selectedData) {\r\n            setChecked([]);\r\n        } else {\r\n            setChecked(selectedData);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedData]);\r\n\r\n    useEffect(() => {\r\n        loadData(0, paging.pageSize, paging.sort);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [search]);\r\n\r\n    useEffect(() => {\r\n        if (show && search.length > 0) {\r\n            setSearch('');\r\n        } else if (show) {\r\n            loadData(0, paging.pageSize, paging.sort);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [show]);\r\n\r\n    const handlePageChange = pagination => {\r\n        loadData(pagination.page, pagination.pageSize, pagination.sort);\r\n    };\r\n\r\n    const handleSelectionChange = result => {\r\n        if (multi) {\r\n            setChecked(result);\r\n        }\r\n    };\r\n\r\n    const handleRowClick = item => {\r\n        if (!multi) {\r\n            onClose(item);\r\n            return;\r\n        }\r\n    };\r\n\r\n    const handleClose = action => {\r\n        if (!multi) {\r\n            onClose(false);\r\n            return;\r\n        }\r\n\r\n        if (action) {\r\n            onClose(checked);\r\n        } else {\r\n            setChecked(selectedData || []);\r\n            onClose(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth=\"lg\"\r\n                onEscapeKeyDown={() => handleClose(false)}\r\n                onClose={() => handleClose(false)}\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <DialogTitle className={classes.header}>\r\n                    <Grid container>\r\n                        <Grid container item lg={4} md={4} sm={12} xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n                            <Typography color=\"textPrimary\" variant=\"h6\" component=\"h1\" noWrap>\r\n                                {title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container item lg={4} md={4} sm={8} xs={12} alignItems=\"center\" justify=\"center\" alignContent=\"flex-start\">\r\n                            <SearchInput onSearch={value => setSearch(value)} placeholder=\"Search Files\" />\r\n                        </Grid>\r\n                        <Grid container item lg={4} md={4} sm={4} xs={12} alignItems=\"center\" justify=\"flex-end\">\r\n                            <Tooltip title=\"Close Dialog\">\r\n                                <IconButton size=\"small\" className={classes.closeButton} onClick={() => handleClose(false)} aria-label=\"Close\">\r\n                                    <Icon>close</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogTitle>\r\n                <DialogContent className={classes.content}>\r\n                    {loading ? <LinearProgress /> : <div className={classes.noLoading}></div>}\r\n                    <DataTable\r\n                        multi={multi}\r\n                        items={paging.data}\r\n                        fields={fields}\r\n                        total={paging.total}\r\n                        pageSize={paging.pageSize}\r\n                        currentPage={paging.currentPage}\r\n                        sort={paging.sort}\r\n                        selectedData={checked}\r\n                        onPageChange={handlePageChange}\r\n                        onSelectionChange={handleSelectionChange}\r\n                        onRowClick={multi ? null : handleRowClick}\r\n                    />\r\n                </DialogContent>\r\n                {multi ? (\r\n                    <DialogActions>\r\n                        <Button onClick={() => handleClose(true)} color=\"primary\" variant=\"contained\">\r\n                            <Icon>done</Icon> Ok\r\n                        </Button>\r\n                        <Button onClick={() => handleClose(false)} color=\"default\" variant=\"contained\">\r\n                            <Icon>done</Icon> Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                ) : null}\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nTablePicker.defaultProps = {\r\n    title: 'Data List',\r\n    selectedData: [],\r\n    multi: false,\r\n    onError: error => console.warn('Undefined onError => ', error),\r\n    onSelectionChange: result => console.warn('Undefined onSelectionChange => ', result),\r\n};\r\n\r\nexport default TablePicker;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\IconPicker.js",["717","718","719","720","721","722","723","724","725","726"],"/* @flow */\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Grid,\r\n    Typography,\r\n    Zoom,\r\n    makeStyles,\r\n    Icon,\r\n    DialogActions,\r\n    Button,\r\n    Tooltip,\r\n    IconButton,\r\n    Paper,\r\n} from '@material-ui/core';\r\nimport SearchInput from './SearchInput';\r\nimport { MATERIAL_ICONS } from '../../config/MaterialIcon';\r\n\r\ntype IconPickerProps = {\r\n    show: boolean,\r\n    selectedData: Array<string> | string,\r\n    multi: boolean,\r\n    title?: string,\r\n    onClose: (result: boolean | Object | Array<Object>) => void,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nconst itemStyles = makeStyles(theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        borderRadius: 0,\r\n        display: 'block',\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        padding: theme.spacing(1),\r\n        fontSize: 16,\r\n        fontWeight: 800,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    iconButton: {\r\n        cursor: 'pointer',\r\n        padding: theme.spacing(1),\r\n        margin: theme.spacing(0.5),\r\n        width: 100,\r\n        textAlign: 'center',\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.primary.main,\r\n        '&:hover': {\r\n            background: theme.palette.primary.light,\r\n        },\r\n    },\r\n    closeButton: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    markedIconButton: {\r\n        cursor: 'pointer',\r\n        padding: theme.spacing(1),\r\n        margin: theme.spacing(0.5),\r\n        width: 100,\r\n        textAlign: 'center',\r\n        background: theme.palette.primary.light,\r\n        color: theme.palette.primary.contrastText,\r\n        '&:hover': {\r\n            background: theme.palette.primary.light,\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n    },\r\n    buttonIcon: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    buttonCaption: {\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        fontSize: 11,\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst IconDisplay = props => {\r\n    const classes = itemStyles();\r\n    const { onIconClick, selectedData, filter, multi, icons, id, name } = props;\r\n\r\n    if (!icons || icons.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    let filterIcons = icons;\r\n\r\n    if (filter.length > 0) {\r\n        filterIcons = icons.filter(icon => icon.name.toLowerCase().search(filter.toLowerCase()) !== -1);\r\n    }\r\n\r\n    if (filterIcons.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography variant=\"caption\">{name.toUpperCase()}</Typography>\r\n            </div>\r\n            <Grid container item justify=\"center\" alignItems=\"center\" alignContent=\"center\" xs={12} sm={12} md={12} lg={12}>\r\n                {filterIcons.map((icon, idx) => {\r\n                    if (icon.name.toLowerCase().search(filter.toLowerCase()) === -1) {\r\n                        return null;\r\n                    }\r\n\r\n                    const isMarked = multi ? selectedData.findIndex(x => x === icon.ligature) >= 0 : selectedData === icon.ligature;\r\n                    return (\r\n                        <Paper\r\n                            className={isMarked ? classes.markedIconButton : classes.iconButton}\r\n                            onClick={() => onIconClick(icon)}\r\n                            key={id + '_' + idx}\r\n                            aria-label=\"Icon\"\r\n                        >\r\n                            <div>\r\n                                <Icon fontSize=\"large\" className={classes.buttonIcon}>\r\n                                    {icon.ligature}\r\n                                </Icon>\r\n                            </div>\r\n                            <div className={classes.buttonCaption}>{icon.ligature}</div>\r\n                        </Paper>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n    content: {\r\n        padding: 0,\r\n        margin: 0,\r\n    },\r\n    body: {\r\n        backgroundColor: theme.palette.background.default,\r\n        borderTop: '1px solid ' + theme.palette.divider,\r\n        borderBottom: '1px solid ' + theme.palette.divider,\r\n        padding: 0,\r\n        margin: 0,\r\n    },\r\n    header: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    noLoading: {\r\n        height: 4,\r\n        display: 'block',\r\n    },\r\n}));\r\n\r\nconst IconPicker = (props: IconPickerProps) => {\r\n    const classes = styles();\r\n    const { title, multi, selectedData, show, onClose } = props;\r\n    const [checked, setChecked] = useState(selectedData);\r\n    const [search, setSearch] = useState('');\r\n\r\n    //Set value if props.value changed.\r\n    React.useEffect(() => {\r\n        if (show) {\r\n            console.log('updated selected data => ', selectedData);\r\n            setChecked(selectedData);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedData, show]);\r\n\r\n    const handleClick = item => {\r\n        if (!multi) {\r\n            onClose(item.ligature);\r\n            return;\r\n        }\r\n        const existIdx = checked.findIndex(x => x === item.ligature);\r\n        const updateSelection = existIdx < 0 ? [...checked, item.ligature] : checked.filter(x => x !== item.ligature);\r\n        setChecked(updateSelection);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth maxWidth=\"lg\" onEscapeKeyDown={() => onClose(false)} open={show} TransitionComponent={Transition}>\r\n                <DialogTitle className={classes.header}>\r\n                    <Grid container>\r\n                        <Grid container item lg={4} md={4} sm={12} xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n                            <Typography color=\"inherit\" variant=\"h6\" component=\"h1\" noWrap>\r\n                                {title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container item lg={4} md={4} sm={8} xs={12} alignItems=\"center\" justify=\"center\" alignContent=\"flex-start\">\r\n                            <SearchInput onSearch={value => setSearch(value)} placeholder=\"Search Icons\" />\r\n                        </Grid>\r\n                        <Grid container item lg={4} md={4} sm={4} xs={12} alignItems=\"center\" justify=\"flex-end\">\r\n                            <Tooltip title=\"Close Dialog\">\r\n                                <IconButton color=\"inherit\" size=\"small\" onClick={() => onClose(false)} aria-label=\"Close\">\r\n                                    <Icon color=\"inherit\">close</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogTitle>\r\n                <DialogContent className={classes.body}>\r\n                    <Grid className={classes.content} container justify=\"center\">\r\n                        {MATERIAL_ICONS.categories ? (\r\n                            MATERIAL_ICONS.categories.map((category, idx) => {\r\n                                return (\r\n                                    <IconDisplay\r\n                                        selectedData={checked}\r\n                                        multi={multi}\r\n                                        key={category.id + '_' + idx}\r\n                                        filter={search}\r\n                                        onIconClick={handleClick}\r\n                                        {...category}\r\n                                    />\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <p align=\"center\">There is no icon.</p>\r\n                        )}\r\n                    </Grid>\r\n                </DialogContent>\r\n                {multi ? (\r\n                    <DialogActions>\r\n                        <Button onClick={() => onClose(checked)} color=\"primary\" variant=\"contained\">\r\n                            <Icon>done</Icon> Ok\r\n                        </Button>\r\n                        <Button onClick={() => onClose(false)} color=\"default\" variant=\"contained\">\r\n                            <Icon>close</Icon> Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                ) : null}\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nIconPicker.defaultProps = {\r\n    title: 'Icon Browser',\r\n    selectedData: [],\r\n    onError: error => console.warn(error),\r\n};\r\n\r\nexport default IconPicker;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\FilePicker.js",["727","728","729","730","731","732","733","734","735"],"/* @flow */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Grid,\r\n    Table,\r\n    TableFooter,\r\n    TableRow,\r\n    Typography,\r\n    Zoom,\r\n    LinearProgress,\r\n    makeStyles,\r\n    Icon,\r\n    DialogActions,\r\n    Button,\r\n    Tooltip,\r\n    IconButton,\r\n} from '@material-ui/core';\r\nimport PaginationBar from '../PaginationBar';\r\nimport SearchInput from './SearchInput';\r\nimport FileApi from '../../api/FileApi';\r\nimport FileGrid from '../file/FileGrid';\r\n\r\ntype FilePickerProps = {\r\n    show: boolean,\r\n    selectedData: Array<Object> | Object,\r\n    multi: boolean,\r\n    title?: string,\r\n    currentPage?: number,\r\n    pageSize?: number,\r\n    total?: number,\r\n    onError?: (error: Object | string) => void,\r\n    onSelectionChange?: (result: Object | boolean) => void,\r\n    onClose: (result: Object | Array<Object>) => void,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nconst styles = makeStyles(theme => ({\r\n    content: {\r\n        backgroundColor: theme.palette.background.default,\r\n        borderTop: '1px solid ' + theme.palette.divider,\r\n        borderBottom: '1px solid ' + theme.palette.divider,\r\n        padding: theme.spacing(1),\r\n    },\r\n    header: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    noLoading: {\r\n        height: 4,\r\n        display: 'block',\r\n    },\r\n}));\r\n\r\nconst FilePicker = (props: FilePickerProps) => {\r\n    const classes = styles();\r\n    const { title, multi, selectedData, show, onSelectionChange, onClose, onError } = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const [checked, setChecked] = useState(selectedData);\r\n    const [search, setSearch] = useState('');\r\n\r\n    const loadFiles = async (currentPage, pageSize) => {\r\n        setLoading(true);\r\n        try {\r\n            const result = await FileApi.getPaging(currentPage, pageSize, 'createdAt:DESC', search);\r\n            if (result) {\r\n                setPaging(result);\r\n            }\r\n        } catch (error) {\r\n            onError(error.message || error.title || 'Please check your internet connection and try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const [paging, setPaging] = useState(() => {\r\n        return {\r\n            currentPage: 0,\r\n            pageSize: 24,\r\n            total: 0,\r\n            data: [],\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        setChecked(selectedData);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedData]);\r\n\r\n    useEffect(() => {\r\n        loadFiles(0, paging.pageSize);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [search]);\r\n\r\n    const handleClick = item => {\r\n        if (!multi) {\r\n            onClose(item);\r\n            return;\r\n        }\r\n\r\n        const existIdx = checked.findIndex(x => x.id === item.id);\r\n        const updateSelection = existIdx < 0 ? [...checked, item] : checked.filter(x => x.id !== item.id);\r\n\r\n        setChecked(updateSelection);\r\n        onSelectionChange(updateSelection);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth=\"lg\"\r\n                onEscapeKeyDown={() => onClose(false)}\r\n                onClose={() => onClose(false)}\r\n                open={show}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <DialogTitle className={classes.header}>\r\n                    <Grid container>\r\n                        <Grid container item lg={4} md={4} sm={12} xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n                            <Typography color=\"primary\" variant=\"h6\" component=\"h1\" noWrap>\r\n                                {title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container item lg={4} md={4} sm={8} xs={12} alignItems=\"center\" justify=\"center\" alignContent=\"flex-start\">\r\n                            <SearchInput onSearch={value => setSearch(value)} placeholder=\"Search Files\" />\r\n                        </Grid>\r\n                        <Grid container item lg={4} md={4} sm={4} xs={12} alignItems=\"center\" justify=\"flex-end\">\r\n                            <Tooltip title=\"Close Dialog\">\r\n                                <IconButton size=\"small\" color=\"primary\" onClick={() => onClose(false)} aria-label=\"Close\">\r\n                                    <Icon>close</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {loading ? <LinearProgress /> : <div className={classes.noLoading}></div>}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.content}>\r\n                    <FileGrid data={paging.data} selectedData={checked} onClickItem={handleClick} />\r\n                </DialogContent>\r\n                <Table>\r\n                    <TableFooter>\r\n                        <TableRow>\r\n                            <PaginationBar\r\n                                rowsPerPage={[12, 24, 36, 72]}\r\n                                total={paging.total}\r\n                                pageSize={paging.pageSize}\r\n                                currentPage={paging.currentPage}\r\n                                onPageChange={newPage => loadFiles(newPage, paging.pageSize)}\r\n                                onPageSizeChange={size => loadFiles(0, size)}\r\n                            />\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n                {multi ? (\r\n                    <DialogActions>\r\n                        <Button onClick={() => onClose(true)} color=\"primary\" variant=\"contained\">\r\n                            <Icon>done</Icon> Ok\r\n                        </Button>\r\n                        <Button onClick={() => onClose(false)} color=\"default\" variant=\"contained\">\r\n                            <Icon>close</Icon> Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                ) : null}\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nFilePicker.defaultProps = {\r\n    title: 'File Browser',\r\n    selectedData: [],\r\n    onError: error => console.warn(error),\r\n    onSelectionChange: result => console.warn('Undefined onSelectionChange => ', result),\r\n};\r\n\r\nexport default FilePicker;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\fragment\\control\\ListPicker.js",["736","737","738","739","740","741","742","743","744","745"],"import React, { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    Zoom,\r\n    ListProps,\r\n    List,\r\n    ListSubheader,\r\n    ListItemIcon,\r\n    Icon,\r\n    ListItemText,\r\n    ListItem,\r\n    Divider,\r\n    makeStyles,\r\n    DialogActions,\r\n    Button,\r\n} from '@material-ui/core';\r\n\r\ntype ListPickerProps = {\r\n    ...ListProps,\r\n    data: Array<Objec>,\r\n    show: boolean,\r\n    values?: Array<Object>,\r\n    multi: boolean,\r\n    title: ?string,\r\n    idField?: string,\r\n    iconField?: string,\r\n    labelField?: string,\r\n    onChange?: (result: Object | boolean) => void,\r\n    onClose: (result: Object | Array<Object>) => void,\r\n};\r\n\r\nconst itemStyles = makeStyles(theme => ({\r\n    root: {},\r\n    icon: props => ({\r\n        color: props.selected ? theme.palette.primary.contrastText : theme.palette.primary.dark,\r\n        display: 'inline-flex',\r\n        flexShrink: 0,\r\n        minWidth: theme.spacing(4),\r\n    }),\r\n    text: props => ({\r\n        color: props.selected ? theme.palette.primary.contrastText : theme.palette.primary.dark,\r\n    }),\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom in ref={ref} {...props} />;\r\n});\r\n\r\nconst CustomListItem = props => {\r\n    const { multi, label, icon, isMarked, onClick, ...rest } = props;\r\n    const classes = itemStyles({ selected: isMarked });\r\n\r\n    return (\r\n        <ListItem {...rest} button onClick={onClick} className={classes.root} selected={isMarked}>\r\n            <ListItemIcon className={classes.icon}>\r\n                <Icon>{icon}</Icon>\r\n            </ListItemIcon>\r\n            <ListItemText primary={label} className={classes.text} />\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nconst ListPicker = (props: ListPickerProps) => {\r\n    const { id, name, title, data, multi, show, idField, iconField, labelField, onChange, onClose, ...listProps } = props;\r\n    const [checked, setChecked] = useState(props.values);\r\n    const labeldedBy = id || name + 'list-picker';\r\n\r\n    const handleClick = item => {\r\n        if (!multi) {\r\n            onClose(item);\r\n            return;\r\n        }\r\n\r\n        const existIdx = checked.findIndex(x => x[idField] === item[idField]);\r\n        const selectedData = existIdx < 0 ? [...checked, item] : checked.filter(x => x[idField] !== item[idField]);\r\n\r\n        setChecked(selectedData);\r\n        onChange(selectedData);\r\n    };\r\n\r\n    return (\r\n        <Dialog maxWidth=\"xs\" fullWidth={multi} open={show} onEscapeKeyDown={onClose} onClose={() => onClose(false)} TransitionComponent={Transition}>\r\n            <List\r\n                {...listProps}\r\n                component=\"nav\"\r\n                aria-labelledby={labeldedBy}\r\n                subheader={\r\n                    title && title.length > 0 ? (\r\n                        <ListSubheader component=\"div\" id={labeldedBy + '-subheader'}>\r\n                            {title}\r\n                        </ListSubheader>\r\n                    ) : null\r\n                }\r\n            >\r\n                {data.map((item, idx) => {\r\n                    const isMarked = checked.findIndex(x => x[idField] === item[idField]) >= 0;\r\n                    return (\r\n                        <CustomListItem\r\n                            key={item[idField] + '-' + idx}\r\n                            multi={multi}\r\n                            label={item[labelField]}\r\n                            icon={item[iconField]}\r\n                            isMarked={isMarked}\r\n                            onClick={() => handleClick(item)}\r\n                        />\r\n                    );\r\n                })}\r\n            </List>\r\n            <Divider />\r\n            {multi ? (\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(true)} color=\"primary\" variant=\"contained\">\r\n                        <Icon>done</Icon> Ok\r\n                    </Button>\r\n                    <Button onClick={() => onClose(false)} color=\"default\" variant=\"contained\">\r\n                        <Icon>close</Icon> Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            ) : null}\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nListPicker.defaultProps = {\r\n    multi: false,\r\n    idField: 'id',\r\n    iconField: 'icon',\r\n    labelField: 'label',\r\n    title: '',\r\n    values: [],\r\n    onChange: result => console.warn('Undefined onChange => ', result),\r\n    onClose: () => console.log('Undefined onClose'),\r\n};\r\n\r\nexport default ListPicker;\r\n","D:\\YoeTha\\Web\\Master Frame\\master-panel\\src\\config\\MaterialIcon.js",[],{"ruleId":"746","severity":1,"message":"747","line":23,"column":30,"nodeType":null,"endLine":23,"endColumn":35,"fix":"748"},{"ruleId":"746","severity":1,"message":"749","line":145,"column":34,"nodeType":null,"endLine":145,"endColumn":37,"fix":"750"},{"ruleId":"746","severity":1,"message":"751","line":151,"column":47,"nodeType":null,"endLine":151,"endColumn":48,"fix":"752"},{"ruleId":"746","severity":1,"message":"753","line":154,"column":30,"nodeType":null,"endLine":154,"endColumn":35,"fix":"754"},{"ruleId":"746","severity":1,"message":"755","line":211,"column":50,"nodeType":null,"endLine":211,"endColumn":50,"fix":"756"},{"ruleId":"746","severity":1,"message":"757","line":254,"column":45,"nodeType":null,"endLine":254,"endColumn":50,"fix":"758"},{"ruleId":"759","severity":1,"message":"760","line":5,"column":20,"nodeType":"761","messageId":"762","endLine":5,"endColumn":25},{"ruleId":"759","severity":1,"message":"760","line":42,"column":19,"nodeType":"761","messageId":"762","endLine":42,"endColumn":24},{"ruleId":"759","severity":1,"message":"760","line":72,"column":16,"nodeType":"761","messageId":"762","endLine":72,"endColumn":21},{"ruleId":"759","severity":1,"message":"760","line":39,"column":20,"nodeType":"761","messageId":"762","endLine":39,"endColumn":25},{"ruleId":"759","severity":1,"message":"760","line":42,"column":25,"nodeType":"761","messageId":"762","endLine":42,"endColumn":30},{"ruleId":"759","severity":1,"message":"760","line":43,"column":18,"nodeType":"761","messageId":"762","endLine":43,"endColumn":23},{"ruleId":"759","severity":1,"message":"760","line":61,"column":25,"nodeType":"761","messageId":"762","endLine":61,"endColumn":30},{"ruleId":"759","severity":1,"message":"763","line":82,"column":20,"nodeType":"761","messageId":"762","endLine":82,"endColumn":28},{"ruleId":"759","severity":1,"message":"760","line":51,"column":24,"nodeType":"761","messageId":"762","endLine":51,"endColumn":29},{"ruleId":"759","severity":1,"message":"760","line":72,"column":15,"nodeType":"761","messageId":"762","endLine":72,"endColumn":20},{"ruleId":"759","severity":1,"message":"760","line":29,"column":15,"nodeType":"761","messageId":"762","endLine":29,"endColumn":20},{"ruleId":"759","severity":1,"message":"760","line":32,"column":21,"nodeType":"761","messageId":"762","endLine":32,"endColumn":26},{"ruleId":"759","severity":1,"message":"760","line":29,"column":21,"nodeType":"761","messageId":"762","endLine":29,"endColumn":26},{"ruleId":"759","severity":1,"message":"760","line":45,"column":15,"nodeType":"761","messageId":"762","endLine":45,"endColumn":20},{"ruleId":"759","severity":1,"message":"763","line":108,"column":24,"nodeType":"761","messageId":"762","endLine":108,"endColumn":32},{"ruleId":"759","severity":1,"message":"763","line":121,"column":24,"nodeType":"761","messageId":"762","endLine":121,"endColumn":32},{"ruleId":"759","severity":1,"message":"760","line":94,"column":15,"nodeType":"761","messageId":"762","endLine":94,"endColumn":20},{"ruleId":"759","severity":1,"message":"760","line":65,"column":24,"nodeType":"761","messageId":"762","endLine":65,"endColumn":29},{"ruleId":"759","severity":1,"message":"764","line":42,"column":9,"nodeType":"761","messageId":"762","endLine":42,"endColumn":16},{"ruleId":"759","severity":1,"message":"765","line":43,"column":9,"nodeType":"761","messageId":"762","endLine":43,"endColumn":17},{"ruleId":"759","severity":1,"message":"766","line":44,"column":9,"nodeType":"761","messageId":"762","endLine":44,"endColumn":18},{"ruleId":"759","severity":1,"message":"767","line":45,"column":9,"nodeType":"761","messageId":"762","endLine":45,"endColumn":19},{"ruleId":"759","severity":1,"message":"768","line":46,"column":9,"nodeType":"761","messageId":"762","endLine":46,"endColumn":18},{"ruleId":"759","severity":1,"message":"769","line":47,"column":9,"nodeType":"761","messageId":"762","endLine":47,"endColumn":19},{"ruleId":"746","severity":1,"message":"747","line":97,"column":31,"nodeType":null,"endLine":97,"endColumn":36,"fix":"770"},{"ruleId":"746","severity":1,"message":"757","line":98,"column":11,"nodeType":null,"endLine":98,"endColumn":16,"fix":"771"},{"ruleId":"746","severity":1,"message":"757","line":102,"column":15,"nodeType":null,"endLine":102,"endColumn":20,"fix":"772"},{"ruleId":"746","severity":1,"message":"757","line":109,"column":15,"nodeType":null,"endLine":109,"endColumn":20,"fix":"773"},{"ruleId":"759","severity":1,"message":"774","line":120,"column":9,"nodeType":"761","messageId":"762","endLine":120,"endColumn":20},{"ruleId":"759","severity":1,"message":"775","line":121,"column":9,"nodeType":"761","messageId":"762","endLine":121,"endColumn":24},{"ruleId":"759","severity":1,"message":"765","line":129,"column":9,"nodeType":"761","messageId":"762","endLine":129,"endColumn":17},{"ruleId":"759","severity":1,"message":"766","line":130,"column":9,"nodeType":"761","messageId":"762","endLine":130,"endColumn":18},{"ruleId":"759","severity":1,"message":"767","line":131,"column":9,"nodeType":"761","messageId":"762","endLine":131,"endColumn":19},{"ruleId":"759","severity":1,"message":"768","line":132,"column":9,"nodeType":"761","messageId":"762","endLine":132,"endColumn":18},{"ruleId":"759","severity":1,"message":"769","line":133,"column":9,"nodeType":"761","messageId":"762","endLine":133,"endColumn":19},{"ruleId":"746","severity":1,"message":"776","line":138,"column":42,"nodeType":null,"endLine":138,"endColumn":43,"fix":"777"},{"ruleId":"746","severity":1,"message":"778","line":144,"column":25,"nodeType":null,"endLine":144,"endColumn":30,"fix":"779"},{"ruleId":"746","severity":1,"message":"747","line":207,"column":27,"nodeType":null,"endLine":207,"endColumn":32,"fix":"780"},{"ruleId":"746","severity":1,"message":"781","line":225,"column":25,"nodeType":null,"endLine":225,"endColumn":29,"fix":"782"},{"ruleId":"746","severity":1,"message":"783","line":233,"column":24,"nodeType":null,"endLine":233,"endColumn":28,"fix":"784"},{"ruleId":"746","severity":1,"message":"785","line":234,"column":22,"nodeType":null,"endLine":234,"endColumn":26,"fix":"786"},{"ruleId":"746","severity":1,"message":"787","line":253,"column":48,"nodeType":null,"endLine":253,"endColumn":53,"fix":"788"},{"ruleId":"746","severity":1,"message":"747","line":11,"column":27,"nodeType":null,"endLine":11,"endColumn":32,"fix":"789"},{"ruleId":"746","severity":1,"message":"776","line":9,"column":35,"nodeType":null,"endLine":9,"endColumn":36,"fix":"790"},{"ruleId":"746","severity":1,"message":"776","line":14,"column":48,"nodeType":null,"endLine":14,"endColumn":49,"fix":"791"},{"ruleId":"746","severity":1,"message":"792","line":17,"column":26,"nodeType":null,"endLine":17,"endColumn":31,"fix":"793"},{"ruleId":"746","severity":1,"message":"747","line":28,"column":32,"nodeType":null,"endLine":28,"endColumn":37,"fix":"794"},{"ruleId":"746","severity":1,"message":"747","line":36,"column":27,"nodeType":null,"endLine":36,"endColumn":32,"fix":"795"},{"ruleId":"759","severity":1,"message":"796","line":63,"column":11,"nodeType":"761","messageId":"762","endLine":63,"endColumn":18},{"ruleId":"746","severity":1,"message":"785","line":76,"column":25,"nodeType":null,"endLine":76,"endColumn":29,"fix":"797"},{"ruleId":"759","severity":1,"message":"798","line":76,"column":25,"nodeType":"761","messageId":"762","endLine":76,"endColumn":29},{"ruleId":"746","severity":1,"message":"799","line":78,"column":28,"nodeType":null,"endLine":78,"endColumn":33,"fix":"800"},{"ruleId":"746","severity":1,"message":"778","line":120,"column":38,"nodeType":null,"endLine":120,"endColumn":43,"fix":"801"},{"ruleId":"746","severity":1,"message":"747","line":26,"column":27,"nodeType":null,"endLine":26,"endColumn":32,"fix":"802"},{"ruleId":"759","severity":1,"message":"803","line":50,"column":11,"nodeType":"761","messageId":"762","endLine":50,"endColumn":16},{"ruleId":"746","severity":1,"message":"785","line":60,"column":25,"nodeType":null,"endLine":60,"endColumn":29,"fix":"804"},{"ruleId":"746","severity":1,"message":"778","line":81,"column":51,"nodeType":null,"endLine":81,"endColumn":56,"fix":"805"},{"ruleId":"759","severity":1,"message":"806","line":1,"column":17,"nodeType":"761","messageId":"762","endLine":1,"endColumn":25},{"ruleId":"746","severity":1,"message":"757","line":4,"column":19,"nodeType":null,"endLine":4,"endColumn":24,"fix":"807"},{"ruleId":"759","severity":1,"message":"808","line":20,"column":10,"nodeType":"761","messageId":"762","endLine":20,"endColumn":20},{"ruleId":"746","severity":1,"message":"747","line":45,"column":27,"nodeType":null,"endLine":45,"endColumn":32,"fix":"809"},{"ruleId":"746","severity":1,"message":"778","line":63,"column":30,"nodeType":null,"endLine":63,"endColumn":35,"fix":"810"},{"ruleId":"746","severity":1,"message":"811","line":98,"column":27,"nodeType":null,"endLine":98,"endColumn":28,"fix":"812"},{"ruleId":"746","severity":1,"message":"813","line":146,"column":23,"nodeType":null,"endLine":146,"endColumn":28,"fix":"814"},{"ruleId":"746","severity":1,"message":"815","line":147,"column":27,"nodeType":null,"endLine":147,"endColumn":31,"fix":"816"},{"ruleId":"746","severity":1,"message":"813","line":156,"column":24,"nodeType":null,"endLine":156,"endColumn":29,"fix":"817"},{"ruleId":"746","severity":1,"message":"778","line":171,"column":49,"nodeType":null,"endLine":171,"endColumn":54,"fix":"818"},{"ruleId":"746","severity":1,"message":"747","line":37,"column":33,"nodeType":null,"endLine":37,"endColumn":38,"fix":"819"},{"ruleId":"746","severity":1,"message":"757","line":46,"column":26,"nodeType":null,"endLine":46,"endColumn":31,"fix":"820"},{"ruleId":"746","severity":1,"message":"785","line":50,"column":24,"nodeType":null,"endLine":50,"endColumn":28,"fix":"821"},{"ruleId":"746","severity":1,"message":"822","line":60,"column":36,"nodeType":null,"endLine":60,"endColumn":42,"fix":"823"},{"ruleId":"746","severity":1,"message":"747","line":94,"column":27,"nodeType":null,"endLine":94,"endColumn":32,"fix":"824"},{"ruleId":"746","severity":1,"message":"811","line":103,"column":37,"nodeType":null,"endLine":103,"endColumn":38,"fix":"825"},{"ruleId":"746","severity":1,"message":"826","line":130,"column":19,"nodeType":null,"endLine":130,"endColumn":26,"fix":"827"},{"ruleId":"746","severity":1,"message":"747","line":14,"column":38,"nodeType":null,"endLine":14,"endColumn":43,"fix":"828"},{"ruleId":"746","severity":1,"message":"757","line":56,"column":32,"nodeType":null,"endLine":56,"endColumn":37,"fix":"829"},{"ruleId":"759","severity":1,"message":"764","line":59,"column":67,"nodeType":"761","messageId":"762","endLine":59,"endColumn":74},{"ruleId":"759","severity":1,"message":"765","line":59,"column":76,"nodeType":"761","messageId":"762","endLine":59,"endColumn":84},{"ruleId":"759","severity":1,"message":"766","line":59,"column":86,"nodeType":"761","messageId":"762","endLine":59,"endColumn":95},{"ruleId":"759","severity":1,"message":"767","line":59,"column":97,"nodeType":"761","messageId":"762","endLine":59,"endColumn":107},{"ruleId":"759","severity":1,"message":"768","line":59,"column":109,"nodeType":"761","messageId":"762","endLine":59,"endColumn":118},{"ruleId":"759","severity":1,"message":"769","line":59,"column":120,"nodeType":"761","messageId":"762","endLine":59,"endColumn":130},{"ruleId":"759","severity":1,"message":"830","line":116,"column":27,"nodeType":"761","messageId":"762","endLine":116,"endColumn":32},{"ruleId":"746","severity":1,"message":"747","line":116,"column":27,"nodeType":null,"endLine":116,"endColumn":32,"fix":"831"},{"ruleId":"746","severity":1,"message":"832","line":134,"column":37,"nodeType":null,"endLine":134,"endColumn":43,"fix":"833"},{"ruleId":"746","severity":1,"message":"776","line":135,"column":50,"nodeType":null,"endLine":135,"endColumn":51,"fix":"834"},{"ruleId":"746","severity":1,"message":"776","line":136,"column":94,"nodeType":null,"endLine":136,"endColumn":95,"fix":"835"},{"ruleId":"746","severity":1,"message":"785","line":164,"column":18,"nodeType":null,"endLine":164,"endColumn":22,"fix":"836"},{"ruleId":"746","severity":1,"message":"757","line":19,"column":23,"nodeType":null,"endLine":19,"endColumn":28,"fix":"837"},{"ruleId":"746","severity":1,"message":"747","line":37,"column":26,"nodeType":null,"endLine":37,"endColumn":31,"fix":"838"},{"ruleId":"746","severity":1,"message":"747","line":6,"column":31,"nodeType":null,"endLine":6,"endColumn":36,"fix":"839"},{"ruleId":"746","severity":1,"message":"757","line":7,"column":11,"nodeType":null,"endLine":7,"endColumn":16,"fix":"840"},{"ruleId":"746","severity":1,"message":"757","line":17,"column":12,"nodeType":null,"endLine":17,"endColumn":17,"fix":"841"},{"ruleId":"746","severity":1,"message":"757","line":21,"column":11,"nodeType":null,"endLine":21,"endColumn":16,"fix":"842"},{"ruleId":"759","severity":1,"message":"843","line":45,"column":22,"nodeType":"761","messageId":"762","endLine":45,"endColumn":27},{"ruleId":"746","severity":1,"message":"776","line":83,"column":50,"nodeType":null,"endLine":83,"endColumn":51,"fix":"844"},{"ruleId":"746","severity":1,"message":"845","line":100,"column":18,"nodeType":null,"endLine":100,"endColumn":22,"fix":"846"},{"ruleId":"746","severity":1,"message":"747","line":23,"column":27,"nodeType":null,"endLine":23,"endColumn":32,"fix":"847"},{"ruleId":"746","severity":1,"message":"848","line":82,"column":17,"nodeType":null,"endLine":82,"endColumn":30,"fix":"849"},{"ruleId":"746","severity":1,"message":"845","line":96,"column":27,"nodeType":null,"endLine":96,"endColumn":31,"fix":"850"},{"ruleId":"746","severity":1,"message":"851","line":105,"column":25,"nodeType":null,"endLine":105,"endColumn":31,"fix":"852"},{"ruleId":"746","severity":1,"message":"845","line":106,"column":39,"nodeType":null,"endLine":106,"endColumn":43,"fix":"853"},{"ruleId":"746","severity":1,"message":"845","line":119,"column":26,"nodeType":null,"endLine":119,"endColumn":30,"fix":"854"},{"ruleId":"746","severity":1,"message":"855","line":122,"column":43,"nodeType":null,"endLine":122,"endColumn":44,"fix":"856"},{"ruleId":"759","severity":1,"message":"857","line":144,"column":39,"nodeType":"761","messageId":"762","endLine":144,"endColumn":42},{"ruleId":"746","severity":1,"message":"858","line":175,"column":14,"nodeType":null,"endLine":175,"endColumn":20,"fix":"859"},{"ruleId":"746","severity":1,"message":"747","line":5,"column":27,"nodeType":null,"endLine":5,"endColumn":32,"fix":"860"},{"ruleId":"746","severity":1,"message":"815","line":15,"column":21,"nodeType":null,"endLine":15,"endColumn":25,"fix":"861"},{"ruleId":"746","severity":1,"message":"858","line":24,"column":25,"nodeType":null,"endLine":24,"endColumn":31,"fix":"862"},{"ruleId":"746","severity":1,"message":"863","line":31,"column":40,"nodeType":null,"endLine":31,"endColumn":45,"fix":"864"},{"ruleId":"746","severity":1,"message":"815","line":45,"column":20,"nodeType":null,"endLine":45,"endColumn":24,"fix":"865"},{"ruleId":"746","severity":1,"message":"747","line":14,"column":27,"nodeType":null,"endLine":14,"endColumn":32,"fix":"866"},{"ruleId":"746","severity":1,"message":"778","line":36,"column":30,"nodeType":null,"endLine":36,"endColumn":35,"fix":"867"},{"ruleId":"746","severity":1,"message":"778","line":43,"column":27,"nodeType":null,"endLine":43,"endColumn":32,"fix":"868"},{"ruleId":"746","severity":1,"message":"869","line":5,"column":27,"nodeType":null,"endLine":5,"endColumn":31,"fix":"870"},{"ruleId":"746","severity":1,"message":"871","line":18,"column":26,"nodeType":null,"endLine":18,"endColumn":31,"fix":"872"},{"ruleId":"746","severity":1,"message":"873","line":31,"column":23,"nodeType":null,"endLine":31,"endColumn":26,"fix":"874"},{"ruleId":"746","severity":1,"message":"875","line":34,"column":1,"nodeType":null,"endLine":34,"endColumn":13,"fix":"876"},{"ruleId":"746","severity":1,"message":"877","line":35,"column":13,"nodeType":null,"endLine":35,"endColumn":13,"fix":"878"},{"ruleId":"746","severity":1,"message":"875","line":36,"column":1,"nodeType":null,"endLine":36,"endColumn":13,"fix":"879"},{"ruleId":"746","severity":1,"message":"877","line":37,"column":1,"nodeType":null,"endLine":37,"endColumn":1,"fix":"880"},{"ruleId":"746","severity":1,"message":"871","line":48,"column":23,"nodeType":null,"endLine":48,"endColumn":28,"fix":"881"},{"ruleId":"746","severity":1,"message":"882","line":60,"column":26,"nodeType":null,"endLine":60,"endColumn":30,"fix":"883"},{"ruleId":"746","severity":1,"message":"873","line":64,"column":27,"nodeType":null,"endLine":64,"endColumn":30,"fix":"884"},{"ruleId":"746","severity":1,"message":"885","line":65,"column":44,"nodeType":null,"endLine":65,"endColumn":48,"fix":"886"},{"ruleId":"746","severity":1,"message":"873","line":68,"column":27,"nodeType":null,"endLine":68,"endColumn":30,"fix":"887"},{"ruleId":"746","severity":1,"message":"885","line":69,"column":40,"nodeType":null,"endLine":69,"endColumn":44,"fix":"888"},{"ruleId":"746","severity":1,"message":"873","line":72,"column":30,"nodeType":null,"endLine":72,"endColumn":33,"fix":"889"},{"ruleId":"746","severity":1,"message":"755","line":75,"column":26,"nodeType":null,"endLine":75,"endColumn":26,"fix":"890"},{"ruleId":"746","severity":1,"message":"873","line":81,"column":30,"nodeType":null,"endLine":81,"endColumn":33,"fix":"891"},{"ruleId":"746","severity":1,"message":"892","line":85,"column":28,"nodeType":null,"endLine":85,"endColumn":32,"fix":"893"},{"ruleId":"746","severity":1,"message":"894","line":90,"column":27,"nodeType":null,"endLine":90,"endColumn":31,"fix":"895"},{"ruleId":"746","severity":1,"message":"871","line":113,"column":32,"nodeType":null,"endLine":113,"endColumn":37,"fix":"896"},{"ruleId":"746","severity":1,"message":"811","line":117,"column":22,"nodeType":null,"endLine":117,"endColumn":23,"fix":"897"},{"ruleId":"746","severity":1,"message":"755","line":120,"column":34,"nodeType":null,"endLine":120,"endColumn":34,"fix":"898"},{"ruleId":"746","severity":1,"message":"811","line":133,"column":22,"nodeType":null,"endLine":133,"endColumn":23,"fix":"899"},{"ruleId":"746","severity":1,"message":"900","line":138,"column":25,"nodeType":null,"endLine":138,"endColumn":28,"fix":"901"},{"ruleId":"746","severity":1,"message":"902","line":139,"column":27,"nodeType":null,"endLine":141,"endColumn":13,"fix":"903"},{"ruleId":"746","severity":1,"message":"900","line":144,"column":24,"nodeType":null,"endLine":144,"endColumn":27,"fix":"904"},{"ruleId":"746","severity":1,"message":"905","line":145,"column":27,"nodeType":null,"endLine":147,"endColumn":13,"fix":"906"},{"ruleId":"746","severity":1,"message":"900","line":150,"column":27,"nodeType":null,"endLine":150,"endColumn":30,"fix":"907"},{"ruleId":"746","severity":1,"message":"900","line":165,"column":34,"nodeType":null,"endLine":165,"endColumn":37,"fix":"908"},{"ruleId":"746","severity":1,"message":"778","line":41,"column":30,"nodeType":null,"endLine":41,"endColumn":35,"fix":"909"},{"ruleId":"746","severity":1,"message":"910","line":57,"column":28,"nodeType":null,"endLine":57,"endColumn":32,"fix":"911"},{"ruleId":"746","severity":1,"message":"747","line":30,"column":27,"nodeType":null,"endLine":30,"endColumn":32,"fix":"912"},{"ruleId":"746","severity":1,"message":"913","line":66,"column":62,"nodeType":null,"endLine":66,"endColumn":65,"fix":"914"},{"ruleId":"746","severity":1,"message":"855","line":68,"column":55,"nodeType":null,"endLine":68,"endColumn":56,"fix":"915"},{"ruleId":"746","severity":1,"message":"916","line":113,"column":25,"nodeType":null,"endLine":113,"endColumn":33,"fix":"917"},{"ruleId":"746","severity":1,"message":"778","line":122,"column":32,"nodeType":null,"endLine":122,"endColumn":37,"fix":"918"},{"ruleId":"746","severity":1,"message":"919","line":193,"column":14,"nodeType":null,"endLine":193,"endColumn":19,"fix":"920"},{"ruleId":"746","severity":1,"message":"858","line":194,"column":14,"nodeType":null,"endLine":194,"endColumn":20,"fix":"921"},{"ruleId":"746","severity":1,"message":"922","line":20,"column":29,"nodeType":null,"endLine":20,"endColumn":36,"fix":"923"},{"ruleId":"746","severity":1,"message":"747","line":18,"column":27,"nodeType":null,"endLine":18,"endColumn":32,"fix":"924"},{"ruleId":"759","severity":1,"message":"925","line":12,"column":8,"nodeType":"761","messageId":"762","endLine":12,"endColumn":17},{"ruleId":"746","severity":1,"message":"747","line":15,"column":27,"nodeType":null,"endLine":15,"endColumn":32,"fix":"926"},{"ruleId":"759","severity":1,"message":"803","line":99,"column":11,"nodeType":"761","messageId":"762","endLine":99,"endColumn":16},{"ruleId":"746","severity":1,"message":"855","line":133,"column":52,"nodeType":null,"endLine":133,"endColumn":53,"fix":"927"},{"ruleId":"746","severity":1,"message":"863","line":160,"column":36,"nodeType":null,"endLine":160,"endColumn":41,"fix":"928"},{"ruleId":"746","severity":1,"message":"815","line":162,"column":30,"nodeType":null,"endLine":162,"endColumn":34,"fix":"929"},{"ruleId":"746","severity":1,"message":"930","line":165,"column":25,"nodeType":null,"endLine":165,"endColumn":31,"fix":"931"},{"ruleId":"746","severity":1,"message":"932","line":260,"column":30,"nodeType":null,"endLine":260,"endColumn":40,"fix":"933"},{"ruleId":"746","severity":1,"message":"815","line":264,"column":26,"nodeType":null,"endLine":264,"endColumn":30,"fix":"934"},{"ruleId":"746","severity":1,"message":"858","line":277,"column":35,"nodeType":null,"endLine":277,"endColumn":41,"fix":"935"},{"ruleId":"746","severity":1,"message":"936","line":281,"column":30,"nodeType":null,"endLine":281,"endColumn":38,"fix":"937"},{"ruleId":"746","severity":1,"message":"785","line":294,"column":50,"nodeType":null,"endLine":294,"endColumn":54,"fix":"938"},{"ruleId":"746","severity":1,"message":"851","line":317,"column":34,"nodeType":null,"endLine":317,"endColumn":40,"fix":"939"},{"ruleId":"746","severity":1,"message":"815","line":321,"column":23,"nodeType":null,"endLine":321,"endColumn":27,"fix":"940"},{"ruleId":"759","severity":1,"message":"941","line":321,"column":23,"nodeType":"761","messageId":"762","endLine":321,"endColumn":27},{"ruleId":"746","severity":1,"message":"919","line":325,"column":24,"nodeType":null,"endLine":325,"endColumn":29,"fix":"942"},{"ruleId":"746","severity":1,"message":"785","line":340,"column":17,"nodeType":null,"endLine":340,"endColumn":21,"fix":"943"},{"ruleId":"746","severity":1,"message":"787","line":360,"column":78,"nodeType":null,"endLine":360,"endColumn":83,"fix":"944"},{"ruleId":"746","severity":1,"message":"785","line":420,"column":13,"nodeType":null,"endLine":420,"endColumn":17,"fix":"945"},{"ruleId":"746","severity":1,"message":"919","line":421,"column":14,"nodeType":null,"endLine":421,"endColumn":19,"fix":"946"},{"ruleId":"746","severity":1,"message":"785","line":422,"column":19,"nodeType":null,"endLine":422,"endColumn":23,"fix":"947"},{"ruleId":"759","severity":1,"message":"948","line":66,"column":26,"nodeType":"761","messageId":"762","endLine":66,"endColumn":45},{"ruleId":"746","severity":1,"message":"747","line":9,"column":27,"nodeType":null,"endLine":9,"endColumn":32,"fix":"949"},{"ruleId":"746","severity":1,"message":"792","line":71,"column":32,"nodeType":null,"endLine":71,"endColumn":37,"fix":"950"},{"ruleId":"746","severity":1,"message":"747","line":8,"column":33,"nodeType":null,"endLine":8,"endColumn":38,"fix":"951"},{"ruleId":"746","severity":1,"message":"858","line":41,"column":14,"nodeType":null,"endLine":41,"endColumn":20,"fix":"952"},{"ruleId":"746","severity":1,"message":"747","line":5,"column":27,"nodeType":null,"endLine":5,"endColumn":32,"fix":"953"},{"ruleId":"759","severity":1,"message":"954","line":37,"column":32,"nodeType":"761","messageId":"762","endLine":37,"endColumn":40},{"ruleId":"759","severity":1,"message":"955","line":45,"column":32,"nodeType":"761","messageId":"762","endLine":45,"endColumn":37},{"ruleId":"746","severity":1,"message":"778","line":55,"column":30,"nodeType":null,"endLine":55,"endColumn":35,"fix":"956"},{"ruleId":"759","severity":1,"message":"957","line":28,"column":5,"nodeType":"761","messageId":"762","endLine":28,"endColumn":15},{"ruleId":"746","severity":1,"message":"747","line":66,"column":27,"nodeType":null,"endLine":66,"endColumn":32,"fix":"958"},{"ruleId":"746","severity":1,"message":"747","line":92,"column":38,"nodeType":null,"endLine":92,"endColumn":43,"fix":"959"},{"ruleId":"746","severity":1,"message":"776","line":148,"column":53,"nodeType":null,"endLine":148,"endColumn":54,"fix":"960"},{"ruleId":"746","severity":1,"message":"778","line":162,"column":29,"nodeType":null,"endLine":162,"endColumn":34,"fix":"961"},{"ruleId":"746","severity":1,"message":"962","line":166,"column":50,"nodeType":null,"endLine":166,"endColumn":76,"fix":"963"},{"ruleId":"746","severity":1,"message":"785","line":173,"column":25,"nodeType":null,"endLine":173,"endColumn":29,"fix":"964"},{"ruleId":"746","severity":1,"message":"776","line":179,"column":49,"nodeType":null,"endLine":179,"endColumn":50,"fix":"965"},{"ruleId":"746","severity":1,"message":"776","line":180,"column":94,"nodeType":null,"endLine":180,"endColumn":95,"fix":"966"},{"ruleId":"746","severity":1,"message":"967","line":185,"column":30,"nodeType":null,"endLine":185,"endColumn":34,"fix":"968"},{"ruleId":"746","severity":1,"message":"969","line":193,"column":34,"nodeType":null,"endLine":193,"endColumn":42,"fix":"970"},{"ruleId":"746","severity":1,"message":"971","line":201,"column":30,"nodeType":null,"endLine":201,"endColumn":40,"fix":"972"},{"ruleId":"746","severity":1,"message":"973","line":221,"column":27,"nodeType":null,"endLine":221,"endColumn":30,"fix":"974"},{"ruleId":"746","severity":1,"message":"778","line":281,"column":47,"nodeType":null,"endLine":281,"endColumn":52,"fix":"975"},{"ruleId":"746","severity":1,"message":"776","line":334,"column":58,"nodeType":null,"endLine":334,"endColumn":59,"fix":"976"},{"ruleId":"746","severity":1,"message":"811","line":346,"column":52,"nodeType":null,"endLine":346,"endColumn":53,"fix":"977"},{"ruleId":"759","severity":1,"message":"978","line":346,"column":52,"nodeType":"761","messageId":"762","endLine":346,"endColumn":53},{"ruleId":"746","severity":1,"message":"979","line":401,"column":19,"nodeType":null,"endLine":401,"endColumn":27,"fix":"980"},{"ruleId":"746","severity":1,"message":"858","line":402,"column":24,"nodeType":null,"endLine":402,"endColumn":30,"fix":"981"},{"ruleId":"746","severity":1,"message":"747","line":11,"column":33,"nodeType":null,"endLine":11,"endColumn":38,"fix":"982"},{"ruleId":"759","severity":1,"message":"983","line":16,"column":19,"nodeType":"761","messageId":"762","endLine":16,"endColumn":24},{"ruleId":"759","severity":1,"message":"984","line":16,"column":26,"nodeType":"761","messageId":"762","endLine":16,"endColumn":31},{"ruleId":"759","severity":1,"message":"985","line":16,"column":33,"nodeType":"761","messageId":"762","endLine":16,"endColumn":37},{"ruleId":"759","severity":1,"message":"986","line":16,"column":39,"nodeType":"761","messageId":"762","endLine":16,"endColumn":47},{"ruleId":"759","severity":1,"message":"987","line":16,"column":49,"nodeType":"761","messageId":"762","endLine":16,"endColumn":55},{"ruleId":"759","severity":1,"message":"988","line":16,"column":57,"nodeType":"761","messageId":"762","endLine":16,"endColumn":67},{"ruleId":"759","severity":1,"message":"989","line":16,"column":69,"nodeType":"761","messageId":"762","endLine":16,"endColumn":77},{"ruleId":"746","severity":1,"message":"747","line":6,"column":27,"nodeType":null,"endLine":6,"endColumn":32,"fix":"990"},{"ruleId":"746","severity":1,"message":"785","line":33,"column":25,"nodeType":null,"endLine":33,"endColumn":29,"fix":"991"},{"ruleId":"746","severity":1,"message":"778","line":40,"column":30,"nodeType":null,"endLine":40,"endColumn":35,"fix":"992"},{"ruleId":"746","severity":1,"message":"785","line":61,"column":22,"nodeType":null,"endLine":61,"endColumn":26,"fix":"993"},{"ruleId":"759","severity":1,"message":"994","line":2,"column":10,"nodeType":"761","messageId":"762","endLine":2,"endColumn":20},{"ruleId":"759","severity":1,"message":"995","line":3,"column":34,"nodeType":"761","messageId":"762","endLine":3,"endColumn":41},{"ruleId":"759","severity":1,"message":"996","line":4,"column":10,"nodeType":"761","messageId":"762","endLine":4,"endColumn":14},{"ruleId":"759","severity":1,"message":"997","line":4,"column":25,"nodeType":"761","messageId":"762","endLine":4,"endColumn":32},{"ruleId":"746","severity":1,"message":"747","line":6,"column":27,"nodeType":null,"endLine":6,"endColumn":32,"fix":"998"},{"ruleId":"759","severity":1,"message":"999","line":1,"column":17,"nodeType":"761","messageId":"762","endLine":1,"endColumn":25},{"ruleId":"759","severity":1,"message":"1000","line":2,"column":8,"nodeType":"761","messageId":"762","endLine":2,"endColumn":17},{"ruleId":"759","severity":1,"message":"1001","line":4,"column":16,"nodeType":"761","messageId":"762","endLine":4,"endColumn":22},{"ruleId":"759","severity":1,"message":"1002","line":5,"column":10,"nodeType":"761","messageId":"762","endLine":5,"endColumn":16},{"ruleId":"746","severity":1,"message":"747","line":7,"column":30,"nodeType":null,"endLine":7,"endColumn":35,"fix":"1003"},{"ruleId":"746","severity":1,"message":"1004","line":54,"column":19,"nodeType":null,"endLine":54,"endColumn":24,"fix":"1005"},{"ruleId":"759","severity":1,"message":"955","line":112,"column":36,"nodeType":"761","messageId":"762","endLine":112,"endColumn":41},{"ruleId":"746","severity":1,"message":"1006","line":125,"column":26,"nodeType":null,"endLine":125,"endColumn":29,"fix":"1007"},{"ruleId":"759","severity":1,"message":"1008","line":5,"column":7,"nodeType":"761","messageId":"762","endLine":5,"endColumn":16},{"ruleId":"746","severity":1,"message":"747","line":5,"column":30,"nodeType":null,"endLine":5,"endColumn":35,"fix":"1009"},{"ruleId":"759","severity":1,"message":"830","line":5,"column":30,"nodeType":"761","messageId":"762","endLine":5,"endColumn":35},{"ruleId":"746","severity":1,"message":"747","line":18,"column":27,"nodeType":null,"endLine":18,"endColumn":32,"fix":"1010"},{"ruleId":"746","severity":1,"message":"757","line":22,"column":12,"nodeType":null,"endLine":22,"endColumn":17,"fix":"1011"},{"ruleId":"746","severity":1,"message":"757","line":31,"column":14,"nodeType":null,"endLine":31,"endColumn":19,"fix":"1012"},{"ruleId":"746","severity":1,"message":"858","line":69,"column":25,"nodeType":null,"endLine":69,"endColumn":31,"fix":"1013"},{"ruleId":"746","severity":1,"message":"919","line":103,"column":25,"nodeType":null,"endLine":103,"endColumn":30,"fix":"1014"},{"ruleId":"746","severity":1,"message":"747","line":29,"column":27,"nodeType":null,"endLine":29,"endColumn":32,"fix":"1015"},{"ruleId":"746","severity":1,"message":"757","line":37,"column":12,"nodeType":null,"endLine":37,"endColumn":17,"fix":"1016"},{"ruleId":"746","severity":1,"message":"757","line":44,"column":14,"nodeType":null,"endLine":44,"endColumn":19,"fix":"1017"},{"ruleId":"746","severity":1,"message":"973","line":97,"column":27,"nodeType":null,"endLine":97,"endColumn":30,"fix":"1018"},{"ruleId":"746","severity":1,"message":"778","line":118,"column":30,"nodeType":null,"endLine":118,"endColumn":35,"fix":"1019"},{"ruleId":"746","severity":1,"message":"973","line":132,"column":25,"nodeType":null,"endLine":132,"endColumn":28,"fix":"1020"},{"ruleId":"746","severity":1,"message":"910","line":155,"column":28,"nodeType":null,"endLine":155,"endColumn":32,"fix":"1021"},{"ruleId":"759","severity":1,"message":"1022","line":2,"column":37,"nodeType":"761","messageId":"762","endLine":2,"endColumn":46},{"ruleId":"746","severity":1,"message":"1023","line":58,"column":28,"nodeType":null,"endLine":58,"endColumn":38,"fix":"1024"},{"ruleId":"746","severity":1,"message":"1025","line":69,"column":29,"nodeType":null,"endLine":69,"endColumn":35,"fix":"1026"},{"ruleId":"746","severity":1,"message":"785","line":131,"column":17,"nodeType":null,"endLine":131,"endColumn":21,"fix":"1027"},{"ruleId":"759","severity":1,"message":"1002","line":6,"column":10,"nodeType":"761","messageId":"762","endLine":6,"endColumn":16},{"ruleId":"746","severity":1,"message":"747","line":21,"column":27,"nodeType":null,"endLine":21,"endColumn":32,"fix":"1028"},{"ruleId":"746","severity":1,"message":"757","line":25,"column":12,"nodeType":null,"endLine":25,"endColumn":17,"fix":"1029"},{"ruleId":"746","severity":1,"message":"757","line":31,"column":14,"nodeType":null,"endLine":31,"endColumn":19,"fix":"1030"},{"ruleId":"759","severity":1,"message":"1031","line":78,"column":9,"nodeType":"761","messageId":"762","endLine":78,"endColumn":15},{"ruleId":"746","severity":1,"message":"858","line":100,"column":25,"nodeType":null,"endLine":100,"endColumn":31,"fix":"1032"},{"ruleId":"746","severity":1,"message":"785","line":136,"column":26,"nodeType":null,"endLine":136,"endColumn":30,"fix":"1033"},{"ruleId":"746","severity":1,"message":"776","line":141,"column":51,"nodeType":null,"endLine":141,"endColumn":52,"fix":"1034"},{"ruleId":"746","severity":1,"message":"919","line":145,"column":25,"nodeType":null,"endLine":145,"endColumn":30,"fix":"1035"},{"ruleId":"746","severity":1,"message":"747","line":24,"column":27,"nodeType":null,"endLine":24,"endColumn":32,"fix":"1036"},{"ruleId":"746","severity":1,"message":"757","line":28,"column":12,"nodeType":null,"endLine":28,"endColumn":17,"fix":"1037"},{"ruleId":"746","severity":1,"message":"757","line":34,"column":14,"nodeType":null,"endLine":34,"endColumn":19,"fix":"1038"},{"ruleId":"746","severity":1,"message":"858","line":108,"column":25,"nodeType":null,"endLine":108,"endColumn":31,"fix":"1039"},{"ruleId":"746","severity":1,"message":"785","line":144,"column":26,"nodeType":null,"endLine":144,"endColumn":30,"fix":"1040"},{"ruleId":"746","severity":1,"message":"776","line":149,"column":51,"nodeType":null,"endLine":149,"endColumn":52,"fix":"1041"},{"ruleId":"746","severity":1,"message":"919","line":153,"column":25,"nodeType":null,"endLine":153,"endColumn":30,"fix":"1042"},{"ruleId":"746","severity":1,"message":"858","line":224,"column":36,"nodeType":null,"endLine":224,"endColumn":42,"fix":"1043"},{"ruleId":"746","severity":1,"message":"785","line":268,"column":17,"nodeType":null,"endLine":268,"endColumn":21,"fix":"1044"},{"ruleId":"746","severity":1,"message":"778","line":19,"column":30,"nodeType":null,"endLine":19,"endColumn":35,"fix":"1045"},{"ruleId":"746","severity":1,"message":"778","line":27,"column":26,"nodeType":null,"endLine":27,"endColumn":31,"fix":"1046"},{"ruleId":"746","severity":1,"message":"778","line":19,"column":30,"nodeType":null,"endLine":19,"endColumn":35,"fix":"1047"},{"ruleId":"746","severity":1,"message":"778","line":13,"column":27,"nodeType":null,"endLine":13,"endColumn":32,"fix":"1048"},{"ruleId":"759","severity":1,"message":"1049","line":1,"column":27,"nodeType":"761","messageId":"762","endLine":1,"endColumn":36},{"ruleId":"759","severity":1,"message":"1050","line":1,"column":38,"nodeType":"761","messageId":"762","endLine":1,"endColumn":47},{"ruleId":"759","severity":1,"message":"1051","line":2,"column":10,"nodeType":"761","messageId":"762","endLine":2,"endColumn":20},{"ruleId":"759","severity":1,"message":"1052","line":2,"column":22,"nodeType":"761","messageId":"762","endLine":2,"endColumn":32},{"ruleId":"759","severity":1,"message":"1053","line":2,"column":46,"nodeType":"761","messageId":"762","endLine":2,"endColumn":50},{"ruleId":"746","severity":1,"message":"747","line":5,"column":27,"nodeType":null,"endLine":5,"endColumn":32,"fix":"1054"},{"ruleId":"759","severity":1,"message":"830","line":5,"column":27,"nodeType":"761","messageId":"762","endLine":5,"endColumn":32},{"ruleId":"746","severity":1,"message":"757","line":9,"column":25,"nodeType":null,"endLine":9,"endColumn":30,"fix":"1055"},{"ruleId":"759","severity":1,"message":"1056","line":10,"column":11,"nodeType":"761","messageId":"762","endLine":10,"endColumn":18},{"ruleId":"759","severity":1,"message":"1057","line":11,"column":41,"nodeType":"761","messageId":"762","endLine":11,"endColumn":49},{"ruleId":"746","severity":1,"message":"1058","line":49,"column":26,"nodeType":null,"endLine":49,"endColumn":29,"fix":"1059"},{"ruleId":"746","severity":1,"message":"747","line":25,"column":27,"nodeType":null,"endLine":25,"endColumn":32,"fix":"1060"},{"ruleId":"759","severity":1,"message":"1061","line":74,"column":113,"nodeType":"761","messageId":"762","endLine":74,"endColumn":121},{"ruleId":"746","severity":1,"message":"785","line":120,"column":29,"nodeType":null,"endLine":120,"endColumn":33,"fix":"1062"},{"ruleId":"746","severity":1,"message":"858","line":130,"column":29,"nodeType":null,"endLine":130,"endColumn":35,"fix":"1063"},{"ruleId":"746","severity":1,"message":"919","line":140,"column":25,"nodeType":null,"endLine":140,"endColumn":30,"fix":"1064"},{"ruleId":"746","severity":1,"message":"778","line":146,"column":31,"nodeType":null,"endLine":146,"endColumn":36,"fix":"1065"},{"ruleId":"746","severity":1,"message":"778","line":158,"column":26,"nodeType":null,"endLine":158,"endColumn":31,"fix":"1066"},{"ruleId":"759","severity":1,"message":"1067","line":158,"column":26,"nodeType":"761","messageId":"762","endLine":158,"endColumn":31},{"ruleId":"759","severity":1,"message":"999","line":2,"column":17,"nodeType":"761","messageId":"762","endLine":2,"endColumn":25},{"ruleId":"759","severity":1,"message":"1050","line":2,"column":27,"nodeType":"761","messageId":"762","endLine":2,"endColumn":36},{"ruleId":"746","severity":1,"message":"747","line":34,"column":27,"nodeType":null,"endLine":34,"endColumn":32,"fix":"1068"},{"ruleId":"746","severity":1,"message":"1069","line":69,"column":26,"nodeType":null,"endLine":69,"endColumn":34,"fix":"1070"},{"ruleId":"746","severity":1,"message":"1069","line":75,"column":34,"nodeType":null,"endLine":75,"endColumn":42,"fix":"1071"},{"ruleId":"746","severity":1,"message":"919","line":148,"column":14,"nodeType":null,"endLine":148,"endColumn":19,"fix":"1072"},{"ruleId":"746","severity":1,"message":"747","line":34,"column":27,"nodeType":null,"endLine":34,"endColumn":32,"fix":"1073"},{"ruleId":"746","severity":1,"message":"932","line":110,"column":30,"nodeType":null,"endLine":110,"endColumn":40,"fix":"1074"},{"ruleId":"746","severity":1,"message":"858","line":114,"column":35,"nodeType":null,"endLine":114,"endColumn":41,"fix":"1075"},{"ruleId":"746","severity":1,"message":"785","line":120,"column":28,"nodeType":null,"endLine":120,"endColumn":32,"fix":"1076"},{"ruleId":"746","severity":1,"message":"822","line":127,"column":25,"nodeType":null,"endLine":127,"endColumn":31,"fix":"1077"},{"ruleId":"746","severity":1,"message":"787","line":159,"column":52,"nodeType":null,"endLine":159,"endColumn":57,"fix":"1078"},{"ruleId":"746","severity":1,"message":"919","line":205,"column":14,"nodeType":null,"endLine":205,"endColumn":19,"fix":"1079"},{"ruleId":"746","severity":1,"message":"858","line":206,"column":24,"nodeType":null,"endLine":206,"endColumn":30,"fix":"1080"},{"ruleId":"746","severity":1,"message":"747","line":33,"column":31,"nodeType":null,"endLine":33,"endColumn":36,"fix":"1081"},{"ruleId":"746","severity":1,"message":"757","line":86,"column":21,"nodeType":null,"endLine":86,"endColumn":26,"fix":"1082"},{"ruleId":"746","severity":1,"message":"1083","line":97,"column":35,"nodeType":null,"endLine":97,"endColumn":40,"fix":"1084"},{"ruleId":"746","severity":1,"message":"776","line":115,"column":69,"nodeType":null,"endLine":115,"endColumn":70,"fix":"1085"},{"ruleId":"746","severity":1,"message":"747","line":137,"column":27,"nodeType":null,"endLine":137,"endColumn":32,"fix":"1086"},{"ruleId":"746","severity":1,"message":"785","line":173,"column":25,"nodeType":null,"endLine":173,"endColumn":29,"fix":"1087"},{"ruleId":"746","severity":1,"message":"776","line":178,"column":44,"nodeType":null,"endLine":178,"endColumn":45,"fix":"1088"},{"ruleId":"746","severity":1,"message":"776","line":179,"column":93,"nodeType":null,"endLine":179,"endColumn":94,"fix":"1089"},{"ruleId":"746","severity":1,"message":"787","line":194,"column":52,"nodeType":null,"endLine":194,"endColumn":57,"fix":"1090"},{"ruleId":"746","severity":1,"message":"919","line":243,"column":14,"nodeType":null,"endLine":243,"endColumn":19,"fix":"1091"},{"ruleId":"746","severity":1,"message":"747","line":43,"column":27,"nodeType":null,"endLine":43,"endColumn":32,"fix":"1092"},{"ruleId":"746","severity":1,"message":"785","line":99,"column":25,"nodeType":null,"endLine":99,"endColumn":29,"fix":"1093"},{"ruleId":"746","severity":1,"message":"776","line":105,"column":44,"nodeType":null,"endLine":105,"endColumn":45,"fix":"1094"},{"ruleId":"746","severity":1,"message":"776","line":106,"column":84,"nodeType":null,"endLine":106,"endColumn":85,"fix":"1095"},{"ruleId":"746","severity":1,"message":"787","line":130,"column":52,"nodeType":null,"endLine":130,"endColumn":57,"fix":"1096"},{"ruleId":"746","severity":1,"message":"826","line":153,"column":47,"nodeType":null,"endLine":153,"endColumn":54,"fix":"1097"},{"ruleId":"746","severity":1,"message":"1098","line":154,"column":51,"nodeType":null,"endLine":154,"endColumn":55,"fix":"1099"},{"ruleId":"746","severity":1,"message":"919","line":177,"column":14,"nodeType":null,"endLine":177,"endColumn":19,"fix":"1100"},{"ruleId":"746","severity":1,"message":"858","line":178,"column":24,"nodeType":null,"endLine":178,"endColumn":30,"fix":"1101"},{"ruleId":"746","severity":1,"message":"747","line":32,"column":31,"nodeType":null,"endLine":32,"endColumn":36,"fix":"1102"},{"ruleId":"746","severity":1,"message":"757","line":34,"column":11,"nodeType":null,"endLine":34,"endColumn":16,"fix":"1103"},{"ruleId":"746","severity":1,"message":"757","line":40,"column":11,"nodeType":null,"endLine":40,"endColumn":16,"fix":"1104"},{"ruleId":"746","severity":1,"message":"757","line":49,"column":24,"nodeType":null,"endLine":49,"endColumn":29,"fix":"1105"},{"ruleId":"759","severity":1,"message":"843","line":50,"column":13,"nodeType":"761","messageId":"762","endLine":50,"endColumn":18},{"ruleId":"746","severity":1,"message":"785","line":68,"column":25,"nodeType":null,"endLine":68,"endColumn":29,"fix":"1106"},{"ruleId":"746","severity":1,"message":"776","line":74,"column":44,"nodeType":null,"endLine":74,"endColumn":45,"fix":"1107"},{"ruleId":"746","severity":1,"message":"776","line":75,"column":81,"nodeType":null,"endLine":75,"endColumn":82,"fix":"1108"},{"ruleId":"746","severity":1,"message":"776","line":96,"column":56,"nodeType":null,"endLine":96,"endColumn":57,"fix":"1109"},{"ruleId":"746","severity":1,"message":"858","line":131,"column":15,"nodeType":null,"endLine":131,"endColumn":21,"fix":"1110"},"prettier/prettier","Replace `theme` with `(theme)`",{"range":"1111","text":"1112"},"Replace `obj` with `(obj)`",{"range":"1113","text":"1114"},"Replace `m` with `(m)`",{"range":"1115","text":"1116"},"Replace `items` with `(items)`",{"range":"1117","text":"1118"},"Insert `·`",{"range":"1119","text":"1120"},"Replace `props` with `(props)`",{"range":"1121","text":"1122"},"no-unused-vars","'props' is defined but never used.","Identifier","unusedVar","'response' is defined but never used.","'divider' is assigned a value but never used.","'parentId' is assigned a value but never used.","'createdBy' is assigned a value but never used.","'modifiedBy' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'modifiedAt' is assigned a value but never used.",{"range":"1123","text":"1112"},{"range":"1124","text":"1122"},{"range":"1125","text":"1122"},{"range":"1126","text":"1122"},"'parentCount' is assigned a value but never used.","'onMenuItemClick' is assigned a value but never used.","Replace `x` with `(x)`",{"range":"1127","text":"1128"},"Replace `event` with `(event)`",{"range":"1129","text":"1130"},{"range":"1131","text":"1112"},"Replace `menu` with `(menu)`",{"range":"1132","text":"1133"},"Replace `list` with `(list)`",{"range":"1134","text":"1135"},"Replace `item` with `(item)`",{"range":"1136","text":"1137"},"Replace `value` with `(value)`",{"range":"1138","text":"1139"},{"range":"1140","text":"1112"},{"range":"1141","text":"1128"},{"range":"1142","text":"1128"},"Replace `state` with `(state)`",{"range":"1143","text":"1144"},{"range":"1145","text":"1112"},{"range":"1146","text":"1112"},"'history' is assigned a value but never used.",{"range":"1147","text":"1137"},"'item' is defined but never used.","Replace `count` with `(count)`",{"range":"1148","text":"1149"},{"range":"1150","text":"1130"},{"range":"1151","text":"1112"},"'theme' is assigned a value but never used.",{"range":"1152","text":"1137"},{"range":"1153","text":"1130"},"'Children' is defined but never used.",{"range":"1154","text":"1122"},"'background' is defined but never used.",{"range":"1155","text":"1112"},{"range":"1156","text":"1130"},"Replace `e` with `(e)`",{"range":"1157","text":"1158"},"Replace `datas` with `(datas)`",{"range":"1159","text":"1160"},"Replace `data` with `(data)`",{"range":"1161","text":"1162"},{"range":"1163","text":"1160"},{"range":"1164","text":"1130"},{"range":"1165","text":"1112"},{"range":"1166","text":"1122"},{"range":"1167","text":"1137"},"Replace `action` with `(action)`",{"range":"1168","text":"1169"},{"range":"1170","text":"1112"},{"range":"1171","text":"1158"},"Replace `newPage` with `(newPage)`",{"range":"1172","text":"1173"},{"range":"1174","text":"1112"},{"range":"1175","text":"1122"},"'theme' is defined but never used.",{"range":"1176","text":"1112"},"Replace `nodeId` with `(nodeId)`",{"range":"1177","text":"1178"},{"range":"1179","text":"1128"},{"range":"1180","text":"1128"},{"range":"1181","text":"1137"},{"range":"1182","text":"1122"},{"range":"1183","text":"1112"},{"range":"1184","text":"1112"},{"range":"1185","text":"1122"},{"range":"1186","text":"1122"},{"range":"1187","text":"1122"},"'multi' is assigned a value but never used.",{"range":"1188","text":"1128"},"Replace `file` with `(file)`",{"range":"1189","text":"1190"},{"range":"1191","text":"1112"},"Replace `acceptedFiles` with `(acceptedFiles)`",{"range":"1192","text":"1193"},{"range":"1194","text":"1190"},"Replace `status` with `(status)`",{"range":"1195","text":"1196"},{"range":"1197","text":"1190"},{"range":"1198","text":"1190"},"Replace `f` with `(f)`",{"range":"1199","text":"1200"},"'idx' is defined but never used.","Replace `result` with `(result)`",{"range":"1201","text":"1202"},{"range":"1203","text":"1112"},{"range":"1204","text":"1162"},{"range":"1205","text":"1202"},"Replace `field` with `(field)`",{"range":"1206","text":"1207"},{"range":"1208","text":"1162"},{"range":"1209","text":"1112"},{"range":"1210","text":"1130"},{"range":"1211","text":"1130"},"Replace `text` with `(text)`",{"range":"1212","text":"1213"},"Replace `input` with `(input)`",{"range":"1214","text":"1215"},"Replace `str` with `(str)`",{"range":"1216","text":"1217"},"Replace `············` with `················`",{"range":"1218","text":"1219"},"Insert `····`",{"range":"1220","text":"1221"},{"range":"1222","text":"1219"},{"range":"1223","text":"1221"},{"range":"1224","text":"1215"},"Replace `date` with `(date)`",{"range":"1225","text":"1226"},{"range":"1227","text":"1217"},"Replace `word` with `(word)`",{"range":"1228","text":"1229"},{"range":"1230","text":"1217"},{"range":"1231","text":"1229"},{"range":"1232","text":"1217"},{"range":"1233","text":"1120"},{"range":"1234","text":"1217"},"Replace `mail` with `(mail)`",{"range":"1235","text":"1236"},"Replace `user` with `(user)`",{"range":"1237","text":"1238"},{"range":"1239","text":"1215"},{"range":"1240","text":"1158"},{"range":"1241","text":"1120"},{"range":"1242","text":"1158"},"Replace `hex` with `(hex)`",{"range":"1243","text":"1244"},"Replace `␍⏎············.brighten()␍⏎············` with `.brighten()`",{"range":"1245","text":"1246"},{"range":"1247","text":"1244"},"Replace `␍⏎············.darken()␍⏎············` with `.darken()`",{"range":"1248","text":"1249"},{"range":"1250","text":"1244"},{"range":"1251","text":"1244"},{"range":"1252","text":"1130"},"Replace `icon` with `(icon)`",{"range":"1253","text":"1254"},{"range":"1255","text":"1112"},"Replace `val` with `(val)`",{"range":"1256","text":"1257"},{"range":"1258","text":"1200"},"Replace `isSubmit` with `(isSubmit)`",{"range":"1259","text":"1260"},{"range":"1261","text":"1130"},"Replace `error` with `(error)`",{"range":"1262","text":"1263"},{"range":"1264","text":"1202"},"Replace `content` with `(content)`",{"range":"1265","text":"1266"},{"range":"1267","text":"1112"},"'ScrollBar' is defined but never used.",{"range":"1268","text":"1112"},{"range":"1269","text":"1200"},{"range":"1270","text":"1207"},{"range":"1271","text":"1162"},"Replace `(field` with `((field)`",{"range":"1272","text":"1273"},"Replace `pagination` with `(pagination)`",{"range":"1274","text":"1275"},{"range":"1276","text":"1162"},{"range":"1277","text":"1202"},"Replace `menuItem` with `(menuItem)`",{"range":"1278","text":"1279"},{"range":"1280","text":"1137"},{"range":"1281","text":"1196"},{"range":"1282","text":"1162"},"'data' is defined but never used.",{"range":"1283","text":"1263"},{"range":"1284","text":"1137"},{"range":"1285","text":"1139"},{"range":"1286","text":"1137"},{"range":"1287","text":"1263"},{"range":"1288","text":"1137"},"'accessToken' is defined but never used.",{"range":"1289","text":"1112"},{"range":"1290","text":"1144"},{"range":"1291","text":"1112"},{"range":"1292","text":"1202"},{"range":"1293","text":"1112"},"'rowIndex' is assigned a value but never used.","'index' is defined but never used.",{"range":"1294","text":"1130"},"'TabControl' is defined but never used.",{"range":"1295","text":"1112"},{"range":"1296","text":"1112"},{"range":"1297","text":"1128"},{"range":"1298","text":"1130"},"Replace `(x·=>·items.findIndex(item` with `((x)·=>·items.findIndex((item)`",{"range":"1299","text":"1300"},{"range":"1301","text":"1137"},{"range":"1302","text":"1128"},{"range":"1303","text":"1128"},"Replace `page` with `(page)`",{"range":"1304","text":"1305"},"Replace `pageSize` with `(pageSize)`",{"range":"1306","text":"1307"},"Replace `sortString` with `(sortString)`",{"range":"1308","text":"1309"},"Replace `evt` with `(evt)`",{"range":"1310","text":"1311"},{"range":"1312","text":"1130"},{"range":"1313","text":"1128"},{"range":"1314","text":"1158"},"'e' is defined but never used.","Replace `newPaged` with `(newPaged)`",{"range":"1315","text":"1316"},{"range":"1317","text":"1202"},{"range":"1318","text":"1112"},"'align' is assigned a value but never used.","'label' is assigned a value but never used.","'type' is assigned a value but never used.","'sortable' is assigned a value but never used.","'hidden' is assigned a value but never used.","'filterable' is assigned a value but never used.","'minWidth' is assigned a value but never used.",{"range":"1319","text":"1112"},{"range":"1320","text":"1137"},{"range":"1321","text":"1130"},{"range":"1322","text":"1137"},"'withRouter' is defined but never used.","'Divider' is defined but never used.","'info' is defined but never used.","'success' is defined but never used.",{"range":"1323","text":"1112"},"'useState' is defined but never used.","'PropTypes' is defined but never used.","'AppBar' is defined but never used.","'common' is defined but never used.",{"range":"1324","text":"1112"},"Replace `index` with `(index)`",{"range":"1325","text":"1326"},"Replace `tab` with `(tab)`",{"range":"1327","text":"1328"},"'useStyles' is assigned a value but never used.",{"range":"1329","text":"1112"},{"range":"1330","text":"1112"},{"range":"1331","text":"1122"},{"range":"1332","text":"1122"},{"range":"1333","text":"1202"},{"range":"1334","text":"1263"},{"range":"1335","text":"1112"},{"range":"1336","text":"1122"},{"range":"1337","text":"1122"},{"range":"1338","text":"1311"},{"range":"1339","text":"1130"},{"range":"1340","text":"1311"},{"range":"1341","text":"1254"},"'InputBase' is defined but never used.","Replace `inputProps` with `(inputProps)`",{"range":"1342","text":"1343"},"Replace `params` with `(params)`",{"range":"1344","text":"1345"},{"range":"1346","text":"1137"},{"range":"1347","text":"1112"},{"range":"1348","text":"1122"},{"range":"1349","text":"1122"},"'fields' is assigned a value but never used.",{"range":"1350","text":"1202"},{"range":"1351","text":"1137"},{"range":"1352","text":"1128"},{"range":"1353","text":"1263"},{"range":"1354","text":"1112"},{"range":"1355","text":"1122"},{"range":"1356","text":"1122"},{"range":"1357","text":"1202"},{"range":"1358","text":"1137"},{"range":"1359","text":"1128"},{"range":"1360","text":"1263"},{"range":"1361","text":"1202"},{"range":"1362","text":"1137"},{"range":"1363","text":"1130"},{"range":"1364","text":"1130"},{"range":"1365","text":"1130"},{"range":"1366","text":"1130"},"'createRef' is defined but never used.","'useEffect' is defined but never used.","'InputProps' is defined but never used.","'IconButton' is defined but never used.","'Icon' is defined but never used.",{"range":"1367","text":"1112"},{"range":"1368","text":"1122"},"'classes' is assigned a value but never used.","'onRemove' is assigned a value but never used.","Replace `idx` with `(idx)`",{"range":"1369","text":"1370"},{"range":"1371","text":"1112"},"'required' is assigned a value but never used.",{"range":"1372","text":"1137"},{"range":"1373","text":"1202"},{"range":"1374","text":"1263"},{"range":"1375","text":"1130"},{"range":"1376","text":"1130"},"'event' is defined but never used.",{"range":"1377","text":"1112"},"Replace `newColor` with `(newColor)`",{"range":"1378","text":"1379"},{"range":"1380","text":"1379"},{"range":"1381","text":"1263"},{"range":"1382","text":"1112"},{"range":"1383","text":"1275"},{"range":"1384","text":"1202"},{"range":"1385","text":"1137"},{"range":"1386","text":"1169"},{"range":"1387","text":"1139"},{"range":"1388","text":"1263"},{"range":"1389","text":"1202"},{"range":"1390","text":"1112"},{"range":"1391","text":"1122"},"Replace `(icon` with `((icon)`",{"range":"1392","text":"1393"},{"range":"1394","text":"1128"},{"range":"1395","text":"1112"},{"range":"1396","text":"1137"},{"range":"1397","text":"1128"},{"range":"1398","text":"1128"},{"range":"1399","text":"1139"},{"range":"1400","text":"1263"},{"range":"1401","text":"1112"},{"range":"1402","text":"1137"},{"range":"1403","text":"1128"},{"range":"1404","text":"1128"},{"range":"1405","text":"1139"},{"range":"1406","text":"1173"},"Replace `size` with `(size)`",{"range":"1407","text":"1408"},{"range":"1409","text":"1263"},{"range":"1410","text":"1202"},{"range":"1411","text":"1112"},{"range":"1412","text":"1122"},{"range":"1413","text":"1122"},{"range":"1414","text":"1122"},{"range":"1415","text":"1137"},{"range":"1416","text":"1128"},{"range":"1417","text":"1128"},{"range":"1418","text":"1128"},{"range":"1419","text":"1202"},[1098,1103],"(theme)",[4585,4588],"(obj)",[4770,4771],"(m)",[4860,4865],"(items)",[7379,7379]," ",[9276,9281],"(props)",[2827,2832],[2850,2855],[3083,3088],[3331,3336],[4017,4018],"(x)",[4291,4296],"(event)",[6237,6242],[6639,6643],"(menu)",[6798,6802],"(list)",[6830,6834],"(item)",[7400,7405],"(value)",[280,285],[256,257],[406,407],[456,461],"(state)",[648,653],[861,866],[1982,1986],[2024,2029],"(count)",[4418,4423],[531,536],[1446,1450],[1960,1965],[117,122],[1092,1097],[1755,1760],[2688,2689],"(e)",[4463,4468],"(datas)",[4501,4505],"(data)",[4756,4761],[5456,5461],[877,882],[1082,1087],[1219,1223],[1576,1582],"(action)",[2795,2800],[3127,3128],[3886,3893],"(newPage)",[447,452],[1632,1637],[3732,3737],[4230,4236],"(nodeId)",[4292,4293],[4406,4407],[5226,5230],[366,371],[920,925],[239,244],[262,267],[606,611],[783,788],[3074,3075],[3646,3650],"(file)",[499,504],[2108,2121],"(acceptedFiles)",[2586,2590],[2790,2796],"(status)",[2841,2845],[3147,3151],[3312,3313],"(f)",[5587,5593],"(result)",[176,181],[369,373],[657,663],[841,846],"(field)",[1408,1412],[469,474],[1302,1307],[1456,1461],[129,133],"(text)",[456,461],"(input)",[791,794],"(str)",[883,895],"                ",[976,976],"    ",[1031,1043],[1097,1097],[1458,1463],[1719,1723],"(date)",[1806,1809],[1859,1863],"(word)",[1942,1945],[1991,1995],[2084,2087],[2183,2183],[2342,2345],[2444,2448],"(mail)",[2695,2699],"(user)",[3373,3378],[3472,3473],[3596,3596],[3968,3969],[4156,4159],"(hex)",[4192,4231],".brighten()",[4273,4276],[4309,4346],".darken()",[4391,4394],[4926,4929],[1442,1447],[1991,1995],"(icon)",[629,634],[1670,1673],"(val)",[1837,1838],[3661,3669],"(isSubmit)",[3877,3882],[6881,6886],"(error)",[6950,6956],[546,553],"(content)",[601,606],[706,711],[3738,3739],[4582,4587],[4713,4717],[4798,4804],"((field)",[8293,8303],"(pagination)",[8419,8423],[8803,8809],[8889,8897],"(menuItem)",[9330,9334],[10085,10091],[10222,10226],[10382,10387],[10782,10786],[11934,11939],[14614,14618],[14680,14685],[14754,14758],[374,379],[2575,2580],[301,306],[1506,1512],[248,253],[1524,1529],[1607,1612],[2269,2274],[3617,3618],[4005,4010],[4121,4147],"((x) => items.findIndex((item)",[4366,4370],[4520,4521],[4638,4639],[4749,4753],"(page)",[4923,4931],"(pageSize)",[5094,5104],"(sortString)",[5521,5524],"(evt)",[8124,8129],[10672,10673],[11352,11353],[13782,13790],"(newPaged)",[13872,13878],[322,327],[249,254],[921,925],[1057,1062],[2109,2113],[248,253],[279,284],[1433,1438],"(index)",[4156,4159],"(tab)",[158,163],[642,647],[745,750],[1054,1059],[2457,2463],[3461,3466],[680,685],[873,878],[1202,1207],[3028,3031],[3693,3698],[4172,4175],[4914,4918],[2184,2194],"(inputProps)",[2485,2491],"(params)",[4641,4645],[739,744],[821,826],[1061,1066],[3101,3107],[4108,4112],[4256,4257],[4354,4359],[934,939],[1016,1021],[1290,1295],[3473,3479],[4480,4484],[4628,4629],[4726,4731],[7210,7216],[9555,9559],[475,480],[879,884],[689,694],[340,345],[211,216],[266,271],[1626,1629],"(idx)",[707,712],[3479,3483],[3726,3732],[3965,3970],[4101,4106],[4488,4493],[759,764],[1685,1693],"(newColor)",[1819,1827],[5034,5039],[882,887],[3078,3088],[3213,3219],[3329,3333],[3457,3463],[4652,4657],[6785,6790],[6864,6870],[750,755],[2212,2217],[2510,2515],"((icon)",[3254,3255],[4166,4171],[5215,5219],[5361,5362],[5481,5482],[6327,6332],[8660,8665],[1053,1058],[2790,2794],[2929,2930],[3037,3038],[4074,4079],[5425,5432],[5524,5528],"(size)",[6333,6338],[6387,6393],[661,666],[699,704],[923,928],[1198,1203],[1990,1994],[2129,2130],[2246,2247],[3069,3070],[4287,4293]]